{"version":3,"sources":["webpack:///./node_modules/antlr4/atn/ParserATNSimulator.js","webpack:///./node_modules/freelog_policy_compiler/BeautifyExtension.js","webpack:///./node_modules/antlr4/atn/LexerActionExecutor.js","webpack:///./node_modules/antlr4/polyfills/codepointat.js","webpack:///./node_modules/policy_lang/index.js","webpack:///./node_modules/antlr4/Recognizer.js","webpack:///./node_modules/antlr4/atn/ATNDeserializer.js","webpack:///./node_modules/antlr4/InputStream.js","webpack:///./node_modules/antlr4/error/Errors.js","webpack:///./node_modules/antlr4/RuleContext.js","webpack:///./node_modules/antlr4/atn/ATN.js","webpack:///./node_modules/antlr4/atn/ATNType.js","webpack:///./node_modules/antlr4/index.js","webpack:///./node_modules/antlr4/error/DiagnosticErrorListener.js","webpack:///./node_modules/antlr4/dfa/index.js","webpack:///./node_modules/antlr4/tree/index.js","webpack:///./node_modules/antlr4/ParserRuleContext.js","webpack:///./node_modules/freelog_policy_compiler/JSONGeneratorExtension.js","webpack:///./node_modules/antlr4/BufferedTokenStream.js","webpack:///./src/pages/pagebuild/app.vue?8397","webpack:///./node_modules/antlr4/CommonTokenStream.js","webpack:///./node_modules/antlr4/CharStreams.js","webpack:///./node_modules/antlr4/dfa/DFAState.js","webpack:///./node_modules/antlr4/atn/LexerAction.js","webpack:///./src/pages/pagebuild/ui-lib/contract-steps/index.vue?c143","webpack:///./node_modules/antlr4/atn/PredictionMode.js","webpack:///./node_modules/policy_lang/gen/policyParser.js","webpack:///./node_modules/freelog_policy_compiler/index.js","webpack:///./node_modules/antlr4/LL1Analyzer.js","webpack:///./src/pages/pagebuild/services/errorResponseHandler.js","webpack:///./src/pages/pagebuild/services/showDialogHandler.js","webpack:///./src/pages/pagebuild/services/index.js","webpack:///./src/pages/pagebuild/event-dispatcher.js","webpack:///./node_modules/policy_lang/gen/policyListener.js","webpack:///./node_modules/antlr4/IntervalSet.js","webpack:///./node_modules/antlr4/CommonTokenFactory.js","webpack:///./src/pages/pagebuild/ui-lib/policy/index.vue?f2ae","webpack:///./src/pages/pagebuild/demo/app.js","webpack:///./node_modules/antlr4/dfa/DFA.js","webpack:///./node_modules/antlr4/atn/Transition.js","webpack:///./node_modules/antlr4/Parser.js","webpack:///./node_modules/antlr4/tree/Tree.js","webpack:///./node_modules/antlr4/atn/LexerATNSimulator.js","webpack:///./node_modules/antlr4/tree/Trees.js","webpack:///./node_modules/antlr4/PredictionContext.js","webpack:///./src/pages/pagebuild/ui-lib/contract/index.vue?86e9","webpack:///./src/pages/pagebuild/ui-lib/presentable-detail/index.vue?b818","webpack:///./src/components/toolbar/index.js","webpack:///src/components/toolbar/index.vue","webpack:///./src/components/toolbar/index.vue?bf82","webpack:///./src/components/toolbar/index.vue","webpack:///./node_modules/antlr4/atn/ATNSimulator.js","webpack:///./node_modules/antlr4/Utils.js","webpack:///./node_modules/antlr4/Lexer.js","webpack:///./node_modules/antlr4/dfa/DFASerializer.js","webpack:///./node_modules/antlr4/atn/ATNDeserializationOptions.js","webpack:///./node_modules/antlr4/Token.js","webpack:///./node_modules/antlr4/atn/ATNState.js","webpack:///./node_modules/antlr4/error/ErrorStrategy.js","webpack:///./src/pages/pagebuild/ui-lib/contract-state/direct-graph.js","webpack:///./src/pages/pagebuild/ui-lib/contract-state/index.js","webpack:///src/pages/pagebuild/ui-lib/contract-state/index.vue","webpack:///./src/pages/pagebuild/ui-lib/contract-state/index.vue?8ca6","webpack:///./src/pages/pagebuild/ui-lib/contract-state/index.vue","webpack:///./src/pages/pagebuild/ui-lib/config.js","webpack:///./src/pages/pagebuild/ui-lib/presentables/index.js","webpack:///src/pages/pagebuild/ui-lib/presentables/index.vue","webpack:///./src/pages/pagebuild/ui-lib/presentables/index.vue?a794","webpack:///./src/pages/pagebuild/ui-lib/presentables/index.vue","webpack:///./src/pages/pagebuild/ui-lib/contract-steps/index.js","webpack:///src/pages/pagebuild/ui-lib/contract-steps/index.vue","webpack:///./src/pages/pagebuild/ui-lib/contract-steps/index.vue?8076","webpack:///./src/pages/pagebuild/ui-lib/contract-steps/index.vue","webpack:///./src/pages/pagebuild/ui-lib/presentable-detail/index.js","webpack:///src/pages/pagebuild/ui-lib/presentable-detail/index.vue","webpack:///./src/pages/pagebuild/ui-lib/presentable-detail/index.vue?3788","webpack:///./src/pages/pagebuild/ui-lib/presentable-detail/index.vue","webpack:///./src/pages/pagebuild/ui-lib/contract/index.js","webpack:///src/pages/pagebuild/ui-lib/contract/index.vue","webpack:///./src/pages/pagebuild/ui-lib/contract/index.vue?6e68","webpack:///./src/pages/pagebuild/ui-lib/contract/index.vue","webpack:///./src/pages/pagebuild/ui-lib/policy/index.js","webpack:///src/pages/pagebuild/ui-lib/policy/index.vue","webpack:///./src/pages/pagebuild/ui-lib/policy/index.vue?838d","webpack:///./src/pages/pagebuild/ui-lib/policy/index.vue","webpack:///src/pages/pagebuild/app.vue","webpack:///./src/pages/pagebuild/app.vue?8676","webpack:///./src/pages/pagebuild/app.vue","webpack:///./src/pages/pagebuild/event_code.js","webpack:///./node_modules/freelog_policy_compiler/ErrorListenerExtend.js","webpack:///./node_modules/antlr4/atn/index.js","webpack:///./node_modules/antlr4/polyfills/fromcodepoint.js","webpack:///./node_modules/antlr4/error/ErrorListener.js","webpack:///./src/pages/pagebuild/parser.js","webpack:///./node_modules/underscore/underscore.js","webpack:///./src/pages/pagebuild/ui-lib/contract-state/index.vue?0a1a","webpack:///./node_modules/policy_lang/gen/policyLexer.js","webpack:///./node_modules/antlr4/atn/ATNConfigSet.js","webpack:///./node_modules/antlr4/atn/SemanticContext.js","webpack:///./node_modules/antlr4/FileStream.js","webpack:///./src/pages/pagebuild/ui-lib/presentables/index.vue?289d","webpack:///./src/components/toolbar/index.vue?9a47","webpack:///./node_modules/antlr4/error/index.js","webpack:///./node_modules/antlr4/atn/ATNConfig.js"],"names":["dataloaderHelpers","loadResourceDetail","resourceId","window","QI","fetch","then","res","status","json","Promise","reject","ret","errcode","data","loadPresentableDetail","presentableId","loadContractDetail","contractData","contract","targetId","resourceDetail","tagInfo","resourceInfo","contractDetail","loadPolicyDetail","authData","name","handle","appUI","callback","errorMsg","msg","resData","appendDataToUI","bind","console","log","$on","appendData","showAuthDialog","errorResponseHandler","showDialogHandler","DEFAULT_EVENT_NAME","init","bus","dispatchHandler","event","detail","handlerName","eventName","opts","Handler","Service","warn","trigger","$emit","App","isValidResponse","EventDispatcher","apply","arguments","EventCode","main","document","querySelector","el","template","components","methods","onReady","FreeLogApp","PageBuildeParser","start","hidden","mounted","initHotKeyEvent","keyCodes","ctrl","T","keydown","self","isCtrlT","keyCode","addEventListener","ev","toggleToolBar","showSystemDialog","show","hide","DirectGraph","width","height","colors","d3","scale","category10","Radius","radius","$svg","$container","container","_opts","select","append","attr","$tip","parentNode","createElement","classList","add","appendChild","nodes","links","force","layout","size","linkDistance","charge","on","tick","path","selectAll","circle","d","deltaX","target","x","source","deltaY","y","dist","Math","sqrt","normX","normY","sourcePadding","left","targetPadding","right","sourceX","sourceY","targetX","targetY","autoPlacementTip","pos","parentRect","getBoundingClientRect","conRect","diffx","diffy","tipRect","posx","posy","style","top","restart","enter","stateClass","p","src","mouse","opacity","overlayHandler","setTimeout","exit","remove","id","classed","reflexive","g","forEach","node","push","link","lastNodeId","createNode","props","Object","assign","formatNodes","nodeList","nodeMap","nodeArr","index","resolveStateClass","tmp","state","nextStates","next","generateRoot","stateTreeRoot","children","stateCls","isProcess","isFinish","isWaiting","isActive","setTreeNodePosition","result","root","tree","keys","stateNode","stateMap","key","parseContract","curState","fsmState","policySegment","descs","fsmDescription","activatedStates","initialState","initStateNode","stateName","targetEvents","includes","deep","walkTree","length","nextNode","nextStateNode","nextState","desc","curStateNode","currentState","type","default","popData","disabled","triggerEvents","filter","$refs","popover","showPopper","getComputedStyle","wrapper","$el","stateTree","parseInt","draw","updateContractState","isActivated","contractId","triggerLicense","method","triggerContractState","activateContractHandler","$message","error","params","triggerHandler","promise","eventId","licenseIds","resolve","success","hidePopover","nodeName","contains","stopPropagation","resolveData","update","CONTRACT_STATUS","uncreated","initial","running","activated","userTerminated","sysTerminated","terminated","CONTRACT_STATUS_TIPS","CONTRACT_STATUS_COLORS","presentables","CONTRACT_STATUS_ACTION_TIPS","Array","formatPresentableList","watch","presentable","resovlePresentableStatus","slice","sort","p1","p2","_contractStatus","statusTip","text","tabActionHandler","tabConfig","content","title","step","Number","ContractState","ContractSteps","PresentableDetail","formatData","userGroup","users","reduce","item","concat","$set","join","loading","btnType","tabName","String","formatPolicy","formatContractDetail","compiler","compile","policyText","formatPolicyText","stringArray","splice","replace","parsePolicy","segments","policy","block","segment","states","selected","_userGroup","policyHandler","gotoExecuteContract","signPolicyHandler","action","policyData","selectedSegmentId","warning","tip","resourceName","$confirm","confirmButtonText","cancelButtonText","dangerouslyUseHTMLString","createContract","catch","contractType","segmentId","serialNumber","partyTwo","__auth_info__","__auth_user_id__","invalidResponse","showToolBar","authInfo","authErrorData","__auth_error_info__","loadWidgets","getWidgets","$page","$widgets","querySelectorAll","importHtml","opt","htmlFile","File","objectURL","URL","createObjectURL","rel","href","head","parseWidgetPresentable","systemMeta","headers","get","JSON","parse","widgetName","mimeType","triggerPresentableAuth","from","widget","prensentableId","getAttribute","fetchPresentable","err"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB;AAC/B,IAAI,6BAA6B;AACjC,IAAI,wBAAwB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAyB,eAAe,sBAAsB;AACtE,4CAA4C;AAC5C;AACA,IAAI,sBAAsB,SAAS,oBAAoB;AACvD;AACA;AACA;AACA;AACA,IAAI,oBAAoB;AACxB;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA,IAAI,gBAAgB,+BAA+B,eAAe;AAClE,IAAI,WAAW;AACf,IAAI,kBAAkB,sBAAsB,sBAAsB;AAClE,gDAAgD,sBAAsB;AACtE,IAAI,WAAW,aAAa,WAAW,MAAM,mBAAmB;AAChE,IAAI,mBAAmB;AACvB,IAAI,mBAAmB;AACvB,8CAA8C,KAAK,WAAW;AAC9D,iDAAiD,mBAAmB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA,WAAW,gDAAgD,EAAE,6CAA6C,SAAS,2BAA2B;AAC9I,WAAW,8CAA8C,MAAM,wBAAwB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,OAAO,SAAS;AAC5E,yDAAyD,OAAO,MAAM;AACtE;AACA,kBAAkB,OAAO,MAAM,KAAK,OAAO,MAAM;AACjD;AACA,0BAA0B,OAAO,GAAG,KAAK,OAAO,GAAG;AACnD,4BAA4B,OAAO,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE,sEAAsE;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA,IAAI,QAAQ,MAAM,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,MAAM,QAAQ;AAC1B,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,KAAK;AACL;AACA,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,KAAK,GAAG,KAAK,GAAG,EAAE,GAAG,KAAK;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6BAA6B;AACjD;AACA;AACA;AACA,yCAAyC,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,iBAAiB,oBAAoB;AACvD,sBAAsB,cAAc;AACpC,0BAA0B,cAAc;AACxC;AACA,YAAY,sBAAsB;AAClC,IAAI,sBAAsB,4BAA4B,cAAc;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA,YAAY,cAAc,2BAA2B,cAAc;AACnE;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA,+BAA+B,gDAAgD;AAC/E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sCAAsC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,UAAU,KAAK,cAAc;AAC3C;AACA,IAAI,gBAAgB;AACpB;AACA,yBAAyB,WAAW,uBAAuB;AAC3D;AACA;AACA;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA;AACA,YAAY,4BAA4B;AACxC;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,+BAA+B;AACxE,SAAS;AACT;AACA;AACA;AACA,YAAY,wBAAwB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,2BAA2B;AAC/B,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAwB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,8BAA8B;AACxD;AACA;AACA;AACA;AACA,uCAAuC,+BAA+B;AACtE;AACA;AACA;AACA,IAAI,wBAAwB;AAC5B,IAAI,2BAA2B;AAC/B,IAAI,+BAA+B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,cAAc;AACtB;AACA;AACA;AACA,qCAAqC,wBAAwB;AAC7D,IAAI,8BAA8B;AAClC,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA,mDAAmD,oDAAoD;AACvG;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,WAAW,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,WAAW,OAAO;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,eAAe;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB,UAAU;AAC7D;AACA,SAAS;AACT;AACA,+BAA+B,2CAA2C;AAC1E;AACA,KAAK;AACL,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB,UAAU;AAC7D;AACA,SAAS;AACT;AACA,+BAA+B,2CAA2C;AAC1E;AACA,KAAK;AACL,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mCAAmC;AAC7D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,oBAAoB,gBAAgB,SAAS;AACjD,YAAY,WAAW,KAAK,WAAW,SAAS,QAAQ;AACxD;AACA;AACA;AACA,UAAU,SAAS,KAAK,WAAW,uBAAuB,WAAW;AACrE,uCAAuC,eAAe;AACtD,IAAI,oBAAoB,UAAU,SAAS;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS,KAAK,WAAW,uBAAuB;AAC/D,wDAAwD;AACxD,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,oEAAoE;AACpE;AACA,mBAAmB,QAAQ;AAC3B;AACA,UAAU,QAAQ,KAAK,cAAc,uBAAuB,cAAc;AAC1E;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ,4BAA4B,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gD;;;;;;;AC/rDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;ACxJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU;;AAExC;AACA;;AAEA;AACA;AACA,0BAA0B,iBAAiB;AAC3C,iCAAiC,+BAA+B;AAChE,+CAA+C;AAC/C;AACA;AACA;;AAEA,cAAc,0BAA0B;AACxC,cAAc,0BAA0B;AACxC,IAAI,kBAAkB;AACtB;AACA;AACA;AACA,IAAI,qBAAqB,cAAc,WAAW;AAClD;AACA;AACA,iBAAiB,0BAA0B;AAC3C;AACA,cAAc,0BAA0B;AACxC,OAAO,0BAA0B,MAAM,kBAAkB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA,IAAI,uCAAuC,UAAU,WAAW;AAChE,IAAI,sBAAsB,eAAe,iBAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA,cAAc,0BAA0B;AACxC;AACA;AACA;AACA;AACA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA,eAAe,YAAY;AAC3B;AACA,yBAAyB,sBAAsB;AAC/C,IAAI,YAAY,EAAE,iBAAiB;AACnC,IAAI,2BAA2B;AAC/B;AACA;AACA;AACA;AACA;AACA,4CAA4C,uBAAuB;AACnE,IAAI,YAAY;AAChB;AACA;AACA,IAAI,sBAAsB,aAAa,YAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrKA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA,EAAE;AACF;;;;;;;;ACrDA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,UAAU,EAAE;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU,EAAE;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA,IAAI,iDAAiD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;;;AAGD;;;;;;;;AClJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,uBAAuB,WAAW;AAClC;AACA,0BAA0B,WAAW;AACrC;AACA,YAAY,WAAW,SAAS,iBAAiB;AACjD,yDAAyD,cAAc;AACvE,cAAc,aAAa,YAAY;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;;AAEA,aAAa,0BAA0B;AACvC;AACA;AACA;;AAEA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;;AAEA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC;AACA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,gBAAgB,yBAAyB;AACzC,QAAQ,+CAA+C;AACvD;AACA;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,yBAAyB;AAClE,8CAA8C,6BAA6B;AAC3E,+CAA+C,mCAAmC;AAClF,oDAAoD,kCAAkC;AACtF,oDAAoD,kCAAkC;AACtF,+CAA+C,+BAA+B;AAC9E,6CAA6C,4BAA4B;AACzE,6CAA6C,4BAA4B;AACzE,kDAAkD,gCAAgC;AAClF,mDAAmD,iCAAiC;AACpF,kDAAkD,gCAAgC;AAClF,4CAA4C,2BAA2B;AACvE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,6DAA6D,4CAA4C;AACzG,2DAA2D,mCAAmC;AAC9F,2DAA2D,iCAAiC;AAC5F,+DAA+D,oCAAoC;AACnG,gEAAgE,uCAAuC;AACvG,2DAA2D,iCAAiC;AAC5F,2DAA2D,mCAAmC;AAC9F;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA,0C;;;;;;;ACrqBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA,EAAE;AACF,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,cAAc;AACd;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACtIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC,iEAAiE;AACjE;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD,QAAQ,gCAAgC;AACxC,QAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,oDAAoD;AACtF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wDAAwD;AAC1F;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,0FAA0F;AAC5H;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,mCAAmC,kBAAkB;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,2BAA2B;;AAE5E;AACA;AACA;AACA;AACA;AACA,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3JA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,4CAA4C,qBAAqB,WAAW;AAC5E;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;;AAEA;AACA;;AAEA,qEAAqE,QAAQ;AAC7E,QAAQ,UAAU;AAClB,0BAA0B,QAAQ;AAClC,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;;AAEA,+DAA+D,QAAQ;AACvE,0BAA0B,qBAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,IAAI,kBAAkB,wBAAwB,cAAc;AAC5D;AACA;AACA;AACA,IAAI,oBAAoB;AACxB,aAAa,iBAAiB;AAC9B;AACA,UAAU,cAAc,KAAK,WAAW;AACxC,IAAI,+BAA+B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kB;;;;;;;AC7IA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,yBAAyB;AACpD;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB,eAAe,WAAW;AACjE,mDAAmD,cAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA,UAAU,mCAAmC;AAC7C;;AAEA,0D;;;;;;;AC9GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8C;;;;;;;AChOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,qDAAqD;AAC1E;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,qDAAqD;AAC1E;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AChcA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,kBAAkB;AAC7C,IAAI,kBAAkB;AACtB;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA,qBAAqB,6BAA6B;AAClD,IAAI,4BAA4B;AAChC,IAAI,wBAAwB;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS,kBAAkB;AAC3B;;AAEA;AACA,kDAAkD,mBAAmB;AACrE,QAAQ,WAAW;AACnB;;AAEA,oBAAoB,eAAe;AACnC,KAAK,gBAAgB,IAAI,gBAAgB,SAAS,WAAW,QAAQ;AACrE;AACA,KAAK,iBAAiB;AACtB;AACA;AACA,KAAK,uBAAuB;AAC5B;AACA,8BAA8B,gBAAgB;AAC9C;AACA;;AAEA,2BAA2B,iBAAiB;AAC5C,KAAK,oBAAoB,eAAe,eAAe;AACvD;AACA;AACA;AACA,SAAS,gBAAgB,0BAA0B,gBAAgB;AACnE;AACA;AACA,KAAK,mBAAmB,MAAM,UAAU,qBAAqB;AAC7D,SAAS;AACT,SAAS,cAAc;AACvB;AACA,KAAK,eAAe;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA,YAAY,WAAW,iCAAiC,QAAQ;AAChE,IAAI,YAAY;AAChB;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,QAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtXA;AACA;AACA;AACA,0GAA0G,YAAY,SAAS,EAAE;AACjI;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA,IAAI,wBAAwB;AAC5B;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC,+CAA+C,WAAW,GAAG,WAAW;AACxE,IAAI,WAAW;AACf;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,IAAI,wBAAwB;AAC5B,SAAS,wBAAwB;AACjC;AACA;AACA;AACA,oCAAoC,aAAa;AACjD,IAAI,kBAAkB;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8C;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,oBAAoB;AACzB,KAAK,iBAAiB,UAAU,eAAe;AAC/C;AACA;AACA;AACA,oBAAoB,8BAA8B,OAAO;AACzD,kBAAkB,aAAa;AAC/B,KAAK,4BAA4B;AACjC;AACA;AACA;AACA;AACA,KAAK,kCAAkC;AACvC;AACA;AACA;AACA;AACA,KAAK,4BAA4B,KAAK,YAAY;AAClD;AACA,2CAA2C,mBAAmB;AAC9D,KAAK,8BAA8B;AACnC;AACA,kCAAkC,4BAA4B;AAC9D;AACA;AACA;AACA;AACA,iCAAiC;AACjC,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA,QAAQ,eAAe;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sCAAsC;AAC1C;AACA,IAAI,oBAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,sBAAsB,yBAAyB;AAC3E,2BAA2B,uBAAuB,wBAAwB;AAC1E,yBAAyB,yBAAyB,sBAAsB;AACxE,yBAAyB,yBAAyB,sBAAsB;AACxE,6BAA6B,qBAAqB,yBAAyB;AAC3E,8BAA8B,oBAAoB,0BAA0B;AAC5E,yBAAyB,yBAAyB,sBAAsB;AACxE,yBAAyB,yBAAyB,sBAAsB;;AAExE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA,mBAAmB,WAAW,0BAA0B,kBAAkB;AAC1E;AACA,WAAW,WAAW;AACtB,mDAAmD,iBAAiB;AACpE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,WAAW,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,eAAe;AAClC,IAAI,sBAAsB;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA6C,sBAAsB;AACnE,sBAAsB,gBAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,mBAAmB,cAAc,0BAA0B,qBAAqB;AAChF;AACA,WAAW,cAAc;AACzB,mDAAmD,iBAAiB;AACpE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,6CAA6C,qBAAqB;AAClE;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,WAAW,0BAA0B,kBAAkB;AAC1E;AACA,WAAW,WAAW;AACtB,mDAAmD,iBAAiB;AACpE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,6CAA6C,qBAAqB;AAClE;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,mBAAmB,WAAW,0BAA0B,kBAAkB;AAC1E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA6C,kBAAkB;AAC/D,sBAAsB,gBAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8CAA8C,yBAAyB;AACvE;AACA;AACA,OAAO,yBAAyB;AAChC;AACA,wEAAwE,IAAI;AAC5E;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ,yBAAyB;AACjC;AACA,QAAQ,yBAAyB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iDAAiD,oBAAoB;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC,IAAI,wBAAwB;AAC5B,qBAAqB,cAAc;AACnC,gDAAgD,wBAAwB;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA6C,wBAAwB;AACrE,sBAAsB,mBAAmB;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B,kBAAkB;AAC7C,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA,uBAAuB,kCAAkC;AACzD,IAAI,gDAAgD;;AAEpD;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA,IAAI,uCAAuC,UAAU,WAAW;AAChE;AACA,4CAA4C,iBAAiB;AAC7D;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB,gBAAgB,mBAAmB;AAC5D,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;AC7WA;AACA;AACA;AACA,gHAAgH,YAAY,SAAS,EAAE;AACvI;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf,+CAA+C,YAAY;AAC3D;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,KAAK,MAAM,OAAO,KAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,sDAAsD,IAAI;AACjE;AACA,wDAAwD,QAAQ,EAAE;AAClE,+BAA+B,iCAAiC;AAChE,IAAI,cAAc,MAAM,cAAc;AACtC;AACA,QAAQ,eAAe;AACvB;AACA;AACA;AACA,OAAO,iDAAiD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA,OAAO,kBAAkB,eAAe,EAAE,EAAE;AAC5C;AACA;AACA,IAAI,QAAQ,MAAM,SAAS;AAC3B,yBAAyB,kBAAkB;AAC3C;AACA;AACA,OAAO,kBAAkB,eAAe,EAAE,iBAAiB,EAAE;AAC7D;AACA;AACA,IAAI,uCAAuC;AAC3C;AACA,IAAI,mBAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA,mCAAmC,qCAAqC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,cAAc;AACjD,IAAI,oBAAoB;AACxB;AACA;AACA;AACA;AACA,YAAY,WAAW,0BAA0B,cAAc;AAC/D,IAAI,oBAAoB,aAAa;AACrC;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,cAAc;AAClD,IAAI,oBAAoB;AACxB;AACA;AACA;AACA;AACA,YAAY,WAAW,2BAA2B,cAAc;AAChE,IAAI,oBAAoB,aAAa;AACrC;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,QAAQ;AACpE,wBAAwB,qBAAqB;AAC7C;AACA,cAAc,uBAAuB,MAAM,yBAAyB;AACpE,kBAAkB,qBAAqB,cAAc;AACrD,QAAQ,qBAAqB,MAAM,WAAW;AAC9C;AACA;AACA;AACA;AACA,OAAO,iBAAiB,oBAAoB;AAC5C,IAAI,QAAQ,UAAU,QAAQ,MAAM,UAAU;AAC9C;AACA,iDAAiD,QAAQ,KAAK,QAAQ;AACtE;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA,qBAAqB,UAAU,iBAAiB,cAAc;AAC9D;AACA,UAAU,kBAAkB;AAC5B,IAAI,QAAQ,MAAM,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gBAAgB,MAAM,iBAAiB;AACjE,SAAS,WAAW,MAAM,WAAW;AACrC,IAAI,gBAAgB;AACpB,SAAS,QAAQ,uCAAuC,QAAQ;AAChE,IAAI,QAAQ;AACZ,wDAAwD,QAAQ;AAChE,IAAI,SAAS;AACb,6DAA6D,QAAQ;AACrE,IAAI,SAAS,UAAU,QAAQ,qCAAqC;AACpE,0BAA0B,QAAQ;AAClC,sBAAsB,aAAa,uBAAuB,QAAQ;AAClE,oBAAoB,UAAU;AAC9B,IAAI,QAAQ,sCAAsC,QAAQ;AAC1D;AACA;AACA,0DAA0D,QAAQ;AAClE,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,SAAS,gBAAgB,GAAG,gBAAgB,GAAG,gBAAgB;AAC/D,IAAI,iBAAiB,GAAG,iBAAiB;AACzC,IAAI,OAAO,GAAG,qBAAqB,WAAW,IAAI,EAAE,IAAI,WAAW,IAAI,EAAE;AACzE,IAAI,OAAO,KAAK,MAAM;AACtB;AACA;AACA,QAAQ,gBAAgB,GAAG,gBAAgB,GAAG,iBAAiB;AAC/D,IAAI,iBAAiB,GAAG,kBAAkB;AAC1C,IAAI,OAAO,GAAG,qBAAqB,WAAW,IAAI,EAAE,IAAI,WAAW,IAAI,EAAE;AACzE,IAAI,OAAO,GAAG,MAAM;AACpB;AACA,QAAQ,gBAAgB,GAAG,gBAAgB,GAAG,iBAAiB;AAC/D,IAAI,iBAAiB,mCAAmC,OAAO,GAAG;AAClE,IAAI,OAAO,GAAG,IAAI,OAAO,GAAG,MAAM;AAClC,cAAc,OAAO,KAAK;AAC1B;AACA,QAAQ,gBAAgB,GAAG,gBAAgB,GAAG,iBAAiB;AAC/D,IAAI,iBAAiB,mCAAmC,OAAO,GAAG;AAClE,IAAI,OAAO,GAAG,IAAI,OAAO,KAAK,MAAM;AACpC;AACA,QAAQ,gBAAgB,GAAG,gBAAgB,GAAG,iBAAiB;AAC/D,IAAI,iBAAiB,mCAAmC,OAAO,GAAG;AAClE,IAAI,OAAO,GAAG,IAAI,OAAO,KAAK,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,iEAAiE;AACjE,2CAA2C,UAAU;AACrD,IAAI,UAAU,IAAI,GAAG,MAAM;AAC3B,gCAAgC,OAAO,GAAG;AAC1C;AACA;AACA;AACA,IAAI,UAAU,MAAM,KAAK,QAAQ,IAAI,EAAE,MAAM;AAC7C;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,YAAY,WAAW,WAAW,aAAa,KAAK,cAAc;AAClE,IAAI,sCAAsC,KAAK,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA,YAAY,WAAW,KAAK,cAAc,aAAa,aAAa;AACpE,IAAI,sCAAsC,eAAe;AACzD;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA,YAAY,WAAW,KAAK,cAAc,aAAa,aAAa;AACpE,IAAI,sCAAsC,KAAK,eAAe;AAC9D;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA,YAAY,WAAW,qBAAqB,cAAc;AAC1D,sBAAsB;AACtB;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,cAAc;AAClB,IAAI,8BAA8B;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,+DAA+D;AAC/D,OAAO,cAAc;AACrB;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,iCAAiC,cAAc,EAAE;AACjD;AACA;;AAEA;AACA;AACA,2BAA2B,QAAQ,KAAK,cAAc;AACtD;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;;AAEA;AACA;AACA,+CAA+C,+CAA+C;AAC9F,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ,KAAK,cAAc;AAC7C;AACA;AACA,UAAU,6BAA6B,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA,SAAS,2BAA2B;AACpC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9iBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C,oBAAoB;AACpB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,mEAAmE,sCAAsC,EAAE;;AAE3G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,wB;AACA;AACA;AACA;AACA;AACA;AACA,4B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wB;AACA;AACA;AACA;AACA;AACA;AACA,4B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6B;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA,6B;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6B;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;;;;;;;;ACxgGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC,0BAA0B;AAC9D;AACA;;;AAGA;AACA;AACA,UAAU,eAAe;AACzB,2BAA2B,QAAQ;AACnC;AACA,sDAAsD,WAAW;AACjE;AACA;AACA,iEAAiE,QAAQ;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,QAAQ;AAClD,cAAc,UAAU;AACxB;AACA,UAAU,UAAU,KAAK,WAAW;AACpC,IAAI,QAAQ,cAAc,qBAAqB;AAC/C,OAAO,UAAU,SAAS,WAAW;AACrC,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA,IAAI,oBAAoB;AACxB,+CAA+C,WAAW;AAC1D;AACA;AACA,8CAA8C,QAAQ;AACtD,cAAc,UAAU;AACxB;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,QAAQ;AAClD,cAAc,UAAU;AACxB;AACA,UAAU,UAAU,KAAK,WAAW,MAAM,gBAAgB;AAC1D,oBAAoB,QAAQ,cAAc,qBAAqB;AAC/D,uBAAuB,UAAU,SAAS,WAAW,MAAM,aAAa;AACxE,IAAI,WAAW,MAAM,gBAAgB;AACrC,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA,IAAI,oBAAoB;AACxB,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA,IAAI,yBAAyB;AAC7B;AACA;AACA,IAAI,mBAAmB;AACvB,wBAAwB,WAAW;AACnC,eAAe,WAAW,oCAAoC;AAC9D,mDAAmD,iBAAiB;AACpE;AACA,sBAAsB,iBAAiB;AACvC,kEAAkE;AAClE,OAAO,WAAW;AAClB;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;ACrMA,IAAIA,oBAAoB;AACpBC,sBADoB,8BACDC,UADC,EACW;AAC3B,eAAOC,OAAOC,EAAP,CAAUC,KAAV,qCAAkDH,UAAlD,EAAgEI,IAAhE,CAAqE,UAACC,GAAD,EAAS;AACjF,gBAAIA,IAAIC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,uBAAOD,IAAIE,IAAJ,EAAP;AACH,aAFD,MAEO;AACH,uBAAOC,QAAQC,MAAR,CAAeJ,GAAf,CAAP;AACH;AACJ,SANM,EAMJD,IANI,CAMC,UAACC,GAAD,EAAS;AACb,gBAAIA,IAAIK,GAAJ,KAAY,CAAZ,IAAiBL,IAAIM,OAAJ,KAAgB,CAArC,EAAwC;AACpC,uBAAON,IAAIO,IAAX;AACH,aAFD,MAEO;AACH,uBAAOJ,QAAQC,MAAR,CAAeJ,GAAf,CAAP;AACH;AACJ,SAZM,CAAP;AAaH,KAfmB;AAgBpBQ,yBAhBoB,iCAgBEC,aAhBF,EAgBiB;AACjC,eAAOb,OAAOC,EAAP,CAAUC,KAAV,wCAAqDW,aAArD,EAAsEV,IAAtE,CAA2E,UAACC,GAAD,EAAS;AACvF,gBAAIA,IAAIC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,uBAAOD,IAAIE,IAAJ,EAAP;AACH,aAFD,MAEO;AACH,uBAAOC,QAAQC,MAAR,CAAeJ,GAAf,CAAP;AACH;AACJ,SANM,EAMJD,IANI,CAMC,UAACC,GAAD,EAAS;AACb,gBAAIA,IAAIK,GAAJ,KAAY,CAAZ,IAAiBL,IAAIM,OAAJ,KAAgB,CAArC,EAAwC;AACpC,uBAAON,IAAIO,IAAX;AACH,aAFD,MAEO;AACH,uBAAOJ,QAAQC,MAAR,CAAeJ,GAAf,CAAP;AACH;AACJ,SAZM,CAAP;AAaH,KA9BmB;AAgCpBU,sBAhCoB,8BAgCDH,IAhCC,EAgCK;AACrB,YAAII,eAAeJ,KAAKK,QAAxB;AACA,eAAO,KAAKJ,qBAAL,CAA2BG,aAAaE,QAAxC,EACFd,IADE,CACG,UAACQ,IAAD,EAAU;AACZI,yBAAaG,cAAb,GAA8BP,KAAKQ,OAAL,CAAaC,YAA3C;AACAT,iBAAKU,cAAL,GAAsBN,YAAtB;AACAJ,iBAAKO,cAAL,GAAsBP,KAAKQ,OAAL,CAAaC,YAAnC;AACA,mBAAOT,IAAP;AACH,SANE,CAAP;AAOH,KAzCmB;AA0CpBW,oBA1CoB,4BA0CHC,QA1CG,EA0CO;AACvB,YAAIV,gBAAgBU,SAASV,aAA7B;AACA,eAAO,KAAKD,qBAAL,CAA2BC,aAA3B,EACFV,IADE,CACG,UAACQ,IAAD,EAAU;AACZA,iBAAKO,cAAL,GAAsBP,KAAKQ,OAAL,CAAaC,YAAnC;AACA,mBAAOT,IAAP;AACH,SAJE,CAAP;AAKH;AAjDmB,CAAxB;;AAoDA,yDAAe;AACXa,UAAM,sBADK;AAEXC,UAFW,kBAEJd,IAFI,EAEEe,KAFF,EAESC,QAFT,EAEmB;AAC1B,aAAKD,KAAL,GAAaA,KAAb;AACA,YAAIf,QAAQA,KAAKD,OAAjB,EAA0B;AACtB,gBAAIkB,WAAWjB,KAAKkB,GAApB;AACA,gBAAIC,UAAUnB,KAAKA,IAAL,IAAaA,KAAKA,IAAL,CAAUA,IAArC;AACA,oBAAQA,KAAKD,OAAb;AACI;AACA,qBAAK,QAAL;AACIb,sCAAkBiB,kBAAlB,CAAqCgB,OAArC,EACK3B,IADL,CACU,KAAK4B,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CADV;AAEA;AACJ;AACA,qBAAK,QAAL;AACInC,sCAAkByB,gBAAlB,CAAmCQ,OAAnC,EACK3B,IADL,CACU,KAAK4B,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CADV;AAEA;AACJ;AACA,qBAAK,QAAL;AACIC,4BAAQC,GAAR,CAAYN,QAAZ,EAAsBE,OAAtB;AACA;AACJ;AACI;AAhBR;;AAmBA,gBAAI,OAAOH,QAAP,KAAoB,UAAxB,EAAoC;AAChCD,sBAAMS,GAAN,CAAU,OAAV,EAAmB,YAAY;AAC3B;AACAF,4BAAQC,GAAR,CAAY,sBAAZ,EAAoCJ,OAApC;AACH,iBAHD;AAIH;AACJ;AACJ,KAjCU;AAkCXC,kBAlCW,0BAkCIpB,IAlCJ,EAkCU;AACjB,aAAKe,KAAL,CAAWU,UAAX,CAAsBzB,IAAtB;AACA,aAAKe,KAAL,CAAWW,cAAX;AACH;AArCU,CAAf,E;;ACpDA,sDAAe;AACXb,UAAM,mBADK;AAEXC,UAFW,kBAEJd,IAFI,EAEEe,KAFF,EAESC,QAFT,EAEmB;AAC1BD,cAAMW,cAAN;AACAV,oBAAYA,UAAZ;AACH;AALU,CAAf,E;;ACAA;AACA;;AAEA,6CAAe;AACXW,0BAAA,oBADW;AAEXC,uBAAA,iBAAAA;AAFW,CAAf,E;;ACHA;AACA;;AAEA,IAAMC,qBAAqB,sBAA3B;;AAEA,gFAAe;AACXC,QADW,gBACNf,KADM,EACC;AACR,aAAKA,KAAL,GAAaA,KAAb;AACA,aAAKgB,GAAL,GAAW,IAAI,kBAAJ,EAAX;AACA;AACA,aAAKA,GAAL,CAASP,GAAT,CAAaK,kBAAb,EAAiC,KAAKG,eAAL,CAAqBX,IAArB,CAA0B,IAA1B,CAAjC;AACH,KANU;AAOXW,mBAPW,2BAOKC,KAPL,EAOY;AACnB,YAAIC,SAASD,MAAMC,MAAnB;AACA,YAAIC,cAAcD,OAAOE,SAAzB;AACA,YAAIC,OAAOH,OAAOG,IAAP,IAAe,EAA1B;AACA,YAAIC,OAAJ;AACA,YAAKA,UAAU,QAAAC,CAAQJ,WAAR,CAAf,EAAsC;AAClCG,oBAAQxB,MAAR,CAAeuB,KAAKrC,IAApB,EAA0B,KAAKe,KAA/B,EAAsCsB,KAAKrB,QAA3C;AACH,SAFD,MAEO;AACHM,oBAAQkB,IAAR,CAAa,cAAb;AACH;AACJ,KAjBU;AAkBXC,WAlBW,mBAkBHL,SAlBG,EAkBQC,IAlBR,EAkBc;AACrB,aAAKN,GAAL,CAASW,KAAT,CAAeb,kBAAf,EAAmC;AAC/BK,oBAAQ;AACJE,2BAAWA,SADP;AAEJC,sBAAMA;AAFF;AADuB,SAAnC;AAMH;AAzBU,CAAf,E;;;;;;;ACLA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA,wC;;;;;;;AC3VA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,EAAE;AACF;AACA;AACA;;;AAGA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,EAAE;AACF;AACA;AACA;;;AAGA;AACA;AACA,gBAAgB,2BAA2B;AAC3C;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;;;;;;;ACzSA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,mBAAmB;AACtD,IAAI,kBAAkB;AACtB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA,0BAA0B,0BAA0B;AACpD,QAAQ,2BAA2B;AACnC,QAAQ,oCAAoC;AAC5C,eAAe,qBAAqB;AACpC;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpEA;AACA;AACA;AACA,gHAAgH,YAAY,SAAS,EAAE;AACvI;AACA;AACA;;;;;;;;;;;;;;;ACNA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,IAAIM,MAAM;AACNC,mBADM,2BACUnD,GADV,EACe;AACjB,eAAQA,OAAQA,IAAIK,GAAJ,KAAY,CAAZ,IAAiBL,IAAIM,OAAJ,KAAgB,CAAjD;AACH,KAHK;AAIN0C,WAJM,qBAII;AACNI,QAAA,kEAAAA,CAAgBJ,OAAhB,CAAwBK,KAAxB,CAA8B,kEAA9B,EAA+CC,SAA/C;AACH,KANK;;AAONC,eAAA,4DAAAA;AAPM,CAAV;;AAUA,SAASC,IAAT,GAAgB;AACZ5D,WAAOC,EAAP,GAAY4D,SAASC,aAAT,CAAuB,YAAvB,CAAZ;;AAEA;AACA,QAAI,wDAAJ,CAAQ;AACJC,YAAI,MADA;AAEJC,kBAAU,8BAFN;AAGJC,oBAAY,EAAC,YAAY,yDAAb,EAHR;AAIJC,iBAAS;AACLC,mBADK,mBACGzC,KADH,EACU;AACX;AACA,qBAAKA,KAAL,GAAaA,KAAb;AACA1B,uBAAOoE,UAAP,GAAoBd,GAApB;AACAE,gBAAA,kEAAAA,CAAgBf,IAAhB,CAAqBf,KAArB;AACA2C,gBAAA,wDAAAA,CAAiBC,KAAjB;AACA5C,sBAAMS,GAAN,CAAU,OAAV,EAAmB,YAAY;AAC3BF,4BAAQC,GAAR,CAAY,qBAAZ;AACH,iBAFD;AAGH;AAVI;AAJL,KAAR;AAiBH;;AAED0B;;AAEA,+DAAeN,GAAf,E;;;;;;;AC5CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C,MAAM,UAAU;AAChB;AACA;AACA,KAAK,WAAW,0CAA0C;AAC1D,KAAK,YAAY,iCAAiC,wBAAwB;AAC1E,KAAK,yBAAyB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,WAAW;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,WAAW,oBAAoB,KAAK,YAAY;AAChD,IAAI,WAAW,YAAY,YAAY;AACvC,IAAI,eAAe,yBAAyB,sBAAsB;AAClE;AACA,YAAY,sBAAsB;AAClC;AACA;AACA,yBAAyB,WAAW,6BAA6B;AACjE,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW,oBAAoB;AACxD;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kE;;;;;;;AC3TA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,UAAU,kBAAkB,aAAa;AACzC,KAAK,oBAAoB;AACzB,mBAAmB,kBAAkB,cAAc;AACnD;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uEAAuE;AACvE,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,YAAY;AACnD,aAAa,sCAAsC,MAAM,gBAAgB;AACzE;AACA;AACA;AACA,IAAI,wCAAwC;AAC5C,qCAAqC,0BAA0B;AAC/D,IAAI,WAAW;AACf,IAAI,wCAAwC;AAC5C,8BAA8B,sCAAsC;AACpE;AACA;AACA;AACA;AACA,IAAI,YAAY;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,QAAQ,gBAAgB;AACxB;AACA;AACA,IAAI,wCAAwC;AAC5C,qCAAqC,0BAA0B;AAC/D,IAAI,WAAW;AACf,IAAI,wCAAwC;AAC5C,8BAA8B,sCAAsC;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAI,+BAA+B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM,cAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B;AACA,UAAU,eAAe,KAAK,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,MAAM;AAClE;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,4CAA4C;AACvE;AACA,4CAA4C,QAAQ;AACpD,wDAAwD,QAAQ;AAChE,IAAI,QAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAyC;AACrE,IAAI,uCAAuC;AAC3C;AACA;AACA,IAAI,6CAA6C;AACjD,IAAI,wCAAwC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,aAAa;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA,SAAS,kBAAkB;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW,KAAK,aAAa;AACzC,uBAAuB,YAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA,mCAAmC,iBAAiB,MAAM,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,oBAAoB;AAClD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uCAAuC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B,iCAAiC,gDAAgD,EAAE;AACnF,+BAA+B,wCAAwC,EAAE;AACzE,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;;ACjqBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wCAAwC;AAC5C,IAAI,kBAAkB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,sBAAsB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA,IAAI,QAAQ,MAAM,WAAW;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,MAAM,QAAQ;AAC1B,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,QAAQ,aAAa,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kCAAkC;AACnD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sDAAsD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA,sCAAsC,8CAA8C;AACpF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA,YAAY,WAAW;AACvB,IAAI,YAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oCAAoC,qDAAqD;AACzF;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA,kDAAkD;AAClD;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qCAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wCAAwC;AACrE,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,GAAG,QAAQ,GAAG;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8DAA8D;AAC3F,GAAG;AACH;AACA,8BAA8B,oBAAoB;AAClD;AACA,EAAE;AACF,4BAA4B,oBAAoB;AAChD,EAAE;AACF;AACA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,kBAAkB,KAAK,WAAW;AAC5C,IAAI,gBAAgB;AACpB,IAAI,gBAAgB;AACpB,gCAAgC,qBAAqB,GAAG,qBAAqB;AAC7E,QAAQ,uBAAuB;AAC/B,4CAA4C,YAAY;AACxD;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA,uBAAuB,WAAW,0BAA0B,YAAY;AACxE;AACA;AACA,YAAY,WAAW;AACvB,IAAI,WAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;;;;;;;;AC3nBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,yCAAyC,oBAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;;;AAGA,sB;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB,IAAI,cAAc;AAClB;AACA;;AAEA,eAAe,QAAQ,yCAAyC;AAChE,2BAA2B,oBAAoB;AAC/C,IAAI,QAAQ,IAAI,2BAA2B;AAC3C;AACA;;AAEA;AACA;;AAEA,0CAA0C,wBAAwB;AAClE;AACA;AACA;AACA;AACA,eAAe,mDAAmD,EAAE;AACpE,kBAAkB;AAClB;AACA,kBAAkB,OAAO,EAAE,gBAAgB;AAC3C,WAAW,2CAA2C,QAAQ;AAC9D,aAAa;AACb;AACA;AACA,kBAAkB,OAAO,EAAE,gBAAgB;AAC3C,WAAW,2CAA2C,QAAQ;AAC9D,mCAAmC;AACnC;AACA;AACA,WAAW,2CAA2C,YAAY;AAClE,YAAY;AACZ;AACA;AACA;AACA;;AAEA,wBAAwB,cAAc;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF,eAAe;AACf,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,cAAc,0BAA0B,cAAc;AAChE;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF,eAAe;AACf,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,kBAAkB,YAAY,wBAAwB;AACpE,WAAW,cAAc,KAAK,mBAAmB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,iCAAiC;AAC/C;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,wBAAwB;AACxB,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO;AACT;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,QAAQ,KAAK,QAAQ;AAC3D,IAAI,cAAc,yCAAyC,QAAQ;AACnE,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,OAAO,cAAc,0BAA0B,SAAS,cAAc;AACtE;AACA;AACA,OAAO,cAAc,kBAAkB,cAAc;AACrD,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,6BAA6B,EAAE,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,wBAAwB;AACxB,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA,kCAAkC;AAClC;AACA,EAAE;AACF;AACA,kCAAkC;AAClC,GAAG,0CAA0C;AAC7C;AACA;AACA;AACA;AACA,GAAG,0CAA0C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iCAAiC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,gCAAgC;AAChC;AACA,IAAI,OAAO;AACX;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV,GAAG,kDAAkD;AACrD;AACA;AACA;AACA,GAAG,OAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA,EAAE;AACF,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC;AAChE,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,eAAe,YAAY;AAC7D;AACA;AACA;AACA;;AAEA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1tBA;AACA;AACA;AACA,gHAAgH,YAAY,SAAS,EAAE;AACvI;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA,gHAAgH,YAAY,SAAS,EAAE;AACvI;AACA;AACA;;;;;;;;;;;ACNA,4CAAe;AACX9B,UAAM,UADK;AAEXb,QAFW,kBAEJ;AACH,eAAO;AACH4D,oBAAQ;AADL,SAAP;AAGH,KANU;AAOXC,WAPW,qBAOD;AACN,aAAKC,eAAL;AACH,KATU;;AAUXP,aAAS;AACL;AACAO,uBAFK,6BAEa;AACd,gBAAIC,WAAW;AACXC,sBAAM,EADK;AAEXC,mBAAG;AAFQ,aAAf;AAIA,gBAAIC,UAAU,EAAd;AACA,gBAAIC,OAAO,IAAX;AACA,gBAAIC,UAAU,SAAVA,OAAU,CAACC,OAAD;AAAA,uBAAcN,SAASC,IAAT,KAAkBK,OAAlB,IAA6BN,SAASE,CAAT,KAAeI,OAA1D;AAAA,aAAd;AACAhF,mBAAOiF,gBAAP,CAAwB,SAAxB,EAAmC,UAAUC,EAAV,EAAc;AAC7C,oBAAIH,QAAQG,GAAGF,OAAX,CAAJ,EAAyB;AACrBH,4BAAQK,GAAGF,OAAX,IAAsB,IAAtB;AACA,wBAAIH,QAAQH,SAASC,IAAjB,KAA0BE,QAAQH,SAASE,CAAjB,CAA9B,EAAmD;AAC/CE,6BAAKK,aAAL;AACAN,kCAAU,EAAV;AACH;AACJ;AACJ,aARD;;AAUA7E,mBAAOiF,gBAAP,CAAwB,OAAxB,EAAiC,UAAUC,EAAV,EAAc;AAC3C,oBAAIH,QAAQG,GAAGF,OAAX,CAAJ,EAAyB;AACrBH,4BAAQK,GAAGF,OAAX,IAAsB,KAAtB;AACH;AACJ,aAJD;AAKH,SAzBI;AA0BL3C,sBA1BK,4BA0BY;AACbrC,mBAAOoE,UAAP,CAAkBhB,OAAlB,CAA0BpD,OAAOoE,UAAP,CAAkBT,SAAlB,CAA4ByB,gBAAtD,EAAwE;AACpEzD,0BAAU,oBAAY;AAClBM,4BAAQC,GAAR,CAAY,sBAAZ;AACH;AAHmE,aAAxE;AAKH,SAhCI;AAiCLiD,qBAjCK,2BAiCW;AACZ,iBAAKZ,MAAL,GAAc,CAAC,KAAKA,MAApB;AACH,SAnCI;AAoCLc,YApCK,kBAoCE;AACH,iBAAKd,MAAL,GAAc,KAAd;AACH,SAtCI;AAuCLe,YAvCK,kBAuCE;AACH,iBAAKf,MAAL,GAAc,IAAd;AACH;AAzCI;AAVE,CAAf,E;;;;;;;;;;ACQA;AACA,gE;;ACTA,0BAA0B,aAAa,0BAA0B,wBAAwB,gBAAgB,aAAa,sEAAsE,kCAAkC,yBAAyB,+CAA+C,aAAa,EAAE,oBAAoB,aAAa,EAAE,4BAA4B,6CAA6C,kCAAkC,eAAe,KAAK,4BAA4B,UAAU,+BAA+B;AAC5hB,oCAAoC,aAAa,0BAA0B,wBAAwB,gBAAgB,8BAA8B,gBAAgB,UAAU,OAAO,mDAAmD,UAAU,qCAAqC,sBAAsB,MAAM;AAChT,iBAAiB;AACjB,kG;;ACHA;AACA,4BAA+R;AAC/R;AACA;AACA;AACA;AACA;AAC0K;AAC1K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,aAAa,iCAAiC;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA,KAAK;AACL,+BAA+B,qBAAqB;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,iBAAiB,sCAAsC;AACvD,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7bA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B;AAC5B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gDAAgD;AAChD;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClXA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA,wBAAwB,IAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;AC7EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB,qBAAqB;AACrB,mBAAmB,aAAa;AAChC,kBAAkB,aAAa;AAC/B,wBAAwB;AACxB,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,+CAA+C,UAAU;AACzD,IAAI,WAAW,QAAQ,gBAAgB;AACvC;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,WAAW;AACxB,IAAI,eAAe;AACnB;;AAEA,qBAAqB,kBAAkB,uBAAuB,YAAY;AAC1E;AACA;AACA,OAAO,eAAe,YAAY,kBAAkB;AACpD,oDAAoD,aAAa;AACjE,QAAQ,WAAW,YAAY,eAAe,cAAc,aAAa;AACzE,sCAAsC,gBAAgB,OAAO;AAC7D,2CAA2C,4BAA4B;AACvE,IAAI,4BAA4B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,4BAA4B;AAChC;AACA;AACA;AACA,0CAA0C;AAC1C,IAAI,wBAAwB;AAC5B;AACA;AACA,IAAI,iBAAiB;AACrB;AACA;AACA,IAAI,iBAAiB;AACrB;AACA;AACA,4DAA4D,UAAU;AACtE,gEAAgE,UAAU;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,SAAS,MAAM,aAAa;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA,aAAa,iBAAiB;AAC9B,qCAAqC;AACrC,0CAA0C,wBAAwB;AAClE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrUA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;AAIA,0CAA0C,yBAAyB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+CAA+C,0BAA0B;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA,+CAA+C,0BAA0B;AACzE;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,gDAAgD;AAChD,mEAAmE;AACnE;AACA;AACA;AACA,QAAQ,2BAA2B;AACnC,IAAI,kCAAkC;AACtC,QAAQ,6BAA6B;AACrC,IAAI,4BAA4B;AAChC,QAAQ,+BAA+B;AACvC,IAAI,8BAA8B;AAClC,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,+BAA+B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA,2CAA2C,aAAa;AACxD;AACA;AACA;AACA;AACA,oCAAoC,aAAa,GAAG,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,oBAAoB;AAC1C,IAAI,2BAA2B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,oBAAoB;AAC1C,IAAI,6BAA6B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,oBAAoB;AAC1C,IAAI,+BAA+B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,YAAY;AAC5C;AACA,IAAI,iBAAiB;AACrB;AACA,kCAAkC,4BAA4B;AAC9D;AACA;AACA;AACA;AACA,6CAA6C,4BAA4B;AACzE;AACA,IAAI,mCAAmC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,kCAAkC,6BAA6B;AAC/D;AACA;AACA;AACA;AACA,6CAA6C,4BAA4B;AACzE;AACA,IAAI,mCAAmC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,6BAA6B;AACjC;AACA;AACA;AACA,OAAO,YAAY,qCAAqC,YAAY;AACpE,sCAAsC,YAAY;AAClD;AACA,QAAQ,YAAY;AACpB;AACA,gDAAgD;AAChD,yBAAyB;AACzB;AACA;AACA;AACA,4BAA4B,YAAY;AACxC,uBAAuB,YAAY;AACnC,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA,gDAAgD;AAChD,0BAA0B;AAC1B;AACA;AACA;AACA,0BAA0B,YAAY,yBAAyB,UAAU;AACzE,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA,QAAQ,kCAAkC;AAC1C;AACA;AACA;AACA,yBAAyB,UAAU,yBAAyB,QAAQ,EAAE;AACtE,SAAS,sBAAsB,4BAA4B,eAAe;AAC1E,gDAAgD,UAAU;AAC1D,YAAY,WAAW,qCAAqC,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA,mBAAmB,WAAW,GAAG,iBAAiB;AAClD;AACA;AACA;AACA,oBAAoB,YAAY;AAChC,2BAA2B,YAAY;AACvC,IAAI,WAAW;AACf;AACA;AACA;AACA,YAAY,WAAW;AACvB,yDAAyD;AACzD;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA,IAAI,iBAAiB;AACrB;AACA;AACA;AACA,IAAI,4BAA4B;AAChC,IAAI,sBAAsB;AAC1B,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qCAAqC;AACrC;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,yBAAyB;AACpD;AACA,IAAI,iCAAiC;AACrC,IAAI,mCAAmC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;AACA,QAAQ,wBAAwB;AAChC;AACA;AACA;AACA;AACA,IAAI,yDAAyD;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,QAAQ;AACjD,SAAS,iCAAiC;AAC1C,+BAA+B,4BAA4B;AAC3D,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACnvBA;AACA;AACA;AACA;AACA;AACA,SAASgB,WAAT,CAAqBvC,IAArB,EAA2B;AACvBA,WAAOA,QAAQ,EAAf;AACA,QAAIwC,QAAQxC,KAAKwC,KAAL,IAAc,GAA1B;AAAA,QACIC,SAASzC,KAAKyC,MAAL,IAAe,GAD5B;AAAA,QAEIC,SAASC,GAAGC,KAAH,CAASC,UAAT,EAFb;AAGA,QAAIC,SAAS9C,KAAK+C,MAAL,IAAe,EAA5B;;AAEA,QAAIjB,OAAO,IAAX;AACA,QAAIkB,IAAJ;AACA,QAAIC,aAAc,OAAOjD,KAAKkD,SAAZ,KAA0B,QAA3B,GAAuCrC,SAASC,aAAT,CAAuBd,KAAKkD,SAA5B,CAAvC,GAAgFlD,KAAKkD,SAAtG;AACA,SAAKC,KAAL,GAAanD,IAAb;;AAEA,QAAIA,KAAKkD,SAAT,EAAoB;AAChBF,eAAOL,GAAGS,MAAH,CAAUpD,KAAKkD,SAAf,CAAP;AACH,KAFD,MAEO;AACHF,eAAOL,GAAGS,MAAH,CAAU,MAAV,EAAkBC,MAAlB,CAAyB,KAAzB,CAAP;AACArD,aAAKkD,SAAL,GAAiBF,IAAjB;AACH;AACDA,SAAKM,IAAL,CAAU,OAAV,EAAmBd,KAAnB,EACKc,IADL,CACU,QADV,EACoBb,MADpB;;AAGA,QAAIc,OAAOvD,KAAKuD,IAAL,IAAaN,WAAWO,UAAX,CAAsB1C,aAAtB,CAAoC,aAApC,CAAxB;AACA,QAAI,CAACyC,IAAL,EAAW;AACPA,eAAO1C,SAAS4C,aAAT,CAAuB,KAAvB,CAAP;AACAF,aAAKG,SAAL,CAAeC,GAAf,CAAmB,KAAnB;AACAV,mBAAWO,UAAX,CAAsBI,WAAtB,CAAkCL,IAAlC;AACH;AACD,QAAIM,QAAQ,EAAZ;AACA,QAAIC,QAAQ,EAAZ;;AAEJ;AACI,QAAIC,QAAQpB,GAAGqB,MAAH,CAAUD,KAAV,GACPE,IADO,CACF,CAACzB,KAAD,EAAQC,MAAR,CADE,EAEPyB,YAFO,CAEM,GAFN,EAGPC,MAHO,CAGA,CAAC,GAHD,EAIPC,EAJO,CAIJ,MAJI,EAIIC,IAJJ,CAAZ;;AAMJ;AACIrB,SAAKK,MAAL,CAAY,UAAZ,EAAwBA,MAAxB,CAA+B,YAA/B,EACKC,IADL,CACU,IADV,EACgB,WADhB,EAEKA,IAFL,CAEU,SAFV,EAEqB,YAFrB,EAGKA,IAHL,CAGU,MAHV,EAGkB,CAHlB,EAIKA,IAJL,CAIU,aAJV,EAIyB,CAJzB,EAKKA,IALL,CAKU,cALV,EAK0B,CAL1B,EAMKA,IANL,CAMU,QANV,EAMoB,MANpB,EAOKD,MAPL,CAOY,UAPZ,EAQKC,IARL,CAQU,GARV,EAQe,gBARf,EASKA,IATL,CASU,MATV,EASkB,MATlB;;AAWAN,SAAKK,MAAL,CAAY,UAAZ,EAAwBA,MAAxB,CAA+B,YAA/B,EACKC,IADL,CACU,IADV,EACgB,aADhB,EAEKA,IAFL,CAEU,SAFV,EAEqB,YAFrB,EAGKA,IAHL,CAGU,MAHV,EAGkB,CAHlB,EAIKA,IAJL,CAIU,aAJV,EAIyB,CAJzB,EAKKA,IALL,CAKU,cALV,EAK0B,CAL1B,EAMKA,IANL,CAMU,QANV,EAMoB,MANpB,EAOKD,MAPL,CAOY,UAPZ,EAQKC,IARL,CAQU,GARV,EAQe,iBARf,EASKA,IATL,CASU,MATV,EASkB,MATlB;;AAWA;AACA,QAAIgB,OAAOtB,KAAKK,MAAL,CAAY,OAAZ,EAAqBkB,SAArB,CAA+B,MAA/B,CAAX;AAAA,QACIC,SAASxB,KAAKK,MAAL,CAAY,OAAZ,EAAqBkB,SAArB,CAA+B,GAA/B,CADb;;AAGJ;AACI,aAASF,IAAT,GAAgB;AACZ;AACAC,aAAKhB,IAAL,CAAU,GAAV,EAAe,UAAUmB,CAAV,EAAa;AACxB,gBAAIC,SAASD,EAAEE,MAAF,CAASC,CAAT,GAAaH,EAAEI,MAAF,CAASD,CAAnC;AAAA,gBACIE,SAASL,EAAEE,MAAF,CAASI,CAAT,GAAaN,EAAEI,MAAF,CAASE,CADnC;AAAA,gBAEIC,OAAOC,KAAKC,IAAL,CAAUR,SAASA,MAAT,GAAkBI,SAASA,MAArC,CAFX;AAAA,gBAGIK,QAAQT,SAASM,IAHrB;AAAA,gBAIII,QAAQN,SAASE,IAJrB;AAAA,gBAKIK,gBAAgBZ,EAAEa,IAAF,GAAS,EAAT,GAAc,EALlC;AAAA,gBAMIC,gBAAgBd,EAAEe,KAAF,GAAU,EAAV,GAAe,EANnC;AAAA,gBAOIC,UAAUhB,EAAEI,MAAF,CAASD,CAAT,GAAcS,gBAAgBF,KAP5C;AAAA,gBAQIO,UAAUjB,EAAEI,MAAF,CAASE,CAAT,GAAcM,gBAAgBD,KAR5C;AAAA,gBASIO,UAAUlB,EAAEE,MAAF,CAASC,CAAT,GAAcW,gBAAgBJ,KAT5C;AAAA,gBAUIS,UAAUnB,EAAEE,MAAF,CAASI,CAAT,GAAcQ,gBAAgBH,KAV5C;AAWA,mBAAO,MAAMK,OAAN,GAAgB,GAAhB,GAAsBC,OAAtB,GAAgC,GAAhC,GAAsCC,OAAtC,GAAgD,GAAhD,GAAsDC,OAA7D;AACH,SAbD;;AAeApB,eAAOlB,IAAP,CAAY,WAAZ,EAAyB,UAAUmB,CAAV,EAAa;AAClC,mBAAO,eAAeA,EAAEG,CAAjB,GAAqB,GAArB,GAA2BH,EAAEM,CAA7B,GAAiC,GAAxC;AACH,SAFD;AAGH;;AAED,aAASc,gBAAT,CAA0BC,GAA1B,EAA+B;AAC3B,YAAIC,aAAa/F,KAAKkD,SAAL,CAAeM,UAAf,CAA0BwC,qBAA1B,EAAjB;AACA,YAAIC,UAAUjG,KAAKkD,SAAL,CAAe8C,qBAAf,EAAd;AACA,YAAIE,QAAQD,QAAQrB,CAAR,GAAYmB,WAAWnB,CAAnC;AAAA,YACIuB,QAAQF,QAAQlB,CAAR,GAAYgB,WAAWhB,CADnC;AAEA,YAAIqB,UAAU7C,KAAKyC,qBAAL,EAAd;;AAEA,YAAIK,OAAOH,QAAQJ,IAAIlB,CAAvB;AACA,YAAI0B,OAAOH,QAAQL,IAAIf,CAAvB;;AAEA,YAAIsB,OAAOD,QAAQ5D,KAAf,GAAuByD,QAAQzD,KAAnC,EAA0C;AACtC6D,oBAAQD,QAAQ5D,KAAR,GAAgB,EAAxB;AACH;;AAED,YAAI8D,OAAOF,QAAQ3D,MAAf,GAAwBwD,QAAQxD,MAApC,EAA4C;AACxC6D,oBAAQF,QAAQ3D,MAAR,GAAiB,EAAzB;AACH;AACDc,aAAKgD,KAAL,CAAWjB,IAAX,GAAkBe,OAAO,IAAzB;AACA9C,aAAKgD,KAAL,CAAWC,GAAX,GAAiBF,OAAO,IAAxB;AACH;;AAED;AACA,aAASG,OAAT,GAAmB;AACf;AACAnC,eAAOA,KAAK3G,IAAL,CAAUmG,KAAV,CAAP;;AAEA;AACAQ,aAAKiC,KAAL,CAAW,cAAX,EAA2B,UAAU9B,CAAV,EAAa;AACpC,mBAAOA,EAAEa,IAAF,GAAS,mBAAT,GAA+B,EAAtC;AACH,SAFD,EAEGiB,KAFH,CAES,YAFT,EAEuB,UAAU9B,CAAV,EAAa;AAChC,mBAAOA,EAAEe,KAAF,GAAU,iBAAV,GAA8B,EAArC;AACH,SAJD;;AAOA;AACAlB,aAAKoC,KAAL,GAAarD,MAAb,CAAoB,UAApB,EACKC,IADL,CACU,OADV,EACmB,UAAUmB,CAAV,EAAa;AACxB,mBAAOA,EAAEE,MAAF,CAAShH,IAAT,CAAcgJ,UAAd,GAA2B,OAAlC;AACH,SAHL,EAIKJ,KAJL,CAIW,cAJX,EAI2B,UAAU9B,CAAV,EAAa;AAChC,mBAAOA,EAAEa,IAAF,GAAS,mBAAT,GAA+B,EAAtC;AACH,SANL,EAOKiB,KAPL,CAOW,YAPX,EAOyB,UAAU9B,CAAV,EAAa;AAC9B,mBAAOA,EAAEe,KAAF,GAAU,iBAAV,GAA8B,EAArC;AACH,SATL,EAUKpB,EAVL,CAUQ,YAVR,EAUsB,UAAUwC,CAAV,EAAa;AAC3B,gBAAIC,MAAMD,EAAE/B,MAAZ;AACA,gBAAIF,SAASiC,EAAEjC,MAAf;AACA,gBAAImB,MAAMnD,GAAGmE,KAAH,CAAS,IAAT,CAAV;AACA7H,oBAAQC,GAAR,CAAY4G,GAAZ;;AAEAvC,iBAAKgD,KAAL,CAAWQ,OAAX,GAAqB,CAArB;AACA;AACA;AACA,gBAAIjF,KAAKqB,KAAL,CAAW6D,cAAf,EAA+B;AAC3BlF,qBAAKqB,KAAL,CAAW6D,cAAX,CAA0BJ,CAA1B,EAA6BrD,IAA7B;AACA0D,2BAAWpB,iBAAiB,EAACjB,GAAGkB,IAAI,CAAJ,CAAJ,EAAYf,GAAGe,IAAI,CAAJ,CAAf,EAAjB,CAAX;AACH;AACJ,SAvBL;;AAyBA;AACAxB,aAAK4C,IAAL,GAAYC,MAAZ;;AAEA;AACA;AACA3C,iBAASA,OAAO7G,IAAP,CAAYkG,KAAZ,EAAmB,UAAUY,CAAV,EAAa;AACrC,mBAAOA,EAAE2C,EAAT;AACH,SAFQ,CAAT;;AAIA;AACA5C,eAAOD,SAAP,CAAiB,QAAjB,EACK8C,OADL,CACa,WADb,EAC0B,UAAU5C,CAAV,EAAa;AAC/B,mBAAOA,EAAE6C,SAAT;AACH,SAHL;;AAKA;AACA,YAAIC,IAAI/C,OAAOkC,KAAP,GAAerD,MAAf,CAAsB,OAAtB,CAAR;AACAkE,UAAElE,MAAF,CAAS,YAAT,EACKC,IADL,CACU,OADV,EACmB,UAAUmB,CAAV,EAAa;AACxB,mBAAO,WAAWA,EAAE9G,IAAF,CAAOgJ,UAAP,IAAqB,EAAhC,CAAP;AACH,SAHL,EAIKrD,IAJL,CAIU,GAJV,EAIeR,MAJf,EAKKsB,EALL,CAKQ,YALR,EAKsB,UAAUK,CAAV,EAAa;AAC3BlB,iBAAKgD,KAAL,CAAWQ,OAAX,GAAqB,CAArB;AACA;AACA;AACA,gBAAIjF,KAAKqB,KAAL,CAAW6D,cAAf,EAA+B;AAC3BlF,qBAAKqB,KAAL,CAAW6D,cAAX,CAA0BvC,EAAE9G,IAA5B,EAAkC4F,IAAlC;AACA0D,2BAAWpB,iBAAiBpB,CAAjB,CAAX;AACH;AACJ,SAbL;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAD,eAAO0C,IAAP,GAAcC,MAAd;;AAEA;AACApD,cAAMzC,KAAN;AACH;;AAEDtB,SAAK6D,KAAL,CAAW2D,OAAX,CAAmB,UAAUC,IAAV,EAAgB;AAC/B5D,cAAM6D,IAAN,CAAWD,IAAX;AACAhB;AACH,KAHD;;AAKAzG,SAAK8D,KAAL,CAAW0D,OAAX,CAAmB,UAAUG,IAAV,EAAgB;AAC/B7D,cAAM4D,IAAN,CAAWC,IAAX;AACAlB;AACH,KAHD;AAIA,WAAO,IAAP;AACH;;AAGD,iDAAelE,WAAf,E;;ACtNA;;AAEA,IAAIqF,aAAa,CAAC,CAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2BnK,IAA3B,EAAiC;AAC7B,QAAI8J,OAAO,EAACL,IAAI,EAAEQ,UAAP,EAAmBN,WAAW,KAA9B,EAAqC3J,MAAMA,IAA3C,EAAX;AACAoK,WAAOC,MAAP,CAAcP,IAAd,EAAoBK,KAApB;AACA,WAAOL,IAAP;AACH;;AAED;AACA,SAASQ,WAAT,CAAqBC,QAArB,EAA+B;AAC3B,QAAIrE,QAAQ,EAAZ;AACA,QAAIC,QAAQ,EAAZ;AACA,QAAIqE,UAAU,EAAd;;AAEAD,aAASV,OAAT,CAAiB,UAAUY,OAAV,EAAmBC,KAAnB,EAA0B;AACvCD,gBAAQZ,OAAR,CAAgB,UAAUC,IAAV,EAAgB;AAC5BA,iBAAKd,UAAL,GAAkB2B,kBAAkBb,IAAlB,CAAlB;AACA,gBAAIc,MAAMV,WAAWJ,KAAK3B,GAAhB,EAAqB2B,IAArB,CAAV;;AAEAU,oBAAQV,KAAKe,KAAb,IAAsBD,GAAtB;AACA1E,kBAAM6D,IAAN,CAAWa,GAAX;AACH,SAND;AAOH,KARD;;AAUA1E,UAAM2D,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC1BA,aAAK9J,IAAL,CAAU8K,UAAV,CAAqBjB,OAArB,CAA6B,UAAUkB,IAAV,EAAgB;AACzC5E,kBAAM4D,IAAN,CAAW;AACP7C,wBAAQ4C,IADD;AAEP9C,wBAAQwD,QAAQO,KAAKF,KAAb,CAFD;AAGPlD,sBAAM,KAHC;AAIPE,uBAAO;AAJA,aAAX;AAMH,SAPD;AAQH,KATD;AAUA,WAAO,EAAC3B,YAAD,EAAQC,YAAR,EAAP;AACH;;AAGD;AACA,SAAS6E,YAAT,CAAsBC,aAAtB,EAAqC;AACjC,QAAInB,OAAO;AACPjJ,cAAMoK,cAAcJ,KADb;AAEPK,kBAAU;AAFH,KAAX;;AAKAD,kBAAcH,UAAd,CAAyBjB,OAAzB,CAAiC,UAAUkB,IAAV,EAAgB;AAC7CjB,aAAKoB,QAAL,CAAcnB,IAAd,CAAmBiB,aAAaD,IAAb,CAAnB;AACH,KAFD;;AAIA,WAAOjB,IAAP;AACH;;AAED,SAASa,iBAAT,CAA2BE,KAA3B,EAAkC;AAC9B,QAAIM,WAAW,aAAf;AACA,QAAIN,MAAMO,SAAV,EAAqB;AACjBD,mBAAW,YAAX;AACH,KAFD,MAEO,IAAIN,MAAMQ,QAAV,EAAoB;AACvBF,mBAAW,WAAX;AACH,KAFM,MAEA,IAAIN,MAAMS,SAAV,EAAqB;AACxBH,mBAAW,SAAX;AACH;;AAED,QAAIN,MAAMU,QAAV,EAAoB;AAChBJ,oBAAY,YAAZ;AACH;AACD,WAAOA,QAAP;AACH;;AAED;AACA,SAASK,mBAAT,CAA6BC,MAA7B,EAAqCpJ,IAArC,EAA2C;AACvC,QAAIqJ,OAAOV,aAAaS,OAAOR,aAApB,CAAX;AACA,QAAInG,SAASzC,KAAKyC,MAAlB;AACA,QAAID,QAAQxC,KAAKwC,KAAjB;AACA,QAAI8G,OAAO3G,GAAGqB,MAAH,CAAUsF,IAAV,GAAiBrF,IAAjB,CAAsB,CAACxB,MAAD,EAASD,KAAT,CAAtB,CAAX;AACA,QAAIqB,QAAQyF,KAAKzF,KAAL,CAAWwF,IAAX,CAAZ;AACAxF,UAAM2D,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC1B,YAAI8B,OAAO,CAAC,OAAD,EAAU,GAAV,EAAe,GAAf,CAAX;AACA,YAAIC,YAAYJ,OAAOK,QAAP,CAAgBhC,KAAKjJ,IAArB,CAAhB;AACA,YAAIgL,SAAJ,EAAe;AACXA,sBAAU1D,GAAV,GAAgB,EAAhB;AACAyD,iBAAK/B,OAAL,CAAa,UAAUkC,GAAV,EAAe;AACxBF,0BAAU1D,GAAV,CAAc4D,GAAd,IAAqBjC,KAAKiC,GAAL,CAArB;AACH,aAFD;AAGA;AACA,gBAAI9E,IAAI4E,UAAU1D,GAAV,CAAclB,CAAtB;AACA4E,sBAAU1D,GAAV,CAAclB,CAAd,GAAkB4E,UAAU1D,GAAV,CAAcf,CAAhC;AACAyE,sBAAU1D,GAAV,CAAcf,CAAd,GAAkBH,CAAlB;AACH;AACJ,KAbD;AAcH;;AAED,SAAS+E,aAAT,CAAuB5L,YAAvB,EAAqC;AACjC,QAAI6L,WAAW7L,aAAa8L,QAA5B;AACA,QAAIC,gBAAgB/L,aAAa+L,aAAjC;AACA,QAAIC,QAAQD,cAAcE,cAA1B;AACA,QAAIC,kBAAkBH,cAAcG,eAApC;AACA,QAAIC,eAAeJ,cAAcI,YAAjC;AACA,QAAIT,WAAW,EAAf;AACA,QAAIb,aAAJ;;AAEA,aAASuB,aAAT,CAAuBC,SAAvB,EAAkC;AAC9B,eAAO;AACH3B,wBAAY,EADT;AAEH4B,0BAAc,EAFX,EAEe;AAClB7B,mBAAO4B,SAHJ;AAIHlB,sBAAUe,gBAAgBK,QAAhB,CAAyBF,SAAzB,CAJP;AAKHrB,uBAAWqB,cAAcR,QALtB;AAMHW,kBAAM;AANH,SAAP;AAQH;;AAED,QAAIrC,WAAW,EAAf,CApBiC,CAoBf;;AAElB,aAASsC,QAAT,CAAkB/C,IAAlB,EAAwB;AACpB,YAAI,CAACS,SAAST,KAAK8C,IAAd,CAAL,EAA0B;AACtBrC,qBAAST,KAAK8C,IAAd,IAAsB,EAAtB;AACH;AACDrC,iBAAST,KAAK8C,IAAd,EAAoB7C,IAApB,CAAyBD,IAAzB;;AAEA,YAAI,CAACA,KAAKgB,UAAL,CAAgBgC,MAArB,EAA6B;AACzB;AACH;;AAEDhD,aAAKgB,UAAL,CAAgBjB,OAAhB,CAAwB,UAAUkD,QAAV,EAAoB;AACxC,gBAAIC,gBAAgBlB,SAASiB,SAASlC,KAAlB,CAApB;AACAmC,0BAAcJ,IAAd,GAAqB9C,KAAK8C,IAAL,GAAY,CAAjC;;AAEA,gBAAI9C,KAAKsB,SAAL,IAAkBtB,KAAKwB,SAA3B,EAAsC;AAClC0B,8BAAc1B,SAAd,GAA0B,IAA1B;AACH;;AAED,gBAAI0B,cAAc5B,SAAlB,EAA6B;AACzBtB,qBAAKuB,QAAL,GAAgB,IAAhB;AACH;;AAED,gBAAI2B,cAAcN,YAAd,CAA2BI,MAA/B,EAAuC;AACnCE,8BAAcN,YAAd,CAA2B7C,OAA3B,CAAmC,UAAU5H,KAAV,EAAiB;AAChD,wBAAI6J,SAAS7J,MAAMgL,SAAf,KAA6BhL,MAAMgL,SAAN,KAAoBnD,KAAKe,KAA1D,EAAiE;AAC7DmC,sCAAclC,UAAd,CAAyBf,IAAzB,CAA8B+B,SAAS7J,MAAMgL,SAAf,CAA9B;AACH;AACJ,iBAJD;AAKH;AACDJ,qBAASG,aAAT;;AAEA,gBAAIA,cAAc3B,QAAlB,EAA4B;AACxBvB,qBAAKuB,QAAL,GAAgB,IAAhB;AACH;AACJ,SAxBD;AAyBH;;AAEDe,UAAMvC,OAAN,CAAc,UAACqD,IAAD,EAAU;AACpB,YAAIC,eAAerB,SAASoB,KAAKE,YAAd,KAA+BZ,cAAcU,KAAKE,YAAnB,CAAlD;AACA,YAAIJ,gBAAgBlB,SAASoB,KAAKD,SAAd,CAApB;;AAEAE,qBAAaT,YAAb,CAA0B3C,IAA1B,CAA+BmD,IAA/B;;AAEA,YAAI,CAACF,aAAL,EAAoB;AAChBA,4BAAgBR,cAAcU,KAAKD,SAAnB,CAAhB;AACAnB,qBAASoB,KAAKD,SAAd,IAA2BD,aAA3B;AACH;;AAED;AACA,YAAIE,KAAKE,YAAL,KAAsBb,YAA1B,EAAwC;AACpCY,yBAAarC,UAAb,CAAwBf,IAAxB,CAA6BiD,aAA7B;AACH;AACDlB,iBAASoB,KAAKE,YAAd,IAA8BD,YAA9B;AACH,KAhBD;;AAkBAlC,oBAAgBa,SAASS,YAAT,CAAhB;AACAM,aAAS5B,aAAT;;AAEA,WAAO,EAACA,4BAAD,EAAgBa,kBAAhB,EAA0BvB,kBAA1B,EAAP;AACH;;AAED,mDAAe;AACX1J,UAAM,gBADK;AAEXsJ,WAAO;AACHnK,cAAM;AACFqN,kBAAMjD,MADJ;AAEFkD,mBAFE,sBAEQ;AACN,uBAAO,IAAP;AACH;AAJC;AADH,KAFI;AAUXtN,QAVW,kBAUJ;AACH,YAAImE,OAAO,IAAX;AACA,eAAO;AACHoJ,qBAAS,EADN;AAEHlL,kBAAM;AACF+C,wBAAQ,EADN;AAEFP,uBAAO,GAFL;AAGFC,wBAAQ,GAHN;AAIFS,2BAAW,IAJT;AAKF8D,gCAAgB,wBAAUrJ,IAAV,EAAgB;AAC5B,wBAAIuN,UAAUnD,OAAOC,MAAP,CAAc,EAAd,EAAkBrK,IAAlB,CAAd;AACA,wBAAIA,KAAKkH,MAAT,EAAiB;AACbqG,gCAAQF,IAAR,GAAe,MAAf;AACAE,gCAAQC,QAAR,GAAmBxN,KAAKkH,MAAL,CAAYlH,IAAZ,CAAiB6K,KAAjB,KAA2B1G,KAAKnE,IAAL,CAAUkM,QAAxD;AACA,4BAAIuB,gBAAgBzN,KAAKkH,MAAL,CAAYlH,IAAZ,CAAiB0M,YAAjB,CAA8BgB,MAA9B,CAAqC,UAACzL,KAAD,EAAW;AAChE,mCAAOA,MAAMgL,SAAN,KAAoBjN,KAAKgH,MAAL,CAAYhH,IAAZ,CAAiB6K,KAA5C;AACH,yBAFmB,CAApB;AAGA0C,gCAAQtL,KAAR,GAAiBwL,cAAc,CAAd,KAAoBA,cAAc,CAAd,EAAiBxL,KAAtC,IAAgD,EAAhE;AACH,qBAPD,MAOO;AAAE;AACLsL,gCAAQF,IAAR,GAAe,MAAf;AACH;AACDlJ,yBAAKoJ,OAAL,GAAeA,OAAf;AACApJ,yBAAKwJ,KAAL,CAAWC,OAAX,CAAmBC,UAAnB,GAAgC,IAAhC;AACH;AAnBC;AAFH,SAAP;AAwBH,KApCU;AAqCXhK,WArCW,qBAqCD;AACN,YAAI+E,QAAQkF,iBAAiB,KAAKH,KAAL,CAAWI,OAA5B,CAAZ;AACA,aAAK1L,IAAL,CAAUuD,IAAV,GAAiB,KAAKoI,GAAL,CAAS7K,aAAT,CAAuB,aAAvB,CAAjB;AACA,aAAKd,IAAL,CAAUkD,SAAV,GAAsB,KAAKoI,KAAL,CAAWM,SAAjC;AACA,aAAK5L,IAAL,CAAUwC,KAAV,GAAkBqJ,SAASA,SAAStF,MAAM/D,KAAf,IAAwB,EAAjC,CAAlB;AACA,aAAKsJ,IAAL;AACH,KA3CU;;AA4CX5K,aAAS;AACL6K,2BADK,+BACevD,KADf,EACsB;AAAA;;AACvBA,kBAAMO,SAAN,GAAkB,IAAlB;AACAP,kBAAMwD,WAAN,GAAoB,IAApB;AACA,iBAAKpO,qBAAL,CAA2B,KAAKD,IAAL,CAAUsO,UAArC,EACK9O,IADL,CACU,UAACQ,IAAD,EAAU;AACZoK,uBAAOC,MAAP,CAAc,MAAKrK,IAAnB,EAAyBA,IAAzB;AACA,sBAAKmO,IAAL;AACH,aAJL;AAKH,SATI;AAULI,sBAVK,0BAUUvO,IAVV,EAUgB;AACjB,mBAAOX,OAAOC,EAAP,CAAUC,KAAV,CAAgB,gDAAhB,EAAkE;AACrEiP,wBAAQ,MAD6D;AAErExO,sBAAMA;AAF+D,aAAlE,EAGJR,IAHI,CAGC,UAACC,GAAD,EAAS;AACb,uBAAOA,IAAIE,IAAJ,EAAP;AACH,aALM,CAAP;AAMH,SAjBI;AAkBL8O,4BAlBK,gCAkBgBzO,IAlBhB,EAkBsB;AACvB,mBAAOX,OAAOC,EAAP,CAAUC,KAAV,CAAgB,qCAAhB,EAAuD;AAC1DiP,wBAAQ,MADkD;AAE1DxO,sBAAMA;AAFoD,aAAvD,EAGJR,IAHI,CAGC,UAACC,GAAD,EAAS;AACb,uBAAOA,IAAIE,IAAJ,EAAP;AACH,aALM,CAAP;AAMH,SAzBI;AA0BLM,6BA1BK,iCA0BiBqO,UA1BjB,EA0B6B;AAC9B,mBAAOjP,OAAOC,EAAP,CAAUC,KAAV,qCAAkD+O,UAAlD,EAAgE9O,IAAhE,CAAqE,UAACC,GAAD,EAAS;AACjF,oBAAIA,IAAIC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,2BAAOD,IAAIE,IAAJ,EAAP;AACH,iBAFD,MAEO;AACH,2BAAOC,QAAQC,MAAR,CAAeJ,GAAf,CAAP;AACH;AACJ,aANM,EAMJD,IANI,CAMC,UAACC,GAAD,EAAS;AACb,oBAAIA,IAAIK,GAAJ,KAAY,CAAZ,IAAiBL,IAAIM,OAAJ,KAAgB,CAArC,EAAwC;AACpC,2BAAON,IAAIO,IAAX;AACH,iBAFD,MAEO;AACH,2BAAOJ,QAAQC,MAAR,CAAeJ,GAAf,CAAP;AACH;AACJ,aAZM,CAAP;AAaH,SAxCI;AAyCLiP,+BAzCK,mCAyCmB1O,IAzCnB,EAyCyB;AAC1B,gBAAImE,OAAO,IAAX;AACA,gBAAI9D,WAAW8D,KAAKnE,IAApB;AACA,gBAAIsO,aAAajO,SAASiO,UAA1B;AACA,gBAAIpH,SAASlH,KAAKkH,MAAL,CAAYlH,IAAzB;AACA,gBAAIgH,SAAShH,KAAKgH,MAAL,CAAYhH,IAAzB;AACA,gBAAIiN,YAAYjG,OAAO6D,KAAvB;;AAEA,gBAAI4C,gBAAgBvG,OAAOwF,YAAP,CAAoBgB,MAApB,CAA2B,UAACzL,KAAD,EAAW;AACtD,uBAAOA,MAAMgL,SAAN,KAAoBA,SAA3B;AACH,aAFmB,CAApB;;AAIA,gBAAIQ,cAAcX,MAAd,KAAyB,CAA7B,EAAgC;AAC5B,uBAAO3I,KAAKwK,QAAL,CAAcC,KAAd,CAAoB,UAApB,CAAP;AACH,aAFD,MAEO;AACHnB,8BAAc5D,OAAd,CAAsB,UAACpH,OAAD,EAAa;AAC/B,wBAAIA,QAAQR,KAAR,CAAcoL,IAAd,KAAuB,gBAA3B,EAA6C;AACzC5K,gCAAQR,KAAR,CAAc4M,MAAd,CAAqBhF,OAArB,CAA6B,UAAC5H,KAAD,EAAW;AACpC6M,2CAAe7M,KAAf;AACH,yBAFD;AAGH,qBAJD,MAIO;AACH6M,uCAAerM,QAAQR,KAAvB;AACH;AACJ,iBARD;AASH;;AAED,qBAAS6M,cAAT,CAAwB7M,KAAxB,EAA+B;AAC3B,oBAAI8M,OAAJ;AACA,oBAAI9M,MAAMoL,IAAN,KAAe,SAAnB,EAA8B;AAC1B0B,8BAAU5K,KAAKoK,cAAL,CAAoB;AAC1BD,oCAAYA,UADc;AAE1BU,iCAAS/M,MAAM+M,OAFW;AAG1BC,oCAAYhN,MAAM4M;AAHQ,qBAApB,CAAV;AAKH,iBAND,MAMO;AACHE,8BAAU5K,KAAKsK,oBAAL,CAA0B;AAChCH,oCAAYA,UADoB;AAEhCU,iCAAS/M,MAAM+M;AAFiB,qBAA1B,CAAV;AAIH;;AAEDpP,wBAAQsP,OAAR,CAAgBH,OAAhB,EAAyBvP,IAAzB,CAA8B,UAACQ,IAAD,EAAU;AACpC,wBAAIA,KAAKF,GAAL,KAAa,CAAb,IAAkBE,KAAKD,OAAL,KAAiB,CAAvC,EAA0C;AACtCoE,6BAAKwK,QAAL,CAAcQ,OAAd,CAAsB,MAAtB;AACAhL,6BAAKiK,mBAAL,CAAyB/N,QAAzB,EAAmC4M,SAAnC;AACH,qBAHD,MAGO;AACH9I,6BAAKwK,QAAL,CAAcC,KAAd,CAAoB5O,KAAKkB,GAAzB;AACH;AACJ,iBAPD;AAQH;AACJ,SA3FI;AA4FLkO,mBA5FK,uBA4FOnN,KA5FP,EA4Fc;AACf,gBAAI,CAAC,QAAD,EAAW,MAAX,EAAmB0K,QAAnB,CAA4B1K,MAAM+E,MAAN,CAAaqI,QAAzC,KAAsD,KAAK1B,KAAL,CAAWC,OAAX,CAAmBI,GAAnB,CAAuBsB,QAAvB,CAAgCrN,MAAM+E,MAAtC,CAA1D,EAAyG;AACrG/E,sBAAMsN,eAAN;AACH,aAFD,MAEO;AACH,qBAAK5B,KAAL,CAAWC,OAAX,CAAmBC,UAAnB,GAAgC,KAAhC;AACH;AACJ,SAlGI;AAmGLM,YAnGK,kBAmGE;AACH,gBAAI,CAAC,KAAKnO,IAAL,CAAUsO,UAAf,EAA2B;AACvB;AACH;AACD,gBAAI7C,SAASO,cAAc,KAAKhM,IAAnB,CAAb;AACAwL,gCAAoBC,MAApB,EAA4B,KAAKpJ,IAAjC;AACA,gBAAImN,cAAclF,YAAYmB,OAAOlB,QAAnB,CAAlB;AACAH,mBAAOC,MAAP,CAAc,KAAKhI,IAAnB,EAAyBmN,WAAzB;AACA,gBAAI,YAAJ,CAAgB,KAAKnN,IAArB;AACH,SA5GI;AA6GLoN,cA7GK,kBA6GEzP,IA7GF,EA6GQ;AACT,iBAAKA,IAAL,GAAYA,IAAZ;AACA,iBAAKmO,IAAL;AACH;AAhHI;AA5CE,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJA;;AAEA,0E;;AC9BA,0BAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,oDAAoD,yBAAyB,mBAAmB,qBAAqB,+CAA+C,sBAAsB,aAAa,oGAAoG,EAAE,qFAAqF,aAAa,wFAAwF,EAAE,qDAAqD,aAAa,0FAA0F,EAAE,4CAA4C,aAAa,wFAAwF,EAAE,6TAA6T,OAAO,8CAA8C,KAAK,yBAAyB,2CAA2C,6DAA6D,gBAAgB;AAC54C;AACA,iBAAiB;AACjB,6E;;ACHA;AACA,4BAA4S;AAC5S;AACA;AACA;AACA;AACA;AACiL;AACjL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;ACzBO,IAAMuB,kBAAkB;AAC3BC,eAAW,CAAC,CADe;AAE3BC,aAAS,CAFkB;AAG3BC,aAAS,CAHkB;AAI3BC,eAAW,CAJgB;AAK3BC,oBAAgB,CALW;AAM3BC,mBAAe,CANY;AAO3BC,gBAAY;AAPe,CAAxB;;AAWA,IAAMC,uBAAuB;AAChC,UAAM,OAD0B;AAEhC,OAAG,OAF6B;AAGhC,OAAG,KAH6B;AAIhC,OAAG,KAJ6B;AAKhC,OAAG,MAL6B;AAMhC,OAAG,MAN6B;AAOhC,OAAG;AAP6B,CAA7B;;AAWA,IAAMC,yBAAyB;AAClC,UAAM,SAD4B;AAElC,OAAG,SAF+B;AAGlC,OAAG,EAH+B;AAIlC,OAAG,SAJ+B;AAKlC,OAAG,MAL+B;AAMlC,OAAG,MAN+B;AAOlC,OAAG;AAP+B,CAA/B,C;;ACtBP;;AAGA,iDAAe;AACXtP,UAAM,cADK;;AAGXb,QAHW,kBAGJ;AACH,eAAO;AACHoQ,0BAAc,EADX;AAEHV,6BAAiB,eAFd;AAGHW,yCAA6B;AACzB,sBAAM,OADmB;AAEzB,mBAAG,OAFsB,EAEb;AACZ,mBAAG,OAHsB,EAGb;AACZ,mBAAG,OAJsB;AAKzB,mBAAG,QALsB;AAMzB,mBAAG,QANsB;AAOzB,mBAAG;AAPsB;AAH1B,SAAP;AAaH,KAjBU;;AAkBXlG,WAAO;AACHnK,cAAM;AACFqN,kBAAMiD,KADJ;AAEFhD,mBAFE,sBAEQ;AACN,uBAAO,IAAP;AACH;AAJC;AADH,KAlBI;AA0BXzJ,WA1BW,qBA0BD;AACN,aAAK0M,qBAAL;AACAjP,gBAAQC,GAAR,CAAY,KAAKvB,IAAjB;AACH,KA7BU;;AA8BXwQ,WAAO;AACHxQ,cAAM;AADH,KA9BI;AAiCXuD,aAAS;AACL;AACAgN,6BAFK,mCAEmB;AACpB,gBAAIpM,OAAO,IAAX;AACA,gBAAIiM,eAAejM,KAAKnE,IAAxB;AACAoQ,yBAAavG,OAAb,CAAqB,UAAC4G,WAAD,EAAiB;AAClCtM,qBAAKuM,wBAAL,CAA8BD,WAA9B;AACH,aAFD;;AAIAL,2BAAeA,aAAaO,KAAb,CAAmB,CAAnB,CAAf;AACAP,yBAAaQ,IAAb,CAAkB,UAACC,EAAD,EAAKC,EAAL,EAAY;AAC1B,uBAAQD,GAAGE,eAAH,GAAqBD,GAAGC,eAAhC;AACH,aAFD;AAGAzP,oBAAQC,GAAR,CAAY6O,YAAZ;AACA,iBAAKA,YAAL,GAAoBA,YAApB;AACH,SAfI;AAgBLM,gCAhBK,oCAgBoBD,WAhBpB,EAgBiC;AAClC,gBAAIA,YAAY/P,cAAhB,EAAgC;AAC5B+P,4BAAYM,eAAZ,GAA8BN,YAAY/P,cAAZ,CAA2BhB,MAAzD;AACH,aAFD,MAEO;AACH+Q,4BAAYM,eAAZ,GAA8B,eAAArB,CAAgBC,SAA9C;AACH;;AAEDc,wBAAYO,SAAZ,GAAwB;AACpBC,sBAAM,oBAAAf,CAAqBO,YAAYM,eAAjC,KAAqD,KADvC;AAEpB1D,sBAAM,sBAAA8C,CAAuBM,YAAYM,eAAnC;AAFc,aAAxB;AAIH,SA3BI;AA4BLG,wBA5BK,4BA4BYT,WA5BZ,EA4ByB;AAC1B,gBAAIU,YAAY;AACZC,yBAAS,kBADG;AAEZpR,sBAAMyQ,WAFM;AAGZY,uBAAO,MAHK;AAIZxQ,sBAAM,SAAS4P,YAAYvQ;AAJf,aAAhB;;AAOA,oBAAQuQ,YAAYM,eAApB;AACI,qBAAK,eAAArB,CAAgBC,SAArB;AACIvF,2BAAOC,MAAP,CAAc8G,SAAd,EAAyB;AACrBE,+BAAO,MADc;AAErBD,iCAAS,gBAFY;AAGrBvQ,8BAAM,YAAY4P,YAAYvQ;AAHT,qBAAzB;AAKA;AACJ,qBAAK,eAAAwP,CAAgBE,OAArB;AACI;AACJ,qBAAK,eAAAF,CAAgBG,OAArB;AACI;AACJ,qBAAK,eAAAH,CAAgBI,SAArB;AACI;AACJ,qBAAK,eAAAJ,CAAgBK,cAArB;AACI;AACJ,qBAAK,eAAAL,CAAgBM,aAArB;AACI;AACJ,qBAAK,eAAAN,CAAgBO,UAArB;AACI;AAnBR;;AAsBA,iBAAKvN,KAAL,CAAW,WAAX,EAAwByO,SAAxB;AACH;AA3DI;AAjCE,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuCA;;AAEA,sE;;AC5CA,uCAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,aAAa,gBAAgB,iBAAiB,OAAO,0EAA0E,wBAAwB,OAAO,6EAA6E,oCAAoC,OAAO,gDAAgD,oCAAoC,OAAO,yEAAyE,oCAAoC,OAAO,+BAA+B,sBAAsB,iCAAiC,qBAAqB,OAAO,iCAAiC,+CAA+C,GAAG,oCAAoC,OAAO,4CAA4C,sBAAsB,iCAAiC,wBAAwB,OAAO,cAAc,KAAK,yBAAyB,gDAAgD,+HAA+H,GAAG;AAC/pC;AACA,8BAAiB;AACjB,wF;;ACHA;AACA,4BAA4S;AAC5S;AACA;AACA;AACA;AACA;AACiL;AACjL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;ACzBA,mDAAe;AACXtQ,UAAM,gBADK;;AAGXb,QAHW,kBAGJ;AACH,eAAO,EAAP;AACH,KALU;;AAMXmK,WAAO;AACHmH,cAAM;AACFjE,kBAAMkE,MADJ;AAEFjE,mBAFE,sBAEQ;AACN,uBAAO,CAAP;AACH;AAJC;AADH,KANI;AAcXzJ,WAdW,qBAcD,CACT,CAfU;;AAgBXN,aAAS;AAhBE,CAAf,E;;;;;;;;;;;;;ACWA;;AAEA,0E;;ACbA,yCAA0B,aAAa,0BAA0B,wBAAwB,gCAAgC,oCAAoC,yDAAyD,gBAAgB,OAAO,kBAAkB,4BAA4B,OAAO,kBAAkB,4BAA4B,OAAO,kBAAkB;AACzW;AACA,gCAAiB;AACjB,4F;;ACHA;AACA,4BAA2S;AAC3S;AACA;AACA;AACA;AACA;AACgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;ACzBA;;AAEA,uDAAe;AACX1C,UAAM,oBADK;AAEXb,QAFW,kBAEL;AACJ,eAAO;AACHkQ,kCAAsB,oBAAAA;AADnB,SAAP;AAGD,KANU;;AAOX/F,WAAO;AACHnK,cAAM;AACFqN,kBAAMjD,MADJ;AAEFkD,mBAFE,sBAEQ;AACN,uBAAO,IAAP;AACH;AAJC;AADH;AAPI,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4CA;;AAEA,kF;;AChDA,6CAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,iCAAiC,WAAW,+BAA+B,uBAAuB,yBAAyB,mDAAmD,2BAA2B,qEAAqE,yBAAyB,0CAA0C,2BAA2B,4FAA4F,yBAAyB,2CAA2C,2BAA2B,uHAAuH,yBAAyB,2CAA2C,2BAA2B,gHAAgH,yBAAyB,2CAA2C,2BAA2B,0FAA0F,yBAAyB,2CAA2C,2BAA2B,wFAAwF,yBAAyB,2CAA2C,2BAA2B,wFAAwF,yBAAyB,6CAA6C,2BAA2B,6GAA6G,yBAAyB,6CAA6C,2BAA2B;AAC7yD;AACA,oCAAiB;AACjB,oG;;ACHA;AACA,4BAA2S;AAC3S;AACA;AACA;AACA;AACA;AACgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;ACzBA;AACA;AACA;;AAEA;;6CAEe;AACXzM,UAAM,kBADK;;AAGXb,QAHW,kBAGJ;AACH,eAAO;AACHkQ,kCAAsB,oBAAAA;AADnB,SAAP;AAGH,KAPU;;AAQX5M,gBAAY,EAACkO,eAAA,qCAAD,EAAgBC,eAAA,qCAAhB,EAA+BC,mBAAA,yCAA/B,EARD;AASXvH,WAAO;AACHnK,cAAM;AACFqN,kBAAMjD,MADJ;AAEFkD,mBAFE,sBAEQ;AACN,uBAAO,IAAP;AACH;AAJC;AADH,KATI;AAiBXkD,WAAO;AACH,gBAAQ;AADL,KAjBI;AAoBX3M,WApBW,qBAoBD;AACNvC,gBAAQC,GAAR,CAAY,KAAKvB,IAAjB;AACA,aAAK2R,UAAL;AACH,KAvBU;;AAwBXpO,aAAS;AACLoO,kBADK,wBACQ;AACT,gBAAI3R,OAAO,KAAKA,IAAhB;;AAEA,gBAAI4R,YAAY5R,KAAKU,cAAL,CAAoByL,aAApB,CAAkC0F,KAAlC,CAAwCC,MAAxC,CAA+C,UAACD,KAAD,EAAQE,IAAR,EAAiB;AAC5EF,wBAAQA,MAAMG,MAAN,CAAaD,KAAKF,KAAlB,CAAR;AACA,uBAAOA,KAAP;AACH,aAHe,EAGb,EAHa,CAAhB;;AAKAvQ,oBAAQC,GAAR,CAAYvB,KAAKU,cAAL,CAAoBhB,MAAhC;AACA,iBAAKuS,IAAL,CAAU,KAAKjS,IAAf,EAAqB,oBAArB,EAA2CA,KAAKU,cAAL,CAAoBhB,MAApB,GAA6B,CAAxE;AACA,iBAAKuS,IAAL,CAAUjS,KAAKU,cAAf,EAA+B,YAA/B,EAA6CkR,UAAUM,IAAV,CAAe,GAAf,CAA7C;AACH;AAZI;AAxBE,CAAf,E;;;;;;;;;;;;;;;;ACQA;;AAEA,8D;;AChBA,mCAA0B,aAAa,0BAA0B,wBAAwB,sCAAsC,aAAa,sGAAsG,SAAS,UAAU,uCAAuC,qCAAqC,iBAAiB,iCAAiC,6BAA6B,oDAAoD,0CAA0C,gCAAgC;AAC9hB;AACA,0BAAiB;AACjB,gF;;ACHA;AACA,4BAA2S;AAC3S;AACA;AACA;AACA;AACA;AACgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzBA;AACA;AACA;AACA;AACA,2CAAe;AACXrR,UAAM,gBADK;;AAGXb,QAHW,kBAGJ;AACH,eAAO;AACHmS,qBAAS,KADN;AAEHC,qBAAS;AAFN,SAAP;AAIH,KARU;;AASXjI,WAAO;AACHnK,cAAM;AACFqN,kBAAMjD,MADJ;AAEFkD,mBAFE,sBAEQ;AACN,uBAAO,IAAP;AACH;AAJC,SADH;AAOH+E,iBAASC;AAPN,KATI;AAkBX9B,WAAO;AACHxQ,cAAM;AADH,KAlBI;;AAsBXsD,gBAAY,EAACmO,eAAA,qCAAD,EAAgBC,mBAAA,yCAAhB,EAtBD;AAuBX7N,WAvBW,qBAuBD;AACN,aAAK0O,YAAL;AACH,KAzBU;;AA0BXhP,aAAS;AACLgP,oBADK,0BACU;AACX,gBAAIC,uBAAuB,iCAAAC,CAASC,OAAT,CAAiB,KAAK1S,IAAL,CAAU2S,UAA3B,EAAuC,UAAvC,CAA3B;AACA,gBAAI,CAACH,qBAAqBvR,QAA1B,EAAoC;AAChC,oBAAI2R,mBAAmBJ,qBAAqBK,WAArB,CAAiCC,MAAjC,CAAwC,CAAxC,EAA2CZ,IAA3C,CAAgD,GAAhD,EAAqDa,OAArD,CAA6D,OAA7D,EAAsE,IAAtE,CAAvB;AACA,qBAAKd,IAAL,CAAU,KAAKjS,IAAf,EAAqB,mBAArB,EAA0C4S,gBAA1C;AACH,aAHD,MAGO;AACH,qBAAKjE,QAAL,CAAcC,KAAd,CAAoB4D,qBAAqBvR,QAAzC;AACH;;AAEDK,oBAAQC,GAAR,CAAY,KAAKvB,IAAjB;AACA,iBAAKgT,WAAL,CAAiB,KAAKhT,IAAtB;AACH,SAZI;AAaLgT,mBAbK,uBAaOhT,IAbP,EAaa;AACd,gBAAIiT,WAAW,EAAf;AACAjT,iBAAKkT,MAAL,CAAYrJ,OAAZ,CAAoB,UAAUsJ,KAAV,EAAiB;AACjC,oBAAIC,UAAU;AACVlR,4BAAQiR,KADE;AAEVE,4BAAQF,MAAM9G,cAFJ;AAGViH,8BAAU;AAHA,iBAAd;;AAMAH,sBAAMI,UAAN,GAAmBJ,MAAMtB,KAAN,CAAYC,MAAZ,CAAmB,UAACF,SAAD,EAAYG,IAAZ,EAAqB;AACvDH,gCAAYA,UAAUI,MAAV,CAAiBD,KAAKF,KAAtB,CAAZ;AACA,2BAAOD,SAAP;AACH,iBAHkB,EAGhB,EAHgB,EAGZM,IAHY,CAGP,GAHO,CAAnB;;AAKAe,yBAASlJ,IAAT,CAAcqJ,OAAd;AACH,aAbD;;AAeA,iBAAKnB,IAAL,CAAU,KAAKjS,IAAf,EAAqB,UAArB,EAAiCiT,QAAjC;AACH,SA/BI;AAgCLO,qBAhCK,2BAgCW;AACZ,gBAAI,KAAKpB,OAAT,EAAkB;AACd,qBAAKqB,mBAAL;AACH,aAFD,MAEO;AACH,qBAAKC,iBAAL;AACH;AACJ,SAtCI;AAuCLD,2BAvCK,iCAuCiB;AAClB,gBAAItC,YAAY;AACZC,yBAAS,kBADG;AAEZpR,sBAAM,KAAKA,IAFC;AAGZqR,uBAAO,MAHK;AAIZxQ,sBAAM,SAAS,KAAKb,IAAL,CAAUE;AAJb,aAAhB;AAMA,iBAAKwC,KAAL,CAAW,WAAX,EAAwB;AACpBiR,wBAAQ,OADY;AAEpBtB,yBAAS,KAAKA;AAFM,aAAxB;AAIA,iBAAK3P,KAAL,CAAW,WAAX,EAAwByO,SAAxB;AACH,SAnDI;AAoDLuC,yBApDK,+BAoDe;AAChB,gBAAIvP,OAAO,IAAX;AACA,gBAAIyP,aAAazP,KAAKnE,IAAtB;AACA,gBAAI,CAAC4T,WAAWC,iBAAhB,EAAmC;AAC/B,uBAAO,KAAKlF,QAAL,CAAcmF,OAAd,CAAsB,QAAtB,CAAP;AACH;;AAED,gBAAIC,6BAA2BH,WAAW/S,IAAtC,yBAA8D+S,WAAWrT,cAAX,CAA0ByT,YAA5F;AACA,iBAAKC,QAAL,0CAAiCF,GAAjC,2DAAoD,IAApD,EAA0D;AACtDG,mCAAmB,IADmC;AAEtDC,kCAAkB,IAFoC;AAGtDC,0CAA0B,IAH4B;AAItD/G,sBAAM;AAJgD,aAA1D,EAKG7N,IALH,CAKQ,YAAM;AACV2E,qBAAKkQ,cAAL,CAAoBT,UAApB;AACH,aAPD,EAOGU,KAPH,CAOS,YAAM;AACX;AACH,aATD;AAUH,SAtEI;AAuELD,sBAvEK,0BAuEUT,UAvEV,EAuEsB;AACvB,gBAAIzP,OAAO,IAAX;AACA,gBAAIA,KAAKgO,OAAT,EAAkB;AACd;AACH;AACDhO,iBAAKgO,OAAL,GAAe,IAAf;AACA9S,mBAAOC,EAAP,CAAUC,KAAV,CAAgB,gCAAhB,EAAkD;AAC9CiP,wBAAQ,MADsC;AAE9CxO,sBAAM;AACFuU,kCAAc,CADZ;AAEFjU,8BAAUsT,WAAW1T,aAFnB;AAGFsU,+BAAWZ,WAAWC,iBAHpB;AAIFY,kCAAcb,WAAWa,YAJvB;AAKFC,8BAAUrV,OAAOsV,aAAP,CAAqBC;AAL7B;AAFwC,aAAlD,EASGpV,IATH,CASQ,UAACC,GAAD,EAAS;AACb,uBAAOA,IAAIE,IAAJ,EAAP;AACH,aAXD,EAWGH,IAXH,CAWQ,UAACQ,IAAD,EAAU;AACdmE,qBAAKgO,OAAL,GAAe,KAAf;AACA,oBAAInS,KAAKF,GAAL,KAAa,CAAb,IAAkBE,KAAKD,OAAL,KAAiB,CAAvC,EAA0C;AACtCoE,yBAAKiO,OAAL,GAAe,SAAf;AACAjO,yBAAKwK,QAAL,CAAcQ,OAAd,CAAsB,MAAtB;AACAhL,yBAAK8N,IAAL,CAAU9N,KAAKnE,IAAf,EAAqB,gBAArB,EAAuCA,KAAKA,IAA5C;AACH,iBAJD,MAIO;AACHmE,yBAAKwK,QAAL,CAAcC,KAAd,CAAoB5O,KAAKkB,GAAzB;AACH;AACJ,aApBD;AAqBH;AAlGI;AA1BE,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuCA;;AAEA,0D;;AC7CA,iCAA0B,aAAa,0BAA0B,wBAAwB,2EAA2E,OAAO,iBAAiB,6BAA6B,oCAAoC,eAAe,QAAQ,sCAAsC,wBAAwB,OAAO,gBAAgB,sBAAsB,iCAAiC,yFAAyF,GAAG,oCAAoC,OAAO,yCAAyC,oCAAoC,OAAO,0CAA0C,oCAAoC,qBAAqB,iCAAiC,uBAAuB,gCAAgC,mCAAmC,QAAQ,4DAA4D,6CAA6C,sCAAsC,qCAAqC,GAAG,4BAA4B,sBAAsB,kBAAkB,aAAa,4EAA4E,SAAS,0DAA0D,KAAK,2BAA2B;AACxxC;AACA,wBAAiB;AACjB,4E;;ACHA;AACA,4BAA2S;AAC3S;AACA;AACA;AACA;AACA;AACgL;AAChL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOA;AACA;AACA;AACA;AACA;;wCAEA;0BAEA;;kCAEA;0BACA;kBACA;2BAEA;AALA;AAMA;;;AAEA;AACA;AACA;4BACA;0BAEA;AANA;gCAOA;AACA;4BACA;AACA;;;8CAEA;AACA;yCACA;qCACA;mBACA;8DACA;6CACA;AAEA;;gCACA;mCACA;AACA;0CACA;AACA;AACA;;AACA;;kCACA;2CACA;wDACA;iDACA;kFACA;qCACA;iDACA;+BACA;yCACA;AACA;AACA;AACA;AAEA;;+CACA;sDACA;kCACA;AACA;AACA;4DACA;AACA;uBACA;AACA;kDACA;wCACA;AACA;8CACA;mCACA;AACA;4CACA;+BACA;AACA;4CACA;+BACA;AAEA;AApDA;AApBA,G;;ACvCA,8BAA0B,aAAa,0BAA0B,wBAAwB,iBAAiB,OAAO,YAAY,iBAAiB,cAAc,8BAA8B,OAAO,2JAA2J,KAAK,kCAAkC,gCAAgC,kCAAkC,gBAAgB,OAAO,cAAc,KAAK,4BAA4B,QAAQ,mDAAmD,sBAAsB,6BAA6B,oBAAoB,OAAO,kDAAkD,qBAAqB,OAAO,wBAAwB,KAAK,4BAA4B,yDAAyD,yBAAyB,qBAAqB,mDAAmD,mBAAmB,uBAAuB,sCAAsC,KAAK,4BAA4B,MAAM;AAC5iC;AACA,qBAAiB;AACjB,+D;;ACHA;AACA,4BAA+R;AAC/R;AACA;AACA;AACA;AACA;AAC0K;AAC1K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACzBA;AACA,IAAM8B,YAAY;AACd6R,qBAAiB,sBADH;AAEdpQ,sBAAkB,mBAFJ;AAGdqQ,iBAAa;AAHC,CAAlB;;AAOA,yDAAe9R,SAAf,E;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,KAAK,OAAO,sBAAsB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA,EAAE;AACF;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,yBAAyB;AACzE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,2BAA2B;AAC9D;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA,2CAA2C,kBAAkB;AAC7D,cAAc,WAAW,GAAG,yBAAyB,OAAO,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,kEAAkE,EAAE;AACxG;;AAEA;AACA,oCAAoC,sFAAsF,EAAE;AAC5H;;AAEA;AACA,iCAAiC,iGAAiG,EAAE;AACpI;;AAEA;AACA,iCAAiC,yFAAyF,EAAE;AAC5H;;AAEA;AACA;AACA;;;;;;;;;;ACrFA,yDAAe;AACXW,SADW,mBACH;AACJ,YAAIQ,OAAO,IAAX;AACA,YAAI4Q,WAAW1V,OAAOsV,aAAtB;AACA,YAAIK,gBAAgBD,SAASE,mBAA7B;;AAEA,YAAI,CAACD,aAAL,EAAoB;AAChB7Q,iBAAK+Q,WAAL;AACH,SAFD,MAEO;AACH7V,mBAAOoE,UAAP,CAAkBhB,OAAlB,CAA0BpD,OAAOoE,UAAP,CAAkBT,SAAlB,CAA4B6R,eAAtD,EAAuE;AACnE7U,sBAAMgV,iBAAiB;AAD4C,aAAvE;AAGH;AACJ,KAbU;AAcXG,cAdW,wBAcE;AACT,YAAIC,QAAQlS,SAASC,aAAT,CAAuB,oBAAvB,CAAZ;AACA,YAAIkS,WAAWD,MAAME,gBAAN,CAAuB,eAAvB,CAAf;AACA,eAAOD,QAAP;AACH,KAlBU;AAmBXE,cAnBW,sBAmBAC,GAnBA,EAmBK;AACZ,YAAMC,WAAW,IAAIC,IAAJ,CAAS,CAACF,IAAIpE,OAAL,CAAT,EAAwBoE,IAAI3U,IAA5B,EAAkC;AAC/CwM,kBAAMmI,IAAInI,IAAJ,IAAY;AAD6B,SAAlC,CAAjB;AAGA,YAAMsI,YAAYtW,OAAOuW,GAAP,CAAWC,eAAX,CAA2BJ,QAA3B,CAAlB;AACA,YAAMzL,OAAO9G,SAAS4C,aAAT,CAAuB,MAAvB,CAAb;AACAkE,aAAK8L,GAAL,GAAW,QAAX;AACA9L,aAAK+L,IAAL,GAAYJ,SAAZ;AACAzS,iBAAS8S,IAAT,CAAc/P,WAAd,CAA0B+D,IAA1B;AACH,KA5BU;AA6BXiM,0BA7BW,kCA6BYxW,GA7BZ,EA6BiB;AAAA;;AACxB,YAAIyW,aAAazW,IAAI0W,OAAJ,CAAYC,GAAZ,CAAgB,qBAAhB,CAAjB;AACAF,qBAAaG,KAAKC,KAAL,CAAWJ,UAAX,CAAb;AACAzW,YAAIwR,IAAJ,GAAWzR,IAAX,CAAgB,UAAC4R,OAAD,EAAa;AACzB,kBAAKmE,UAAL,CAAgB;AACZ1U,sBAAMqV,WAAWK,UADL;AAEZnF,yBAASA,OAFG;AAGZ/D,sBAAM6I,WAAWM;AAHL,aAAhB;AAKH,SAND;AAOH,KAvCU;AAwCXC,0BAxCW,kCAwCYhX,GAxCZ,EAwCiB;AACxBA,YAAIE,IAAJ,GAAWH,IAAX,CAAgB,UAAUQ,IAAV,EAAgB;AAC5BX,mBAAOoE,UAAP,CAAkBhB,OAAlB,CAA0BpD,OAAOoE,UAAP,CAAkBT,SAAlB,CAA4B6R,eAAtD,EAAuE,EAAC7U,UAAD,EAAvE;AACH,SAFD;AAGH,KA5CU;AA6CXkV,eA7CW,yBA6CG;AACV,YAAI/Q,OAAO,IAAX;AACA,YAAIkR,WAAW,KAAKF,UAAL,EAAf;AACA7E,cAAMoG,IAAN,CAAWrB,QAAX,EAAqBxL,OAArB,CAA6B,UAAU8M,MAAV,EAAkB;AAC3C,gBAAIC,iBAAiBD,OAAOE,YAAP,CAAoB,4BAApB,CAArB;AACA,gBAAID,cAAJ,EAAoB;AAChBvX,uBAAOC,EAAP,CAAUwX,gBAAV,CAA8BF,cAA9B,YACKpX,IADL,CACU,UAACC,GAAD,EAAS;AACX,wBAAIA,IAAI0W,OAAJ,CAAYC,GAAZ,CAAgB,qBAAhB,CAAJ,EAA4C;AACxCjS,6BAAK8R,sBAAL,CAA4BxW,GAA5B;AACH,qBAFD,MAEO;AACH0E,6BAAKsS,sBAAL,CAA4BhX,GAA5B;AACH;AACJ,iBAPL,EAQK6U,KARL,CAQW,UAACyC,GAAD,EAAS;AACZzV,4BAAQsN,KAAR,CAAcmI,GAAd;AACH,iBAVL;AAWH,aAZD,MAYO;AACH;AACH;AACJ,SAjBD;AAkBH;AAlEU,CAAf,E;;;;;;;ACAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA,KAAK;AACL;AACA,uCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C,YAAY;AAC1D;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA6C,YAAY;AACzD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,eAAe;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,cAAc;AACd,cAAc;AACd,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,qBAAqB;AACrB;;AAEA;AACA;AACA,KAAK;AACL,iBAAiB;;AAEjB;AACA,kDAAkD,EAAE,iBAAiB;;AAErE;AACA,wBAAwB,8BAA8B;AACtD,2BAA2B;;AAE3B;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,iBAAiB;;AAEnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AAAA;AACL;AACA,CAAC;;;;;;;;AC3gDD;AACA;AACA;AACA,gHAAgH,YAAY,SAAS,EAAE;AACvI;AACA;AACA;;;;;;;;ACNA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oBAAoB;AAC7D,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,mEAAmE,sCAAsC,EAAE;;AAE3G;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;;;;;;;;;ACzgBA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,WAAW,SAAS,iBAAiB,QAAQ;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK,qBAAqB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,WAAW;AACX;AACA;AACA,oDAAoD;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,IAAI,oBAAoB,SAAS,QAAQ;AACzC,IAAI,uBAAuB,GAAG,QAAQ,SAAS,qBAAqB;AACpE,IAAI,SAAS,SAAS,iCAAiC;AACvD,IAAI,eAAe;AACnB;AACA,2BAA2B,6BAA6B;AACxD,IAAI,2BAA2B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,oBAAoB;AAC/C;AACA;;AAEA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;AC9PA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,aAAa,wBAAwB,aAAa;AACrE;AACA,0BAA0B,UAAU,GAAG,SAAS,OAAO,gBAAgB;AACvE,KAAK,sBAAsB;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,aAAa,kCAAkC,WAAW;AAClE;AACA,QAAQ,WAAW,kCAAkC,YAAY;AACjE;AACA,QAAQ,WAAW;AACnB;AACA,cAAc,WAAW,EAAE,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;;AAEA;AACA;;AAEA,eAAe,sBAAsB;AACrC,2BAA2B,OAAO,KAAK,EAAE;AACzC;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,8CAA8C;AACxD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA,UAAU,0BAA0B;AACpC;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;;;;;;;;ACnZA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACzBA;AACA;AACA;AACA,gHAAgH,YAAY,SAAS,EAAE;AACvI;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA,0GAA0G,YAAY,SAAS,EAAE;AACjI;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,wC","file":"pages/pagebuild/demo.js","sourcesContent":["//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// The embodiment of the adaptive LL(*), ALL(*), parsing strategy.\n//\n// <p>\n// The basic complexity of the adaptive strategy makes it harder to understand.\n// We begin with ATN simulation to build paths in a DFA. Subsequent prediction\n// requests go through the DFA first. If they reach a state without an edge for\n// the current symbol, the algorithm fails over to the ATN simulation to\n// complete the DFA path for the current input (until it finds a conflict state\n// or uniquely predicting state).</p>\n//\n// <p>\n// All of that is done without using the outer context because we want to create\n// a DFA that is not dependent upon the rule invocation stack when we do a\n// prediction. One DFA works in all contexts. We avoid using context not\n// necessarily because it's slower, although it can be, but because of the DFA\n// caching problem. The closure routine only considers the rule invocation stack\n// created during prediction beginning in the decision rule. For example, if\n// prediction occurs without invoking another rule's ATN, there are no context\n// stacks in the configurations. When lack of context leads to a conflict, we\n// don't know if it's an ambiguity or a weakness in the strong LL(*) parsing\n// strategy (versus full LL(*)).</p>\n//\n// <p>\n// When SLL yields a configuration set with conflict, we rewind the input and\n// retry the ATN simulation, this time using full outer context without adding\n// to the DFA. Configuration context stacks will be the full invocation stacks\n// from the start rule. If we get a conflict using full context, then we can\n// definitively say we have a true ambiguity for that input sequence. If we\n// don't get a conflict, it implies that the decision is sensitive to the outer\n// context. (It is not context-sensitive in the sense of context-sensitive\n// grammars.)</p>\n//\n// <p>\n// The next time we reach this DFA state with an SLL conflict, through DFA\n// simulation, we will again retry the ATN simulation using full context mode.\n// This is slow because we can't save the results and have to \"interpret\" the\n// ATN each time we get that input.</p>\n//\n// <p>\n// <strong>CACHING FULL CONTEXT PREDICTIONS</strong></p>\n//\n// <p>\n// We could cache results from full context to predicted alternative easily and\n// that saves a lot of time but doesn't work in presence of predicates. The set\n// of visible predicates from the ATN start state changes depending on the\n// context, because closure can fall off the end of a rule. I tried to cache\n// tuples (stack context, semantic context, predicted alt) but it was slower\n// than interpreting and much more complicated. Also required a huge amount of\n// memory. The goal is not to create the world's fastest parser anyway. I'd like\n// to keep this algorithm simple. By launching multiple threads, we can improve\n// the speed of parsing across a large number of files.</p>\n//\n// <p>\n// There is no strict ordering between the amount of input used by SLL vs LL,\n// which makes it really hard to build a cache for full context. Let's say that\n// we have input A B C that leads to an SLL conflict with full context X. That\n// implies that using X we might only use A B but we could also use A B C D to\n// resolve conflict. Input A B C D could predict alternative 1 in one position\n// in the input and A B C E could predict alternative 2 in another position in\n// input. The conflicting SLL configurations could still be non-unique in the\n// full context prediction, which would lead us to requiring more input than the\n// original A B C.\tTo make a\tprediction cache work, we have to track\tthe exact\n// input\tused during the previous prediction. That amounts to a cache that maps\n// X to a specific DFA for that context.</p>\n//\n// <p>\n// Something should be done for left-recursive expression predictions. They are\n// likely LL(1) + pred eval. Easier to do the whole SLL unless error and retry\n// with full LL thing Sam does.</p>\n//\n// <p>\n// <strong>AVOIDING FULL CONTEXT PREDICTION</strong></p>\n//\n// <p>\n// We avoid doing full context retry when the outer context is empty, we did not\n// dip into the outer context by falling off the end of the decision state rule,\n// or when we force SLL mode.</p>\n//\n// <p>\n// As an example of the not dip into outer context case, consider as super\n// constructor calls versus function calls. One grammar might look like\n// this:</p>\n//\n// <pre>\n// ctorBody\n//   : '{' superCall? stat* '}'\n//   ;\n// </pre>\n//\n// <p>\n// Or, you might see something like</p>\n//\n// <pre>\n// stat\n//   : superCall ';'\n//   | expression ';'\n//   | ...\n//   ;\n// </pre>\n//\n// <p>\n// In both cases I believe that no closure operations will dip into the outer\n// context. In the first case ctorBody in the worst case will stop at the '}'.\n// In the 2nd case it should stop at the ';'. Both cases should stay within the\n// entry rule and not dip into the outer context.</p>\n//\n// <p>\n// <strong>PREDICATES</strong></p>\n//\n// <p>\n// Predicates are always evaluated if present in either SLL or LL both. SLL and\n// LL simulation deals with predicates differently. SLL collects predicates as\n// it performs closure operations like ANTLR v3 did. It delays predicate\n// evaluation until it reaches and accept state. This allows us to cache the SLL\n// ATN simulation whereas, if we had evaluated predicates on-the-fly during\n// closure, the DFA state configuration sets would be different and we couldn't\n// build up a suitable DFA.</p>\n//\n// <p>\n// When building a DFA accept state during ATN simulation, we evaluate any\n// predicates and return the sole semantically valid alternative. If there is\n// more than 1 alternative, we report an ambiguity. If there are 0 alternatives,\n// we throw an exception. Alternatives without predicates act like they have\n// true predicates. The simple way to think about it is to strip away all\n// alternatives with false predicates and choose the minimum alternative that\n// remains.</p>\n//\n// <p>\n// When we start in the DFA and reach an accept state that's predicated, we test\n// those and return the minimum semantically viable alternative. If no\n// alternatives are viable, we throw an exception.</p>\n//\n// <p>\n// During full LL ATN simulation, closure always evaluates predicates and\n// on-the-fly. This is crucial to reducing the configuration set size during\n// closure. It hits a landmine when parsing with the Java grammar, for example,\n// without this on-the-fly evaluation.</p>\n//\n// <p>\n// <strong>SHARING DFA</strong></p>\n//\n// <p>\n// All instances of the same parser share the same decision DFAs through a\n// static field. Each instance gets its own ATN simulator but they share the\n// same {@link //decisionToDFA} field. They also share a\n// {@link PredictionContextCache} object that makes sure that all\n// {@link PredictionContext} objects are shared among the DFA states. This makes\n// a big size difference.</p>\n//\n// <p>\n// <strong>THREAD SAFETY</strong></p>\n//\n// <p>\n// The {@link ParserATNSimulator} locks on the {@link //decisionToDFA} field when\n// it adds a new DFA object to that array. {@link //addDFAEdge}\n// locks on the DFA for the current decision when setting the\n// {@link DFAState//edges} field. {@link //addDFAState} locks on\n// the DFA for the current decision when looking up a DFA state to see if it\n// already exists. We must make sure that all requests to add DFA states that\n// are equivalent result in the same shared DFA object. This is because lots of\n// threads will be trying to update the DFA at once. The\n// {@link //addDFAState} method also locks inside the DFA lock\n// but this time on the shared context cache when it rebuilds the\n// configurations' {@link PredictionContext} objects using cached\n// subgraphs/nodes. No other locking occurs, even during DFA simulation. This is\n// safe as long as we can guarantee that all threads referencing\n// {@code s.edge[t]} get the same physical target {@link DFAState}, or\n// {@code null}. Once into the DFA, the DFA simulation does not reference the\n// {@link DFA//states} map. It follows the {@link DFAState//edges} field to new\n// targets. The DFA simulator will either find {@link DFAState//edges} to be\n// {@code null}, to be non-{@code null} and {@code dfa.edges[t]} null, or\n// {@code dfa.edges[t]} to be non-null. The\n// {@link //addDFAEdge} method could be racing to set the field\n// but in either case the DFA simulator works; if {@code null}, and requests ATN\n// simulation. It could also race trying to get {@code dfa.edges[t]}, but either\n// way it will work because it's not doing a test and set operation.</p>\n//\n// <p>\n// <strong>Starting with SLL then failing to combined SLL/LL (Two-Stage\n// Parsing)</strong></p>\n//\n// <p>\n// Sam pointed out that if SLL does not give a syntax error, then there is no\n// point in doing full LL, which is slower. We only have to try LL if we get a\n// syntax error. For maximum speed, Sam starts the parser set to pure SLL\n// mode with the {@link BailErrorStrategy}:</p>\n//\n// <pre>\n// parser.{@link Parser//getInterpreter() getInterpreter()}.{@link //setPredictionMode setPredictionMode}{@code (}{@link PredictionMode//SLL}{@code )};\n// parser.{@link Parser//setErrorHandler setErrorHandler}(new {@link BailErrorStrategy}());\n// </pre>\n//\n// <p>\n// If it does not get a syntax error, then we're done. If it does get a syntax\n// error, we need to retry with the combined SLL/LL strategy.</p>\n//\n// <p>\n// The reason this works is as follows. If there are no SLL conflicts, then the\n// grammar is SLL (at least for that input set). If there is an SLL conflict,\n// the full LL analysis must yield a set of viable alternatives which is a\n// subset of the alternatives reported by SLL. If the LL set is a singleton,\n// then the grammar is LL but not SLL. If the LL set is the same size as the SLL\n// set, the decision is SLL. If the LL set has size &gt; 1, then that decision\n// is truly ambiguous on the current input. If the LL set is smaller, then the\n// SLL conflict resolution might choose an alternative that the full LL would\n// rule out as a possibility based upon better context information. If that's\n// the case, then the SLL parse will definitely get an error because the full LL\n// analysis says it's not viable. If SLL conflict resolution chooses an\n// alternative within the LL set, them both SLL and LL would choose the same\n// alternative because they both choose the minimum of multiple conflicting\n// alternatives.</p>\n//\n// <p>\n// Let's say we have a set of SLL conflicting alternatives {@code {1, 2, 3}} and\n// a smaller LL set called <em>s</em>. If <em>s</em> is {@code {2, 3}}, then SLL\n// parsing will get an error because SLL will pursue alternative 1. If\n// <em>s</em> is {@code {1, 2}} or {@code {1, 3}} then both SLL and LL will\n// choose the same alternative because alternative one is the minimum of either\n// set. If <em>s</em> is {@code {2}} or {@code {3}} then SLL will get a syntax\n// error. If <em>s</em> is {@code {1}} then SLL will succeed.</p>\n//\n// <p>\n// Of course, if the input is invalid, then we will get an error for sure in\n// both SLL and LL parsing. Erroneous input will therefore require 2 passes over\n// the input.</p>\n//\n\nvar Utils = require('./../Utils');\nvar Set = Utils.Set;\nvar BitSet = Utils.BitSet;\nvar DoubleDict = Utils.DoubleDict;\nvar ATN = require('./ATN').ATN;\nvar ATNState = require('./ATNState').ATNState;\nvar ATNConfig = require('./ATNConfig').ATNConfig;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar Token = require('./../Token').Token;\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar PredPrediction = require('./../dfa/DFAState').PredPrediction;\nvar ATNSimulator = require('./ATNSimulator').ATNSimulator;\nvar PredictionMode = require('./PredictionMode').PredictionMode;\nvar RuleContext = require('./../RuleContext').RuleContext;\nvar ParserRuleContext = require('./../ParserRuleContext').ParserRuleContext;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar StarLoopEntryState = require('./ATNState').StarLoopEntryState;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar PredictionContext = require('./../PredictionContext').PredictionContext;\nvar Interval = require('./../IntervalSet').Interval;\nvar Transitions = require('./Transition');\nvar Transition = Transitions.Transition;\nvar SetTransition = Transitions.SetTransition;\nvar NotSetTransition = Transitions.NotSetTransition;\nvar RuleTransition = Transitions.RuleTransition;\nvar ActionTransition = Transitions.ActionTransition;\nvar NoViableAltException = require('./../error/Errors').NoViableAltException;\n\nvar SingletonPredictionContext = require('./../PredictionContext').SingletonPredictionContext;\nvar predictionContextFromRuleContext = require('./../PredictionContext').predictionContextFromRuleContext;\n\nfunction ParserATNSimulator(parser, atn, decisionToDFA, sharedContextCache) {\n\tATNSimulator.call(this, atn, sharedContextCache);\n    this.parser = parser;\n    this.decisionToDFA = decisionToDFA;\n    // SLL, LL, or LL + exact ambig detection?//\n    this.predictionMode = PredictionMode.LL;\n    // LAME globals to avoid parameters!!!!! I need these down deep in predTransition\n    this._input = null;\n    this._startIndex = 0;\n    this._outerContext = null;\n    this._dfa = null;\n    // Each prediction operation uses a cache for merge of prediction contexts.\n    //  Don't keep around as it wastes huge amounts of memory. DoubleKeyMap\n    //  isn't synchronized but we're ok since two threads shouldn't reuse same\n    //  parser/atnsim object because it can only handle one input at a time.\n    //  This maps graphs a and b to merged result c. (a,b)&rarr;c. We can avoid\n    //  the merge if we ever see a and b again.  Note that (b,a)&rarr;c should\n    //  also be examined during cache lookup.\n    //\n    this.mergeCache = null;\n    return this;\n}\n\nParserATNSimulator.prototype = Object.create(ATNSimulator.prototype);\nParserATNSimulator.prototype.constructor = ParserATNSimulator;\n\nParserATNSimulator.prototype.debug = false;\nParserATNSimulator.prototype.debug_closure = false;\nParserATNSimulator.prototype.debug_add = false;\nParserATNSimulator.prototype.debug_list_atn_decisions = false;\nParserATNSimulator.prototype.dfa_debug = false;\nParserATNSimulator.prototype.retry_debug = false;\n\n\nParserATNSimulator.prototype.reset = function() {\n};\n\nParserATNSimulator.prototype.adaptivePredict = function(input, decision, outerContext) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"adaptivePredict decision \" + decision +\n                               \" exec LA(1)==\" + this.getLookaheadName(input) +\n                               \" line \" + input.LT(1).line + \":\" +\n                               input.LT(1).column);\n    }\n    this._input = input;\n    this._startIndex = input.index;\n    this._outerContext = outerContext;\n\n    var dfa = this.decisionToDFA[decision];\n    this._dfa = dfa;\n    var m = input.mark();\n    var index = input.index;\n\n    // Now we are certain to have a specific decision's DFA\n    // But, do we still need an initial state?\n    try {\n        var s0;\n        if (dfa.precedenceDfa) {\n            // the start state for a precedence DFA depends on the current\n            // parser precedence, and is provided by a DFA method.\n            s0 = dfa.getPrecedenceStartState(this.parser.getPrecedence());\n        } else {\n            // the start state for a \"regular\" DFA is just s0\n            s0 = dfa.s0;\n        }\n        if (s0===null) {\n            if (outerContext===null) {\n                outerContext = RuleContext.EMPTY;\n            }\n            if (this.debug || this.debug_list_atn_decisions) {\n                console.log(\"predictATN decision \" + dfa.decision +\n                                   \" exec LA(1)==\" + this.getLookaheadName(input) +\n                                   \", outerContext=\" + outerContext.toString(this.parser.ruleNames));\n            }\n\n            var fullCtx = false;\n            var s0_closure = this.computeStartState(dfa.atnStartState, RuleContext.EMPTY, fullCtx);\n\n            if( dfa.precedenceDfa) {\n                // If this is a precedence DFA, we use applyPrecedenceFilter\n                // to convert the computed start state to a precedence start\n                // state. We then use DFA.setPrecedenceStartState to set the\n                // appropriate start state for the precedence level rather\n                // than simply setting DFA.s0.\n                //\n                dfa.s0.configs = s0_closure; // not used for prediction but useful to know start configs anyway\n                s0_closure = this.applyPrecedenceFilter(s0_closure);\n                s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                dfa.setPrecedenceStartState(this.parser.getPrecedence(), s0);\n            } else {\n                s0 = this.addDFAState(dfa, new DFAState(null, s0_closure));\n                dfa.s0 = s0;\n            }\n        }\n        var alt = this.execATN(dfa, s0, input, index, outerContext);\n        if (this.debug) {\n            console.log(\"DFA after predictATN: \" + dfa.toString(this.parser.literalNames));\n        }\n        return alt;\n    } finally {\n        this._dfa = null;\n        this.mergeCache = null; // wack cache after each prediction\n        input.seek(index);\n        input.release(m);\n    }\n};\n// Performs ATN simulation to compute a predicted alternative based\n//  upon the remaining input, but also updates the DFA cache to avoid\n//  having to traverse the ATN again for the same input sequence.\n\n// There are some key conditions we're looking for after computing a new\n// set of ATN configs (proposed DFA state):\n      // if the set is empty, there is no viable alternative for current symbol\n      // does the state uniquely predict an alternative?\n      // does the state have a conflict that would prevent us from\n      //   putting it on the work list?\n\n// We also have some key operations to do:\n      // add an edge from previous DFA state to potentially new DFA state, D,\n      //   upon current symbol but only if adding to work list, which means in all\n      //   cases except no viable alternative (and possibly non-greedy decisions?)\n      // collecting predicates and adding semantic context to DFA accept states\n      // adding rule context to context-sensitive DFA accept states\n      // consuming an input symbol\n      // reporting a conflict\n      // reporting an ambiguity\n      // reporting a context sensitivity\n      // reporting insufficient predicates\n\n// cover these cases:\n//    dead end\n//    single alt\n//    single alt + preds\n//    conflict\n//    conflict + preds\n//\nParserATNSimulator.prototype.execATN = function(dfa, s0, input, startIndex, outerContext ) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"execATN decision \" + dfa.decision +\n                \" exec LA(1)==\" + this.getLookaheadName(input) +\n                \" line \" + input.LT(1).line + \":\" + input.LT(1).column);\n    }\n    var alt;\n    var previousD = s0;\n\n    if (this.debug) {\n        console.log(\"s0 = \" + s0);\n    }\n    var t = input.LA(1);\n    while(true) { // while more work\n        var D = this.getExistingTargetState(previousD, t);\n        if(D===null) {\n            D = this.computeTargetState(dfa, previousD, t);\n        }\n        if(D===ATNSimulator.ERROR) {\n            // if any configs in previous dipped into outer context, that\n            // means that input up to t actually finished entry rule\n            // at least for SLL decision. Full LL doesn't dip into outer\n            // so don't need special case.\n            // We will get an error no matter what so delay until after\n            // decision; better error message. Also, no reachable target\n            // ATN states in SLL implies LL will also get nowhere.\n            // If conflict in states that dip out, choose min since we\n            // will get error no matter what.\n            var e = this.noViableAlt(input, outerContext, previousD.configs, startIndex);\n            input.seek(startIndex);\n            alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previousD.configs, outerContext);\n            if(alt!==ATN.INVALID_ALT_NUMBER) {\n                return alt;\n            } else {\n                throw e;\n            }\n        }\n        if(D.requiresFullContext && this.predictionMode !== PredictionMode.SLL) {\n            // IF PREDS, MIGHT RESOLVE TO SINGLE ALT => SLL (or syntax error)\n            var conflictingAlts = null;\n            if (D.predicates!==null) {\n                if (this.debug) {\n                    console.log(\"DFA state has preds in DFA sim LL failover\");\n                }\n                var conflictIndex = input.index;\n                if(conflictIndex !== startIndex) {\n                    input.seek(startIndex);\n                }\n                conflictingAlts = this.evalSemanticContext(D.predicates, outerContext, true);\n                if (conflictingAlts.length===1) {\n                    if(this.debug) {\n                        console.log(\"Full LL avoided\");\n                    }\n                    return conflictingAlts.minValue();\n                }\n                if (conflictIndex !== startIndex) {\n                    // restore the index so reporting the fallback to full\n                    // context occurs with the index at the correct spot\n                    input.seek(conflictIndex);\n                }\n            }\n            if (this.dfa_debug) {\n                console.log(\"ctx sensitive state \" + outerContext +\" in \" + D);\n            }\n            var fullCtx = true;\n            var s0_closure = this.computeStartState(dfa.atnStartState, outerContext, fullCtx);\n            this.reportAttemptingFullContext(dfa, conflictingAlts, D.configs, startIndex, input.index);\n            alt = this.execATNWithFullContext(dfa, D, s0_closure, input, startIndex, outerContext);\n            return alt;\n        }\n        if (D.isAcceptState) {\n            if (D.predicates===null) {\n                return D.prediction;\n            }\n            var stopIndex = input.index;\n            input.seek(startIndex);\n            var alts = this.evalSemanticContext(D.predicates, outerContext, true);\n            if (alts.length===0) {\n                throw this.noViableAlt(input, outerContext, D.configs, startIndex);\n            } else if (alts.length===1) {\n                return alts.minValue();\n            } else {\n                // report ambiguity after predicate evaluation to make sure the correct set of ambig alts is reported.\n                this.reportAmbiguity(dfa, D, startIndex, stopIndex, false, alts, D.configs);\n                return alts.minValue();\n            }\n        }\n        previousD = D;\n\n        if (t !== Token.EOF) {\n            input.consume();\n            t = input.LA(1);\n        }\n    }\n};\n//\n// Get an existing target state for an edge in the DFA. If the target state\n// for the edge has not yet been computed or is otherwise not available,\n// this method returns {@code null}.\n//\n// @param previousD The current DFA state\n// @param t The next input symbol\n// @return The existing target DFA state for the given input symbol\n// {@code t}, or {@code null} if the target state for this edge is not\n// already cached\n//\nParserATNSimulator.prototype.getExistingTargetState = function(previousD, t) {\n    var edges = previousD.edges;\n    if (edges===null) {\n        return null;\n    } else {\n        return edges[t + 1] || null;\n    }\n};\n//\n// Compute a target state for an edge in the DFA, and attempt to add the\n// computed state and corresponding edge to the DFA.\n//\n// @param dfa The DFA\n// @param previousD The current DFA state\n// @param t The next input symbol\n//\n// @return The computed target DFA state for the given input symbol\n// {@code t}. If {@code t} does not lead to a valid DFA state, this method\n// returns {@link //ERROR}.\n//\nParserATNSimulator.prototype.computeTargetState = function(dfa, previousD, t) {\n   var reach = this.computeReachSet(previousD.configs, t, false);\n    if(reach===null) {\n        this.addDFAEdge(dfa, previousD, t, ATNSimulator.ERROR);\n        return ATNSimulator.ERROR;\n    }\n    // create new target state; we'll add to DFA after it's complete\n    var D = new DFAState(null, reach);\n\n    var predictedAlt = this.getUniqueAlt(reach);\n\n    if (this.debug) {\n        var altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n        console.log(\"SLL altSubSets=\" + Utils.arrayToString(altSubSets) +\n                    \", previous=\" + previousD.configs +\n                    \", configs=\" + reach +\n                    \", predict=\" + predictedAlt +\n                    \", allSubsetsConflict=\" +\n                    PredictionMode.allSubsetsConflict(altSubSets) + \", conflictingAlts=\" +\n                    this.getConflictingAlts(reach));\n    }\n    if (predictedAlt!==ATN.INVALID_ALT_NUMBER) {\n        // NO CONFLICT, UNIQUELY PREDICTED ALT\n        D.isAcceptState = true;\n        D.configs.uniqueAlt = predictedAlt;\n        D.prediction = predictedAlt;\n    } else if (PredictionMode.hasSLLConflictTerminatingPrediction(this.predictionMode, reach)) {\n        // MORE THAN ONE VIABLE ALTERNATIVE\n        D.configs.conflictingAlts = this.getConflictingAlts(reach);\n        D.requiresFullContext = true;\n        // in SLL-only mode, we will stop at this state and return the minimum alt\n        D.isAcceptState = true;\n        D.prediction = D.configs.conflictingAlts.minValue();\n    }\n    if (D.isAcceptState && D.configs.hasSemanticContext) {\n        this.predicateDFAState(D, this.atn.getDecisionState(dfa.decision));\n        if( D.predicates!==null) {\n            D.prediction = ATN.INVALID_ALT_NUMBER;\n        }\n    }\n    // all adds to dfa are done after we've created full D state\n    D = this.addDFAEdge(dfa, previousD, t, D);\n    return D;\n};\n\nParserATNSimulator.prototype.predicateDFAState = function(dfaState, decisionState) {\n    // We need to test all predicates, even in DFA states that\n    // uniquely predict alternative.\n    var nalts = decisionState.transitions.length;\n    // Update DFA so reach becomes accept state with (predicate,alt)\n    // pairs if preds found for conflicting alts\n    var altsToCollectPredsFrom = this.getConflictingAltsOrUniqueAlt(dfaState.configs);\n    var altToPred = this.getPredsForAmbigAlts(altsToCollectPredsFrom, dfaState.configs, nalts);\n    if (altToPred!==null) {\n        dfaState.predicates = this.getPredicatePredictions(altsToCollectPredsFrom, altToPred);\n        dfaState.prediction = ATN.INVALID_ALT_NUMBER; // make sure we use preds\n    } else {\n        // There are preds in configs but they might go away\n        // when OR'd together like {p}? || NONE == NONE. If neither\n        // alt has preds, resolve to min alt\n        dfaState.prediction = altsToCollectPredsFrom.minValue();\n    }\n};\n\n// comes back with reach.uniqueAlt set to a valid alt\nParserATNSimulator.prototype.execATNWithFullContext = function(dfa, D, // how far we got before failing over\n                                     s0,\n                                     input,\n                                     startIndex,\n                                     outerContext) {\n    if (this.debug || this.debug_list_atn_decisions) {\n        console.log(\"execATNWithFullContext \"+s0);\n    }\n    var fullCtx = true;\n    var foundExactAmbig = false;\n    var reach = null;\n    var previous = s0;\n    input.seek(startIndex);\n    var t = input.LA(1);\n    var predictedAlt = -1;\n    while (true) { // while more work\n        reach = this.computeReachSet(previous, t, fullCtx);\n        if (reach===null) {\n            // if any configs in previous dipped into outer context, that\n            // means that input up to t actually finished entry rule\n            // at least for LL decision. Full LL doesn't dip into outer\n            // so don't need special case.\n            // We will get an error no matter what so delay until after\n            // decision; better error message. Also, no reachable target\n            // ATN states in SLL implies LL will also get nowhere.\n            // If conflict in states that dip out, choose min since we\n            // will get error no matter what.\n            var e = this.noViableAlt(input, outerContext, previous, startIndex);\n            input.seek(startIndex);\n            var alt = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(previous, outerContext);\n            if(alt!==ATN.INVALID_ALT_NUMBER) {\n                return alt;\n            } else {\n                throw e;\n            }\n        }\n        var altSubSets = PredictionMode.getConflictingAltSubsets(reach);\n        if(this.debug) {\n            console.log(\"LL altSubSets=\" + altSubSets + \", predict=\" +\n                  PredictionMode.getUniqueAlt(altSubSets) + \", resolvesToJustOneViableAlt=\" +\n                  PredictionMode.resolvesToJustOneViableAlt(altSubSets));\n        }\n        reach.uniqueAlt = this.getUniqueAlt(reach);\n        // unique prediction?\n        if(reach.uniqueAlt!==ATN.INVALID_ALT_NUMBER) {\n            predictedAlt = reach.uniqueAlt;\n            break;\n        } else if (this.predictionMode !== PredictionMode.LL_EXACT_AMBIG_DETECTION) {\n            predictedAlt = PredictionMode.resolvesToJustOneViableAlt(altSubSets);\n            if(predictedAlt !== ATN.INVALID_ALT_NUMBER) {\n                break;\n            }\n        } else {\n            // In exact ambiguity mode, we never try to terminate early.\n            // Just keeps scarfing until we know what the conflict is\n            if (PredictionMode.allSubsetsConflict(altSubSets) && PredictionMode.allSubsetsEqual(altSubSets)) {\n                foundExactAmbig = true;\n                predictedAlt = PredictionMode.getSingleViableAlt(altSubSets);\n                break;\n            }\n            // else there are multiple non-conflicting subsets or\n            // we're not sure what the ambiguity is yet.\n            // So, keep going.\n        }\n        previous = reach;\n        if( t !== Token.EOF) {\n            input.consume();\n            t = input.LA(1);\n        }\n    }\n    // If the configuration set uniquely predicts an alternative,\n    // without conflict, then we know that it's a full LL decision\n    // not SLL.\n    if (reach.uniqueAlt !== ATN.INVALID_ALT_NUMBER ) {\n        this.reportContextSensitivity(dfa, predictedAlt, reach, startIndex, input.index);\n        return predictedAlt;\n    }\n    // We do not check predicates here because we have checked them\n    // on-the-fly when doing full context prediction.\n\n    //\n    // In non-exact ambiguity detection mode, we might\tactually be able to\n    // detect an exact ambiguity, but I'm not going to spend the cycles\n    // needed to check. We only emit ambiguity warnings in exact ambiguity\n    // mode.\n    //\n    // For example, we might know that we have conflicting configurations.\n    // But, that does not mean that there is no way forward without a\n    // conflict. It's possible to have nonconflicting alt subsets as in:\n\n    // altSubSets=[{1, 2}, {1, 2}, {1}, {1, 2}]\n\n    // from\n    //\n    //    [(17,1,[5 $]), (13,1,[5 10 $]), (21,1,[5 10 $]), (11,1,[$]),\n    //     (13,2,[5 10 $]), (21,2,[5 10 $]), (11,2,[$])]\n    //\n    // In this case, (17,1,[5 $]) indicates there is some next sequence that\n    // would resolve this without conflict to alternative 1. Any other viable\n    // next sequence, however, is associated with a conflict.  We stop\n    // looking for input because no amount of further lookahead will alter\n    // the fact that we should predict alternative 1.  We just can't say for\n    // sure that there is an ambiguity without looking further.\n\n    this.reportAmbiguity(dfa, D, startIndex, input.index, foundExactAmbig, null, reach);\n\n    return predictedAlt;\n};\n\nParserATNSimulator.prototype.computeReachSet = function(closure, t, fullCtx) {\n    if (this.debug) {\n        console.log(\"in computeReachSet, starting closure: \" + closure);\n    }\n    if( this.mergeCache===null) {\n        this.mergeCache = new DoubleDict();\n    }\n    var intermediate = new ATNConfigSet(fullCtx);\n\n    // Configurations already in a rule stop state indicate reaching the end\n    // of the decision rule (local context) or end of the start rule (full\n    // context). Once reached, these configurations are never updated by a\n    // closure operation, so they are handled separately for the performance\n    // advantage of having a smaller intermediate set when calling closure.\n    //\n    // For full-context reach operations, separate handling is required to\n    // ensure that the alternative matching the longest overall sequence is\n    // chosen when multiple such configurations can match the input.\n\n    var skippedStopStates = null;\n\n    // First figure out where we can reach on input t\n    for (var i=0; i<closure.items.length;i++) {\n        var c = closure.items[i];\n        if(this.debug_add) {\n            console.log(\"testing \" + this.getTokenName(t) + \" at \" + c);\n        }\n        if (c.state instanceof RuleStopState) {\n            if (fullCtx || t === Token.EOF) {\n                if (skippedStopStates===null) {\n                    skippedStopStates = [];\n                }\n                skippedStopStates.push(c);\n                if(this.debug_add) {\n                    console.log(\"added \" + c + \" to skippedStopStates\");\n                }\n            }\n            continue;\n        }\n        for(var j=0;j<c.state.transitions.length;j++) {\n            var trans = c.state.transitions[j];\n            var target = this.getReachableTarget(trans, t);\n            if (target!==null) {\n                var cfg = new ATNConfig({state:target}, c);\n                intermediate.add(cfg, this.mergeCache);\n                if(this.debug_add) {\n                    console.log(\"added \" + cfg + \" to intermediate\");\n                }\n            }\n        }\n    }\n    // Now figure out where the reach operation can take us...\n    var reach = null;\n\n    // This block optimizes the reach operation for intermediate sets which\n    // trivially indicate a termination state for the overall\n    // adaptivePredict operation.\n    //\n    // The conditions assume that intermediate\n    // contains all configurations relevant to the reach set, but this\n    // condition is not true when one or more configurations have been\n    // withheld in skippedStopStates, or when the current symbol is EOF.\n    //\n    if (skippedStopStates===null && t!==Token.EOF) {\n        if (intermediate.items.length===1) {\n            // Don't pursue the closure if there is just one state.\n            // It can only have one alternative; just add to result\n            // Also don't pursue the closure if there is unique alternative\n            // among the configurations.\n            reach = intermediate;\n        } else if (this.getUniqueAlt(intermediate)!==ATN.INVALID_ALT_NUMBER) {\n            // Also don't pursue the closure if there is unique alternative\n            // among the configurations.\n            reach = intermediate;\n        }\n    }\n    // If the reach set could not be trivially determined, perform a closure\n    // operation on the intermediate set to compute its initial value.\n    //\n    if (reach===null) {\n        reach = new ATNConfigSet(fullCtx);\n        var closureBusy = new Set();\n        var treatEofAsEpsilon = t === Token.EOF;\n        for (var k=0; k<intermediate.items.length;k++) {\n            this.closure(intermediate.items[k], reach, closureBusy, false, fullCtx, treatEofAsEpsilon);\n        }\n    }\n    if (t === Token.EOF) {\n        // After consuming EOF no additional input is possible, so we are\n        // only interested in configurations which reached the end of the\n        // decision rule (local context) or end of the start rule (full\n        // context). Update reach to contain only these configurations. This\n        // handles both explicit EOF transitions in the grammar and implicit\n        // EOF transitions following the end of the decision or start rule.\n        //\n        // When reach==intermediate, no closure operation was performed. In\n        // this case, removeAllConfigsNotInRuleStopState needs to check for\n        // reachable rule stop states as well as configurations already in\n        // a rule stop state.\n        //\n        // This is handled before the configurations in skippedStopStates,\n        // because any configurations potentially added from that list are\n        // already guaranteed to meet this condition whether or not it's\n        // required.\n        //\n        reach = this.removeAllConfigsNotInRuleStopState(reach, reach === intermediate);\n    }\n    // If skippedStopStates!==null, then it contains at least one\n    // configuration. For full-context reach operations, these\n    // configurations reached the end of the start rule, in which case we\n    // only add them back to reach if no configuration during the current\n    // closure operation reached such a state. This ensures adaptivePredict\n    // chooses an alternative matching the longest overall sequence when\n    // multiple alternatives are viable.\n    //\n    if (skippedStopStates!==null && ( (! fullCtx) || (! PredictionMode.hasConfigInRuleStopState(reach)))) {\n        for (var l=0; l<skippedStopStates.length;l++) {\n            reach.add(skippedStopStates[l], this.mergeCache);\n        }\n    }\n    if (reach.items.length===0) {\n        return null;\n    } else {\n        return reach;\n    }\n};\n//\n// Return a configuration set containing only the configurations from\n// {@code configs} which are in a {@link RuleStopState}. If all\n// configurations in {@code configs} are already in a rule stop state, this\n// method simply returns {@code configs}.\n//\n// <p>When {@code lookToEndOfRule} is true, this method uses\n// {@link ATN//nextTokens} for each configuration in {@code configs} which is\n// not already in a rule stop state to see if a rule stop state is reachable\n// from the configuration via epsilon-only transitions.</p>\n//\n// @param configs the configuration set to update\n// @param lookToEndOfRule when true, this method checks for rule stop states\n// reachable by epsilon-only transitions from each configuration in\n// {@code configs}.\n//\n// @return {@code configs} if all configurations in {@code configs} are in a\n// rule stop state, otherwise return a new configuration set containing only\n// the configurations from {@code configs} which are in a rule stop state\n//\nParserATNSimulator.prototype.removeAllConfigsNotInRuleStopState = function(configs, lookToEndOfRule) {\n    if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n        return configs;\n    }\n    var result = new ATNConfigSet(configs.fullCtx);\n    for(var i=0; i<configs.items.length;i++) {\n        var config = configs.items[i];\n        if (config.state instanceof RuleStopState) {\n            result.add(config, this.mergeCache);\n            continue;\n        }\n        if (lookToEndOfRule && config.state.epsilonOnlyTransitions) {\n            var nextTokens = this.atn.nextTokens(config.state);\n            if (nextTokens.contains(Token.EPSILON)) {\n                var endOfRuleState = this.atn.ruleToStopState[config.state.ruleIndex];\n                result.add(new ATNConfig({state:endOfRuleState}, config), this.mergeCache);\n            }\n        }\n    }\n    return result;\n};\n\nParserATNSimulator.prototype.computeStartState = function(p, ctx, fullCtx) {\n    // always at least the implicit call to start rule\n    var initialContext = predictionContextFromRuleContext(this.atn, ctx);\n    var configs = new ATNConfigSet(fullCtx);\n    for(var i=0;i<p.transitions.length;i++) {\n        var target = p.transitions[i].target;\n        var c = new ATNConfig({ state:target, alt:i+1, context:initialContext }, null);\n        var closureBusy = new Set();\n        this.closure(c, configs, closureBusy, true, fullCtx, false);\n    }\n    return configs;\n};\n\n//\n// This method transforms the start state computed by\n// {@link //computeStartState} to the special start state used by a\n// precedence DFA for a particular precedence value. The transformation\n// process applies the following changes to the start state's configuration\n// set.\n//\n// <ol>\n// <li>Evaluate the precedence predicates for each configuration using\n// {@link SemanticContext//evalPrecedence}.</li>\n// <li>Remove all configurations which predict an alternative greater than\n// 1, for which another configuration that predicts alternative 1 is in the\n// same ATN state with the same prediction context. This transformation is\n// valid for the following reasons:\n// <ul>\n// <li>The closure block cannot contain any epsilon transitions which bypass\n// the body of the closure, so all states reachable via alternative 1 are\n// part of the precedence alternatives of the transformed left-recursive\n// rule.</li>\n// <li>The \"primary\" portion of a left recursive rule cannot contain an\n// epsilon transition, so the only way an alternative other than 1 can exist\n// in a state that is also reachable via alternative 1 is by nesting calls\n// to the left-recursive rule, with the outer calls not being at the\n// preferred precedence level.</li>\n// </ul>\n// </li>\n// </ol>\n//\n// <p>\n// The prediction context must be considered by this filter to address\n// situations like the following.\n// </p>\n// <code>\n// <pre>\n// grammar TA;\n// prog: statement* EOF;\n// statement: letterA | statement letterA 'b' ;\n// letterA: 'a';\n// </pre>\n// </code>\n// <p>\n// If the above grammar, the ATN state immediately before the token\n// reference {@code 'a'} in {@code letterA} is reachable from the left edge\n// of both the primary and closure blocks of the left-recursive rule\n// {@code statement}. The prediction context associated with each of these\n// configurations distinguishes between them, and prevents the alternative\n// which stepped out to {@code prog} (and then back in to {@code statement}\n// from being eliminated by the filter.\n// </p>\n//\n// @param configs The configuration set computed by\n// {@link //computeStartState} as the start state for the DFA.\n// @return The transformed configuration set representing the start state\n// for a precedence DFA at a particular precedence level (determined by\n// calling {@link Parser//getPrecedence}).\n//\nParserATNSimulator.prototype.applyPrecedenceFilter = function(configs) {\n\tvar config;\n\tvar statesFromAlt1 = [];\n    var configSet = new ATNConfigSet(configs.fullCtx);\n    for(var i=0; i<configs.items.length; i++) {\n        config = configs.items[i];\n        // handle alt 1 first\n        if (config.alt !== 1) {\n            continue;\n        }\n        var updatedContext = config.semanticContext.evalPrecedence(this.parser, this._outerContext);\n        if (updatedContext===null) {\n            // the configuration was eliminated\n            continue;\n        }\n        statesFromAlt1[config.state.stateNumber] = config.context;\n        if (updatedContext !== config.semanticContext) {\n            configSet.add(new ATNConfig({semanticContext:updatedContext}, config), this.mergeCache);\n        } else {\n            configSet.add(config, this.mergeCache);\n        }\n    }\n    for(i=0; i<configs.items.length; i++) {\n        config = configs.items[i];\n        if (config.alt === 1) {\n            // already handled\n            continue;\n        }\n        // In the future, this elimination step could be updated to also\n        // filter the prediction context for alternatives predicting alt>1\n        // (basically a graph subtraction algorithm).\n\t\tif (!config.precedenceFilterSuppressed) {\n            var context = statesFromAlt1[config.state.stateNumber] || null;\n            if (context!==null && context.equals(config.context)) {\n                // eliminated\n                continue;\n            }\n\t\t}\n        configSet.add(config, this.mergeCache);\n    }\n    return configSet;\n};\n\nParserATNSimulator.prototype.getReachableTarget = function(trans, ttype) {\n    if (trans.matches(ttype, 0, this.atn.maxTokenType)) {\n        return trans.target;\n    } else {\n        return null;\n    }\n};\n\nParserATNSimulator.prototype.getPredsForAmbigAlts = function(ambigAlts, configs, nalts) {\n    // REACH=[1|1|[]|0:0, 1|2|[]|0:1]\n    // altToPred starts as an array of all null contexts. The entry at index i\n    // corresponds to alternative i. altToPred[i] may have one of three values:\n    //   1. null: no ATNConfig c is found such that c.alt==i\n    //   2. SemanticContext.NONE: At least one ATNConfig c exists such that\n    //      c.alt==i and c.semanticContext==SemanticContext.NONE. In other words,\n    //      alt i has at least one unpredicated config.\n    //   3. Non-NONE Semantic Context: There exists at least one, and for all\n    //      ATNConfig c such that c.alt==i, c.semanticContext!=SemanticContext.NONE.\n    //\n    // From this, it is clear that NONE||anything==NONE.\n    //\n    var altToPred = [];\n    for(var i=0;i<configs.items.length;i++) {\n        var c = configs.items[i];\n        if(ambigAlts.contains( c.alt )) {\n            altToPred[c.alt] = SemanticContext.orContext(altToPred[c.alt] || null, c.semanticContext);\n        }\n    }\n    var nPredAlts = 0;\n    for (i =1;i< nalts+1;i++) {\n        var pred = altToPred[i] || null;\n        if (pred===null) {\n            altToPred[i] = SemanticContext.NONE;\n        } else if (pred !== SemanticContext.NONE) {\n            nPredAlts += 1;\n        }\n    }\n    // nonambig alts are null in altToPred\n    if (nPredAlts===0) {\n        altToPred = null;\n    }\n    if (this.debug) {\n        console.log(\"getPredsForAmbigAlts result \" + Utils.arrayToString(altToPred));\n    }\n    return altToPred;\n};\n\nParserATNSimulator.prototype.getPredicatePredictions = function(ambigAlts, altToPred) {\n    var pairs = [];\n    var containsPredicate = false;\n    for (var i=1; i<altToPred.length;i++) {\n        var pred = altToPred[i];\n        // unpredicated is indicated by SemanticContext.NONE\n        if( ambigAlts!==null && ambigAlts.contains( i )) {\n            pairs.push(new PredPrediction(pred, i));\n        }\n        if (pred !== SemanticContext.NONE) {\n            containsPredicate = true;\n        }\n    }\n    if (! containsPredicate) {\n        return null;\n    }\n    return pairs;\n};\n\n//\n// This method is used to improve the localization of error messages by\n// choosing an alternative rather than throwing a\n// {@link NoViableAltException} in particular prediction scenarios where the\n// {@link //ERROR} state was reached during ATN simulation.\n//\n// <p>\n// The default implementation of this method uses the following\n// algorithm to identify an ATN configuration which successfully parsed the\n// decision entry rule. Choosing such an alternative ensures that the\n// {@link ParserRuleContext} returned by the calling rule will be complete\n// and valid, and the syntax error will be reported later at a more\n// localized location.</p>\n//\n// <ul>\n// <li>If a syntactically valid path or paths reach the end of the decision rule and\n// they are semantically valid if predicated, return the min associated alt.</li>\n// <li>Else, if a semantically invalid but syntactically valid path exist\n// or paths exist, return the minimum associated alt.\n// </li>\n// <li>Otherwise, return {@link ATN//INVALID_ALT_NUMBER}.</li>\n// </ul>\n//\n// <p>\n// In some scenarios, the algorithm described above could predict an\n// alternative which will result in a {@link FailedPredicateException} in\n// the parser. Specifically, this could occur if the <em>only</em> configuration\n// capable of successfully parsing to the end of the decision rule is\n// blocked by a semantic predicate. By choosing this alternative within\n// {@link //adaptivePredict} instead of throwing a\n// {@link NoViableAltException}, the resulting\n// {@link FailedPredicateException} in the parser will identify the specific\n// predicate which is preventing the parser from successfully parsing the\n// decision rule, which helps developers identify and correct logic errors\n// in semantic predicates.\n// </p>\n//\n// @param configs The ATN configurations which were valid immediately before\n// the {@link //ERROR} state was reached\n// @param outerContext The is the \\gamma_0 initial parser context from the paper\n// or the parser stack at the instant before prediction commences.\n//\n// @return The value to return from {@link //adaptivePredict}, or\n// {@link ATN//INVALID_ALT_NUMBER} if a suitable alternative was not\n// identified and {@link //adaptivePredict} should report an error instead.\n//\nParserATNSimulator.prototype.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule = function(configs, outerContext) {\n    var cfgs = this.splitAccordingToSemanticValidity(configs, outerContext);\n    var semValidConfigs = cfgs[0];\n    var semInvalidConfigs = cfgs[1];\n    var alt = this.getAltThatFinishedDecisionEntryRule(semValidConfigs);\n    if (alt!==ATN.INVALID_ALT_NUMBER) { // semantically/syntactically viable path exists\n        return alt;\n    }\n    // Is there a syntactically valid path with a failed pred?\n    if (semInvalidConfigs.items.length>0) {\n        alt = this.getAltThatFinishedDecisionEntryRule(semInvalidConfigs);\n        if (alt!==ATN.INVALID_ALT_NUMBER) { // syntactically viable path exists\n            return alt;\n        }\n    }\n    return ATN.INVALID_ALT_NUMBER;\n};\n\nParserATNSimulator.prototype.getAltThatFinishedDecisionEntryRule = function(configs) {\n    var alts = [];\n    for(var i=0;i<configs.items.length; i++) {\n        var c = configs.items[i];\n        if (c.reachesIntoOuterContext>0 || ((c.state instanceof RuleStopState) && c.context.hasEmptyPath())) {\n            if(alts.indexOf(c.alt)<0) {\n                alts.push(c.alt);\n            }\n        }\n    }\n    if (alts.length===0) {\n        return ATN.INVALID_ALT_NUMBER;\n    } else {\n        return Math.min.apply(null, alts);\n    }\n};\n// Walk the list of configurations and split them according to\n//  those that have preds evaluating to true/false.  If no pred, assume\n//  true pred and include in succeeded set.  Returns Pair of sets.\n//\n//  Create a new set so as not to alter the incoming parameter.\n//\n//  Assumption: the input stream has been restored to the starting point\n//  prediction, which is where predicates need to evaluate.\n//\nParserATNSimulator.prototype.splitAccordingToSemanticValidity = function( configs, outerContext) {\n    var succeeded = new ATNConfigSet(configs.fullCtx);\n    var failed = new ATNConfigSet(configs.fullCtx);\n    for(var i=0;i<configs.items.length; i++) {\n        var c = configs.items[i];\n        if (c.semanticContext !== SemanticContext.NONE) {\n            var predicateEvaluationResult = c.semanticContext.evaluate(this.parser, outerContext);\n            if (predicateEvaluationResult) {\n                succeeded.add(c);\n            } else {\n                failed.add(c);\n            }\n        } else {\n            succeeded.add(c);\n        }\n    }\n    return [succeeded, failed];\n};\n\n// Look through a list of predicate/alt pairs, returning alts for the\n//  pairs that win. A {@code NONE} predicate indicates an alt containing an\n//  unpredicated config which behaves as \"always true.\" If !complete\n//  then we stop at the first predicate that evaluates to true. This\n//  includes pairs with null predicates.\n//\nParserATNSimulator.prototype.evalSemanticContext = function(predPredictions, outerContext, complete) {\n    var predictions = new BitSet();\n    for(var i=0;i<predPredictions.length;i++) {\n    \tvar pair = predPredictions[i];\n        if (pair.pred === SemanticContext.NONE) {\n            predictions.add(pair.alt);\n            if (! complete) {\n                break;\n            }\n            continue;\n        }\n        var predicateEvaluationResult = pair.pred.evaluate(this.parser, outerContext);\n        if (this.debug || this.dfa_debug) {\n            console.log(\"eval pred \" + pair + \"=\" + predicateEvaluationResult);\n        }\n        if (predicateEvaluationResult) {\n            if (this.debug || this.dfa_debug) {\n                console.log(\"PREDICT \" + pair.alt);\n            }\n            predictions.add(pair.alt);\n            if (! complete) {\n                break;\n            }\n        }\n    }\n    return predictions;\n};\n\n// TODO: If we are doing predicates, there is no point in pursuing\n//     closure operations if we reach a DFA state that uniquely predicts\n//     alternative. We will not be caching that DFA state and it is a\n//     waste to pursue the closure. Might have to advance when we do\n//     ambig detection thought :(\n//\n\nParserATNSimulator.prototype.closure = function(config, configs, closureBusy, collectPredicates, fullCtx, treatEofAsEpsilon) {\n    var initialDepth = 0;\n    this.closureCheckingStopState(config, configs, closureBusy, collectPredicates,\n                             fullCtx, initialDepth, treatEofAsEpsilon);\n};\n\n\nParserATNSimulator.prototype.closureCheckingStopState = function(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n    if (this.debug || this.debug_closure) {\n        console.log(\"closure(\" + config.toString(this.parser,true) + \")\");\n        // console.log(\"configs(\" + configs.toString() + \")\");\n        if(config.reachesIntoOuterContext>50) {\n            throw \"problem\";\n        }\n    }\n    if (config.state instanceof RuleStopState) {\n        // We hit rule end. If we have context info, use it\n        // run thru all possible stack tops in ctx\n        if (! config.context.isEmpty()) {\n            for ( var i =0; i<config.context.length; i++) {\n                if (config.context.getReturnState(i) === PredictionContext.EMPTY_RETURN_STATE) {\n                    if (fullCtx) {\n                        configs.add(new ATNConfig({state:config.state, context:PredictionContext.EMPTY}, config), this.mergeCache);\n                        continue;\n                    } else {\n                        // we have no context info, just chase follow links (if greedy)\n                        if (this.debug) {\n                            console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n                        }\n                        this.closure_(config, configs, closureBusy, collectPredicates,\n                                 fullCtx, depth, treatEofAsEpsilon);\n                    }\n                    continue;\n                }\n                var returnState = this.atn.states[config.context.getReturnState(i)];\n                var newContext = config.context.getParent(i); // \"pop\" return state\n                var parms = {state:returnState, alt:config.alt, context:newContext, semanticContext:config.semanticContext};\n                var c = new ATNConfig(parms, null);\n                // While we have context to pop back from, we may have\n                // gotten that context AFTER having falling off a rule.\n                // Make sure we track that we are now out of context.\n                c.reachesIntoOuterContext = config.reachesIntoOuterContext;\n                this.closureCheckingStopState(c, configs, closureBusy, collectPredicates, fullCtx, depth - 1, treatEofAsEpsilon);\n            }\n            return;\n        } else if( fullCtx) {\n            // reached end of start rule\n            configs.add(config, this.mergeCache);\n            return;\n        } else {\n            // else if we have no context info, just chase follow links (if greedy)\n            if (this.debug) {\n                console.log(\"FALLING off rule \" + this.getRuleName(config.state.ruleIndex));\n            }\n        }\n    }\n    this.closure_(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon);\n};\n\n\n// Do the actual work of walking epsilon edges//\nParserATNSimulator.prototype.closure_ = function(config, configs, closureBusy, collectPredicates, fullCtx, depth, treatEofAsEpsilon) {\n    var p = config.state;\n    // optimization\n    if (! p.epsilonOnlyTransitions) {\n        configs.add(config, this.mergeCache);\n        // make sure to not return here, because EOF transitions can act as\n        // both epsilon transitions and non-epsilon transitions.\n    }\n    for(var i = 0;i<p.transitions.length; i++) {\n        if(i==0 && this.canDropLoopEntryEdgeInLeftRecursiveRule(config))\n            continue;\n\n        var t = p.transitions[i];\n        var continueCollecting = collectPredicates && !(t instanceof ActionTransition);\n        var c = this.getEpsilonTarget(config, t, continueCollecting, depth === 0, fullCtx, treatEofAsEpsilon);\n        if (c!==null) {\n\t\t\tif (!t.isEpsilon && closureBusy.add(c)!==c){\n\t\t\t\t// avoid infinite recursion for EOF* and EOF+\n\t\t\t\tcontinue;\n\t\t\t}\n            var newDepth = depth;\n            if ( config.state instanceof RuleStopState) {\n                // target fell off end of rule; mark resulting c as having dipped into outer context\n                // We can't get here if incoming config was rule stop and we had context\n                // track how far we dip into outer context.  Might\n                // come in handy and we avoid evaluating context dependent\n                // preds if this is > 0.\n\n                if (closureBusy.add(c)!==c) {\n                    // avoid infinite recursion for right-recursive rules\n                    continue;\n                }\n\n\t\t\t\tif (this._dfa !== null && this._dfa.precedenceDfa) {\n\t\t\t\t\tif (t.outermostPrecedenceReturn === this._dfa.atnStartState.ruleIndex) {\n\t\t\t\t\t\tc.precedenceFilterSuppressed = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n                c.reachesIntoOuterContext += 1;\n                configs.dipsIntoOuterContext = true; // TODO: can remove? only care when we add to set per middle of this method\n                newDepth -= 1;\n                if (this.debug) {\n                    console.log(\"dips into outer ctx: \" + c);\n                }\n            } else if (t instanceof RuleTransition) {\n                // latch when newDepth goes negative - once we step out of the entry context we can't return\n                if (newDepth >= 0) {\n                    newDepth += 1;\n                }\n            }\n            this.closureCheckingStopState(c, configs, closureBusy, continueCollecting, fullCtx, newDepth, treatEofAsEpsilon);\n        }\n    }\n};\n\n\nParserATNSimulator.prototype.canDropLoopEntryEdgeInLeftRecursiveRule = function(config) {\n    // return False\n    var p = config.state;\n    // First check to see if we are in StarLoopEntryState generated during\n    // left-recursion elimination. For efficiency, also check if\n    // the context has an empty stack case. If so, it would mean\n    // global FOLLOW so we can't perform optimization\n    // Are we the special loop entry/exit state? or SLL wildcard\n    if(p.stateType != ATNState.STAR_LOOP_ENTRY)\n        return false;\n    if(p.stateType != ATNState.STAR_LOOP_ENTRY || !p.isPrecedenceDecision ||\n           config.context.isEmpty() || config.context.hasEmptyPath())\n        return false;\n\n    // Require all return states to return back to the same rule that p is in.\n    var numCtxs = config.context.length;\n    for(var i=0; i<numCtxs; i++) { // for each stack context\n        var returnState = this.atn.states[config.context.getReturnState(i)];\n        if (returnState.ruleIndex != p.ruleIndex)\n            return false;\n    }\n\n    var decisionStartState = p.transitions[0].target;\n    var blockEndStateNum = decisionStartState.endState.stateNumber;\n    var blockEndState = this.atn.states[blockEndStateNum];\n\n    // Verify that the top of each stack context leads to loop entry/exit\n    // state through epsilon edges and w/o leaving rule.\n    for(var i=0; i<numCtxs; i++) { // for each stack context\n        var returnStateNumber = config.context.getReturnState(i);\n        var returnState = this.atn.states[returnStateNumber];\n        // all states must have single outgoing epsilon edge\n        if (returnState.transitions.length != 1 || !returnState.transitions[0].isEpsilon)\n            return false;\n\n        // Look for prefix op case like 'not expr', (' type ')' expr\n        var returnStateTarget = returnState.transitions[0].target;\n        if ( returnState.stateType == ATNState.BLOCK_END && returnStateTarget == p )\n            continue;\n\n        // Look for 'expr op expr' or case where expr's return state is block end\n        // of (...)* internal block; the block end points to loop back\n        // which points to p but we don't need to check that\n        if ( returnState == blockEndState )\n            continue;\n\n        // Look for ternary expr ? expr : expr. The return state points at block end,\n        // which points at loop entry state\n        if ( returnStateTarget == blockEndState )\n            continue;\n\n        // Look for complex prefix 'between expr and expr' case where 2nd expr's\n        // return state points at block end state of (...)* internal block\n        if (returnStateTarget.stateType == ATNState.BLOCK_END && returnStateTarget.transitions.length == 1\n                && returnStateTarget.transitions[0].isEpsilon && returnStateTarget.transitions[0].target == p)\n            continue;\n\n        // anything else ain't conforming\n        return false;\n    }\n    return true;\n};\n\n\nParserATNSimulator.prototype.getRuleName = function( index) {\n    if (this.parser!==null && index>=0) {\n        return this.parser.ruleNames[index];\n    } else {\n        return \"<rule \" + index + \">\";\n    }\n};\n\nParserATNSimulator.prototype.getEpsilonTarget = function(config, t, collectPredicates, inContext, fullCtx, treatEofAsEpsilon) {\n    switch(t.serializationType) {\n    case Transition.RULE:\n        return this.ruleTransition(config, t);\n    case Transition.PRECEDENCE:\n        return this.precedenceTransition(config, t, collectPredicates, inContext, fullCtx);\n    case Transition.PREDICATE:\n        return this.predTransition(config, t, collectPredicates, inContext, fullCtx);\n    case Transition.ACTION:\n        return this.actionTransition(config, t);\n    case Transition.EPSILON:\n        return new ATNConfig({state:t.target}, config);\n    case Transition.ATOM:\n    case Transition.RANGE:\n    case Transition.SET:\n        // EOF transitions act like epsilon transitions after the first EOF\n        // transition is traversed\n        if (treatEofAsEpsilon) {\n            if (t.matches(Token.EOF, 0, 1)) {\n                return new ATNConfig({state: t.target}, config);\n            }\n        }\n        return null;\n    default:\n    \treturn null;\n    }\n};\n\nParserATNSimulator.prototype.actionTransition = function(config, t) {\n    if (this.debug) {\n        var index = t.actionIndex==-1 ? 65535 : t.actionIndex;\n        console.log(\"ACTION edge \" + t.ruleIndex + \":\" + index);\n    }\n    return new ATNConfig({state:t.target}, config);\n};\n\nParserATNSimulator.prototype.precedenceTransition = function(config, pt,  collectPredicates, inContext, fullCtx) {\n    if (this.debug) {\n        console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" +\n                pt.precedence + \">=_p, ctx dependent=true\");\n        if (this.parser!==null) {\n        \tconsole.log(\"context surrounding pred is \" + Utils.arrayToString(this.parser.getRuleInvocationStack()));\n        }\n    }\n    var c = null;\n    if (collectPredicates && inContext) {\n        if (fullCtx) {\n            // In full context mode, we can evaluate predicates on-the-fly\n            // during closure, which dramatically reduces the size of\n            // the config sets. It also obviates the need to test predicates\n            // later during conflict resolution.\n            var currentPosition = this._input.index;\n            this._input.seek(this._startIndex);\n            var predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n            this._input.seek(currentPosition);\n            if (predSucceeds) {\n                c = new ATNConfig({state:pt.target}, config); // no pred context\n            }\n        } else {\n            var newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n            c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n        }\n    } else {\n        c = new ATNConfig({state:pt.target}, config);\n    }\n    if (this.debug) {\n        console.log(\"config from pred transition=\" + c);\n    }\n    return c;\n};\n\nParserATNSimulator.prototype.predTransition = function(config, pt, collectPredicates, inContext, fullCtx) {\n    if (this.debug) {\n        console.log(\"PRED (collectPredicates=\" + collectPredicates + \") \" + pt.ruleIndex +\n                \":\" + pt.predIndex + \", ctx dependent=\" + pt.isCtxDependent);\n        if (this.parser!==null) {\n            console.log(\"context surrounding pred is \" + Utils.arrayToString(this.parser.getRuleInvocationStack()));\n        }\n    }\n    var c = null;\n    if (collectPredicates && ((pt.isCtxDependent && inContext) || ! pt.isCtxDependent)) {\n        if (fullCtx) {\n            // In full context mode, we can evaluate predicates on-the-fly\n            // during closure, which dramatically reduces the size of\n            // the config sets. It also obviates the need to test predicates\n            // later during conflict resolution.\n            var currentPosition = this._input.index;\n            this._input.seek(this._startIndex);\n            var predSucceeds = pt.getPredicate().evaluate(this.parser, this._outerContext);\n            this._input.seek(currentPosition);\n            if (predSucceeds) {\n                c = new ATNConfig({state:pt.target}, config); // no pred context\n            }\n        } else {\n            var newSemCtx = SemanticContext.andContext(config.semanticContext, pt.getPredicate());\n            c = new ATNConfig({state:pt.target, semanticContext:newSemCtx}, config);\n        }\n    } else {\n        c = new ATNConfig({state:pt.target}, config);\n    }\n    if (this.debug) {\n        console.log(\"config from pred transition=\" + c);\n    }\n    return c;\n};\n\nParserATNSimulator.prototype.ruleTransition = function(config, t) {\n    if (this.debug) {\n        console.log(\"CALL rule \" + this.getRuleName(t.target.ruleIndex) + \", ctx=\" + config.context);\n    }\n    var returnState = t.followState;\n    var newContext = SingletonPredictionContext.create(config.context, returnState.stateNumber);\n    return new ATNConfig({state:t.target, context:newContext}, config );\n};\n\nParserATNSimulator.prototype.getConflictingAlts = function(configs) {\n    var altsets = PredictionMode.getConflictingAltSubsets(configs);\n    return PredictionMode.getAlts(altsets);\n};\n\n // Sam pointed out a problem with the previous definition, v3, of\n // ambiguous states. If we have another state associated with conflicting\n // alternatives, we should keep going. For example, the following grammar\n //\n // s : (ID | ID ID?) ';' ;\n //\n // When the ATN simulation reaches the state before ';', it has a DFA\n // state that looks like: [12|1|[], 6|2|[], 12|2|[]]. Naturally\n // 12|1|[] and 12|2|[] conflict, but we cannot stop processing this node\n // because alternative to has another way to continue, via [6|2|[]].\n // The key is that we have a single state that has config's only associated\n // with a single alternative, 2, and crucially the state transitions\n // among the configurations are all non-epsilon transitions. That means\n // we don't consider any conflicts that include alternative 2. So, we\n // ignore the conflict between alts 1 and 2. We ignore a set of\n // conflicting alts when there is an intersection with an alternative\n // associated with a single alt state in the state&rarr;config-list map.\n //\n // It's also the case that we might have two conflicting configurations but\n // also a 3rd nonconflicting configuration for a different alternative:\n // [1|1|[], 1|2|[], 8|3|[]]. This can come about from grammar:\n //\n // a : A | A | A B ;\n //\n // After matching input A, we reach the stop state for rule A, state 1.\n // State 8 is the state right before B. Clearly alternatives 1 and 2\n // conflict and no amount of further lookahead will separate the two.\n // However, alternative 3 will be able to continue and so we do not\n // stop working on this state. In the previous example, we're concerned\n // with states associated with the conflicting alternatives. Here alt\n // 3 is not associated with the conflicting configs, but since we can continue\n // looking for input reasonably, I don't declare the state done. We\n // ignore a set of conflicting alts when we have an alternative\n // that we still need to pursue.\n//\n\nParserATNSimulator.prototype.getConflictingAltsOrUniqueAlt = function(configs) {\n    var conflictingAlts = null;\n    if (configs.uniqueAlt!== ATN.INVALID_ALT_NUMBER) {\n        conflictingAlts = new BitSet();\n        conflictingAlts.add(configs.uniqueAlt);\n    } else {\n        conflictingAlts = configs.conflictingAlts;\n    }\n    return conflictingAlts;\n};\n\nParserATNSimulator.prototype.getTokenName = function( t) {\n    if (t===Token.EOF) {\n        return \"EOF\";\n    }\n    if( this.parser!==null && this.parser.literalNames!==null) {\n        if (t >= this.parser.literalNames.length && t >= this.parser.symbolicNames.length) {\n            console.log(\"\" + t + \" ttype out of range: \" + this.parser.literalNames);\n            console.log(\"\" + this.parser.getInputStream().getTokens());\n        } else {\n            var name = this.parser.literalNames[t] || this.parser.symbolicNames[t];\n            return name + \"<\" + t + \">\";\n        }\n    }\n    return \"\" + t;\n};\n\nParserATNSimulator.prototype.getLookaheadName = function(input) {\n    return this.getTokenName(input.LA(1));\n};\n\n// Used for debugging in adaptivePredict around execATN but I cut\n//  it out for clarity now that alg. works well. We can leave this\n//  \"dead\" code for a bit.\n//\nParserATNSimulator.prototype.dumpDeadEndConfigs = function(nvae) {\n    console.log(\"dead end configs: \");\n    var decs = nvae.getDeadEndConfigs();\n    for(var i=0; i<decs.length; i++) {\n    \tvar c = decs[i];\n        var trans = \"no edges\";\n        if (c.state.transitions.length>0) {\n            var t = c.state.transitions[0];\n            if (t instanceof AtomTransition) {\n                trans = \"Atom \"+ this.getTokenName(t.label);\n            } else if (t instanceof SetTransition) {\n                var neg = (t instanceof NotSetTransition);\n                trans = (neg ? \"~\" : \"\") + \"Set \" + t.set;\n            }\n        }\n        console.error(c.toString(this.parser, true) + \":\" + trans);\n    }\n};\n\nParserATNSimulator.prototype.noViableAlt = function(input, outerContext, configs, startIndex) {\n    return new NoViableAltException(this.parser, input, input.get(startIndex), input.LT(1), configs, outerContext);\n};\n\nParserATNSimulator.prototype.getUniqueAlt = function(configs) {\n    var alt = ATN.INVALID_ALT_NUMBER;\n    for(var i=0;i<configs.items.length;i++) {\n    \tvar c = configs.items[i];\n        if (alt === ATN.INVALID_ALT_NUMBER) {\n            alt = c.alt // found first alt\n        } else if( c.alt!==alt) {\n            return ATN.INVALID_ALT_NUMBER;\n        }\n    }\n    return alt;\n};\n\n//\n// Add an edge to the DFA, if possible. This method calls\n// {@link //addDFAState} to ensure the {@code to} state is present in the\n// DFA. If {@code from} is {@code null}, or if {@code t} is outside the\n// range of edges that can be represented in the DFA tables, this method\n// returns without adding the edge to the DFA.\n//\n// <p>If {@code to} is {@code null}, this method returns {@code null}.\n// Otherwise, this method returns the {@link DFAState} returned by calling\n// {@link //addDFAState} for the {@code to} state.</p>\n//\n// @param dfa The DFA\n// @param from The source state for the edge\n// @param t The input symbol\n// @param to The target state for the edge\n//\n// @return If {@code to} is {@code null}, this method returns {@code null};\n// otherwise this method returns the result of calling {@link //addDFAState}\n// on {@code to}\n//\nParserATNSimulator.prototype.addDFAEdge = function(dfa, from_, t, to) {\n    if( this.debug) {\n        console.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + this.getTokenName(t));\n    }\n    if (to===null) {\n        return null;\n    }\n    to = this.addDFAState(dfa, to); // used existing if possible not incoming\n    if (from_===null || t < -1 || t > this.atn.maxTokenType) {\n        return to;\n    }\n    if (from_.edges===null) {\n        from_.edges = [];\n    }\n    from_.edges[t+1] = to; // connect\n\n    if (this.debug) {\n        var literalNames = this.parser===null ? null : this.parser.literalNames;\n        var symbolicNames = this.parser===null ? null : this.parser.symbolicNames;\n        console.log(\"DFA=\\n\" + dfa.toString(literalNames, symbolicNames));\n    }\n    return to;\n};\n//\n// Add state {@code D} to the DFA if it is not already present, and return\n// the actual instance stored in the DFA. If a state equivalent to {@code D}\n// is already in the DFA, the existing state is returned. Otherwise this\n// method returns {@code D} after adding it to the DFA.\n//\n// <p>If {@code D} is {@link //ERROR}, this method returns {@link //ERROR} and\n// does not change the DFA.</p>\n//\n// @param dfa The dfa\n// @param D The DFA state to add\n// @return The state stored in the DFA. This will be either the existing\n// state if {@code D} is already in the DFA, or {@code D} itself if the\n// state was not already present.\n//\nParserATNSimulator.prototype.addDFAState = function(dfa, D) {\n    if (D == ATNSimulator.ERROR) {\n        return D;\n    }\n    var existing = dfa.states.get(D);\n    if(existing!==null) {\n        return existing;\n    }\n    D.stateNumber = dfa.states.length;\n    if (! D.configs.readOnly) {\n        D.configs.optimizeConfigs(this);\n        D.configs.setReadonly(true);\n    }\n    dfa.states.add(D);\n    if (this.debug) {\n        console.log(\"adding new DFA state: \" + D);\n    }\n    return D;\n};\n\nParserATNSimulator.prototype.reportAttemptingFullContext = function(dfa, conflictingAlts, configs, startIndex, stopIndex) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportAttemptingFullContext decision=\" + dfa.decision + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser, dfa, startIndex, stopIndex, conflictingAlts, configs);\n    }\n};\n\nParserATNSimulator.prototype.reportContextSensitivity = function(dfa, prediction, configs, startIndex, stopIndex) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportContextSensitivity decision=\" + dfa.decision + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser, dfa, startIndex, stopIndex, prediction, configs);\n    }\n};\n\n// If context sensitive parsing, we know it's ambiguity not conflict//\nParserATNSimulator.prototype.reportAmbiguity = function(dfa, D, startIndex, stopIndex,\n                               exact, ambigAlts, configs ) {\n    if (this.debug || this.retry_debug) {\n        var interval = new Interval(startIndex, stopIndex + 1);\n        console.log(\"reportAmbiguity \" + ambigAlts + \":\" + configs +\n                           \", input=\" + this.parser.getTokenStream().getText(interval));\n    }\n    if (this.parser!==null) {\n        this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser, dfa, startIndex, stopIndex, exact, ambigAlts, configs);\n    }\n};\n\nexports.ParserATNSimulator = ParserATNSimulator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ParserATNSimulator.js\n// module id = +1pv\n// module chunks = 0 1","const policyListener = require('policy_lang').policyListener;\r\nlet _ = require('underscore');\r\nlet indentLevel = 2\r\n\r\nclass Beautify extends policyListener {\r\n  constructor() {\r\n    super();\r\n    this.errorMsg = null;\r\n    this.stringArray = [];\r\n    this._nextIndent = ' ';\r\n  }\r\n  addIndent() {\r\n    _.each(_.range(indentLevel), () => {\r\n      this._nextIndent += \" \";\r\n    });\r\n  };\r\n  deleteIndent() {\r\n    this._nextIndent = this._nextIndent.slice(0, Number('-' + indentLevel));\r\n  };\r\n  enterSegment(ctx) {\r\n    this.stringArray.push('\\n')\r\n    this.stringArray.push('For');\r\n  };\r\n  exitSegment(ctx) {\r\n    this.deleteIndent();\r\n  };\r\n\r\n  enterAudience_clause(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      // this.stringArray.push(child.getText());\r\n      // console.log(child.getText());\r\n    });\r\n  };\r\n  enterAnd (ctx) {\r\n    this.stringArray.push('and');\r\n  };\r\n\r\n  exitAudience_clause(ctx) {\r\n    this.stringArray.push('in the following states:');\r\n    this.addIndent();\r\n    this.stringArray.push(this._nextIndent);\r\n  };\r\n  enterState_clause(ctx) {\r\n    this.stringArray.push('\\n');\r\n    this.stringArray.push(this._nextIndent);\r\n  };\r\n  enterCurrent_state_clause(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterTarget_clause(ctx) {\r\n    this.stringArray.push('\\n');\r\n    this.addIndent();\r\n    this.stringArray.push(this._nextIndent);\r\n    this.stringArray = this.stringArray.concat(['proceed to', ctx.ID().getText(), 'on']);\r\n  };\r\n  exitTarget_clause() {\r\n    this.deleteIndent();\r\n  }\r\n  enterAccepting(ctx) {\r\n    this.stringArray.push('accepting');\r\n  };\r\n  enterAnd_event(ctx) {\r\n    this.stringArray.push('and on');\r\n  };\r\n  enterPeriod_event (ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterSpecific_date_event (ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterRelative_date_event (ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterPricing_agreement_event(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterTransaction_event(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterContract_guaranty(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterPlatform_guaranty(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterSigning_event(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterSettlement_event(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterVisit_increment_event(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterVisit_event(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterBalance_greater(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterBalance_smaller(ctx) {\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  };\r\n  enterUsers(ctx) {\r\n    this.stringArray.push(ctx.getText());\r\n    // for (var i = 0; i < ctx.getChildCount(); i++) {\r\n    //   this.stringArray.push(ctx.getChild(i).getText());\r\n    // }\r\n  };\r\n  enterUser_groups(ctx) {\r\n    this.stringArray.push('users in');\r\n    for (var i = 0; i < ctx.getChildCount(); i++) {\r\n      this.stringArray.push(ctx.getChild(i).getText());\r\n    }\r\n  };\r\n  enterAthorize_token_clause (ctx) {\r\n    this.stringArray.push('\\n');\r\n    this.stringArray.push(this._nextIndent);\r\n    _.map(ctx.children, (child) => {\r\n      this.stringArray.push(child.getText());\r\n    });\r\n  }\r\n};\r\n\r\nmodule.exports = Beautify\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/freelog_policy_compiler/BeautifyExtension.js\n// module id = /CDt\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// Represents an executor for a sequence of lexer actions which traversed during\n// the matching operation of a lexer rule (token).\n//\n// <p>The executor tracks position information for position-dependent lexer actions\n// efficiently, ensuring that actions appearing only at the end of the rule do\n// not cause bloating of the {@link DFA} created for the lexer.</p>\n\nvar hashStuff = require(\"../Utils\").hashStuff;\nvar LexerIndexedCustomAction = require('./LexerAction').LexerIndexedCustomAction;\n\nfunction LexerActionExecutor(lexerActions) {\n\tthis.lexerActions = lexerActions === null ? [] : lexerActions;\n\t// Caches the result of {@link //hashCode} since the hash code is an element\n\t// of the performance-critical {@link LexerATNConfig//hashCode} operation.\n\tthis.cachedHashCode = hashStuff(lexerActions); // \"\".join([str(la) for la in\n\t// lexerActions]))\n\treturn this;\n}\n\n// Creates a {@link LexerActionExecutor} which executes the actions for\n// the input {@code lexerActionExecutor} followed by a specified\n// {@code lexerAction}.\n//\n// @param lexerActionExecutor The executor for actions already traversed by\n// the lexer while matching a token within a particular\n// {@link LexerATNConfig}. If this is {@code null}, the method behaves as\n// though it were an empty executor.\n// @param lexerAction The lexer action to execute after the actions\n// specified in {@code lexerActionExecutor}.\n//\n// @return A {@link LexerActionExecutor} for executing the combine actions\n// of {@code lexerActionExecutor} and {@code lexerAction}.\nLexerActionExecutor.append = function(lexerActionExecutor, lexerAction) {\n\tif (lexerActionExecutor === null) {\n\t\treturn new LexerActionExecutor([ lexerAction ]);\n\t}\n\tvar lexerActions = lexerActionExecutor.lexerActions.concat([ lexerAction ]);\n\treturn new LexerActionExecutor(lexerActions);\n};\n\n// Creates a {@link LexerActionExecutor} which encodes the current offset\n// for position-dependent lexer actions.\n//\n// <p>Normally, when the executor encounters lexer actions where\n// {@link LexerAction//isPositionDependent} returns {@code true}, it calls\n// {@link IntStream//seek} on the input {@link CharStream} to set the input\n// position to the <em>end</em> of the current token. This behavior provides\n// for efficient DFA representation of lexer actions which appear at the end\n// of a lexer rule, even when the lexer rule matches a variable number of\n// characters.</p>\n//\n// <p>Prior to traversing a match transition in the ATN, the current offset\n// from the token start index is assigned to all position-dependent lexer\n// actions which have not already been assigned a fixed offset. By storing\n// the offsets relative to the token start index, the DFA representation of\n// lexer actions which appear in the middle of tokens remains efficient due\n// to sharing among tokens of the same length, regardless of their absolute\n// position in the input stream.</p>\n//\n// <p>If the current executor already has offsets assigned to all\n// position-dependent lexer actions, the method returns {@code this}.</p>\n//\n// @param offset The current offset to assign to all position-dependent\n// lexer actions which do not already have offsets assigned.\n//\n// @return A {@link LexerActionExecutor} which stores input stream offsets\n// for all position-dependent lexer actions.\n// /\nLexerActionExecutor.prototype.fixOffsetBeforeMatch = function(offset) {\n\tvar updatedLexerActions = null;\n\tfor (var i = 0; i < this.lexerActions.length; i++) {\n\t\tif (this.lexerActions[i].isPositionDependent &&\n\t\t\t\t!(this.lexerActions[i] instanceof LexerIndexedCustomAction)) {\n\t\t\tif (updatedLexerActions === null) {\n\t\t\t\tupdatedLexerActions = this.lexerActions.concat([]);\n\t\t\t}\n\t\t\tupdatedLexerActions[i] = new LexerIndexedCustomAction(offset,\n\t\t\t\t\tthis.lexerActions[i]);\n\t\t}\n\t}\n\tif (updatedLexerActions === null) {\n\t\treturn this;\n\t} else {\n\t\treturn new LexerActionExecutor(updatedLexerActions);\n\t}\n};\n\n// Execute the actions encapsulated by this executor within the context of a\n// particular {@link Lexer}.\n//\n// <p>This method calls {@link IntStream//seek} to set the position of the\n// {@code input} {@link CharStream} prior to calling\n// {@link LexerAction//execute} on a position-dependent action. Before the\n// method returns, the input position will be restored to the same position\n// it was in when the method was invoked.</p>\n//\n// @param lexer The lexer instance.\n// @param input The input stream which is the source for the current token.\n// When this method is called, the current {@link IntStream//index} for\n// {@code input} should be the start of the following token, i.e. 1\n// character past the end of the current token.\n// @param startIndex The token start index. This value may be passed to\n// {@link IntStream//seek} to set the {@code input} position to the beginning\n// of the token.\n// /\nLexerActionExecutor.prototype.execute = function(lexer, input, startIndex) {\n\tvar requiresSeek = false;\n\tvar stopIndex = input.index;\n\ttry {\n\t\tfor (var i = 0; i < this.lexerActions.length; i++) {\n\t\t\tvar lexerAction = this.lexerActions[i];\n\t\t\tif (lexerAction instanceof LexerIndexedCustomAction) {\n\t\t\t\tvar offset = lexerAction.offset;\n\t\t\t\tinput.seek(startIndex + offset);\n\t\t\t\tlexerAction = lexerAction.action;\n\t\t\t\trequiresSeek = (startIndex + offset) !== stopIndex;\n\t\t\t} else if (lexerAction.isPositionDependent) {\n\t\t\t\tinput.seek(stopIndex);\n\t\t\t\trequiresSeek = false;\n\t\t\t}\n\t\t\tlexerAction.execute(lexer);\n\t\t}\n\t} finally {\n\t\tif (requiresSeek) {\n\t\t\tinput.seek(stopIndex);\n\t\t}\n\t}\n};\n\nLexerActionExecutor.prototype.hashCode = function() {\n\treturn this.cachedHashCode;\n};\n\nLexerActionExecutor.prototype.updateHashCode = function(hash) {\n    hash.update(this.cachedHashCode);\n};\n\n\nLexerActionExecutor.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof LexerActionExecutor)) {\n\t\treturn false;\n\t} else if (this.cachedHashCode != other.cachedHashCode) {\n\t\treturn false;\n\t} else if (this.lexerActions.length != other.lexerActions.length) {\n\t\treturn false;\n\t} else {\n\t\tvar numActions = this.lexerActions.length\n\t\tfor (var idx = 0; idx < numActions; ++idx) {\n\t\t\tif (!this.lexerActions[idx].equals(other.lexerActions[idx])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n};\n\nexports.LexerActionExecutor = LexerActionExecutor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/LexerActionExecutor.js\n// module id = /Z+8\n// module chunks = 0 1","/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index < 0 || index >= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tsize > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'codePointAt', {\n\t\t\t\t'value': codePointAt,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/polyfills/codepointat.js\n// module id = 13lD\n// module chunks = 0 1","exports.policyLexer = require('./gen/policyLexer').policyLexer;\r\nexports.policyParser = require('./gen/policyParser').policyParser;\r\nexports.policyListener = require('./gen/policyListener').policyListener\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/policy_lang/index.js\n// module id = 1sgP\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./Token').Token;\nvar ConsoleErrorListener = require('./error/ErrorListener').ConsoleErrorListener;\nvar ProxyErrorListener = require('./error/ErrorListener').ProxyErrorListener;\n\nfunction Recognizer() {\n    this._listeners = [ ConsoleErrorListener.INSTANCE ];\n    this._interp = null;\n    this._stateNumber = -1;\n    return this;\n}\n\nRecognizer.tokenTypeMapCache = {};\nRecognizer.ruleIndexMapCache = {};\n\n\nRecognizer.prototype.checkVersion = function(toolVersion) {\n    var runtimeVersion = \"4.7.1\";\n    if (runtimeVersion!==toolVersion) {\n        console.log(\"ANTLR runtime and generated code versions disagree: \"+runtimeVersion+\"!=\"+toolVersion);\n    }\n};\n\nRecognizer.prototype.addErrorListener = function(listener) {\n    this._listeners.push(listener);\n};\n\nRecognizer.prototype.removeErrorListeners = function() {\n    this._listeners = [];\n};\n\nRecognizer.prototype.getTokenTypeMap = function() {\n    var tokenNames = this.getTokenNames();\n    if (tokenNames===null) {\n        throw(\"The current recognizer does not provide a list of token names.\");\n    }\n    var result = this.tokenTypeMapCache[tokenNames];\n    if(result===undefined) {\n        result = tokenNames.reduce(function(o, k, i) { o[k] = i; });\n        result.EOF = Token.EOF;\n        this.tokenTypeMapCache[tokenNames] = result;\n    }\n    return result;\n};\n\n// Get a map from rule names to rule indexes.\n//\n// <p>Used for XPath and tree pattern compilation.</p>\n//\nRecognizer.prototype.getRuleIndexMap = function() {\n    var ruleNames = this.ruleNames;\n    if (ruleNames===null) {\n        throw(\"The current recognizer does not provide a list of rule names.\");\n    }\n    var result = this.ruleIndexMapCache[ruleNames];\n    if(result===undefined) {\n        result = ruleNames.reduce(function(o, k, i) { o[k] = i; });\n        this.ruleIndexMapCache[ruleNames] = result;\n    }\n    return result;\n};\n\nRecognizer.prototype.getTokenType = function(tokenName) {\n    var ttype = this.getTokenTypeMap()[tokenName];\n    if (ttype !==undefined) {\n        return ttype;\n    } else {\n        return Token.INVALID_TYPE;\n    }\n};\n\n\n// What is the error header, normally line/character position information?//\nRecognizer.prototype.getErrorHeader = function(e) {\n    var line = e.getOffendingToken().line;\n    var column = e.getOffendingToken().column;\n    return \"line \" + line + \":\" + column;\n};\n\n\n// How should a token be displayed in an error message? The default\n//  is to display just the text, but during development you might\n//  want to have a lot of information spit out.  Override in that case\n//  to use t.toString() (which, for CommonToken, dumps everything about\n//  the token). This is better than forcing you to override a method in\n//  your token objects because you don't have to go modify your lexer\n//  so that it creates a new Java type.\n//\n// @deprecated This method is not called by the ANTLR 4 Runtime. Specific\n// implementations of {@link ANTLRErrorStrategy} may provide a similar\n// feature when necessary. For example, see\n// {@link DefaultErrorStrategy//getTokenErrorDisplay}.\n//\nRecognizer.prototype.getTokenErrorDisplay = function(t) {\n    if (t===null) {\n        return \"<no token>\";\n    }\n    var s = t.text;\n    if (s===null) {\n        if (t.type===Token.EOF) {\n            s = \"<EOF>\";\n        } else {\n            s = \"<\" + t.type + \">\";\n        }\n    }\n    s = s.replace(\"\\n\",\"\\\\n\").replace(\"\\r\",\"\\\\r\").replace(\"\\t\",\"\\\\t\");\n    return \"'\" + s + \"'\";\n};\n\nRecognizer.prototype.getErrorListenerDispatch = function() {\n    return new ProxyErrorListener(this._listeners);\n};\n\n// subclass needs to override these if there are sempreds or actions\n// that the ATN interp needs to execute\nRecognizer.prototype.sempred = function(localctx, ruleIndex, actionIndex) {\n    return true;\n};\n\nRecognizer.prototype.precpred = function(localctx , precedence) {\n    return true;\n};\n\n//Indicate that the recognizer has changed internal state that is\n//consistent with the ATN state passed in.  This way we always know\n//where we are in the ATN as the parser goes along. The rule\n//context objects form a stack that lets us see the stack of\n//invoking rules. Combine this and we have complete ATN\n//configuration information.\n\nObject.defineProperty(Recognizer.prototype, \"state\", {\n\tget : function() {\n\t\treturn this._stateNumber;\n\t},\n\tset : function(state) {\n\t\tthis._stateNumber = state;\n\t}\n});\n\n\nexports.Recognizer = Recognizer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/Recognizer.js\n// module id = 2EdO\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Token = require('./../Token').Token;\nvar ATN = require('./ATN').ATN;\nvar ATNType = require('./ATNType').ATNType;\nvar ATNStates = require('./ATNState');\nvar ATNState = ATNStates.ATNState;\nvar BasicState = ATNStates.BasicState;\nvar DecisionState = ATNStates.DecisionState;\nvar BlockStartState = ATNStates.BlockStartState;\nvar BlockEndState = ATNStates.BlockEndState;\nvar LoopEndState = ATNStates.LoopEndState;\nvar RuleStartState = ATNStates.RuleStartState;\nvar RuleStopState = ATNStates.RuleStopState;\nvar TokensStartState = ATNStates.TokensStartState;\nvar PlusLoopbackState = ATNStates.PlusLoopbackState;\nvar StarLoopbackState = ATNStates.StarLoopbackState;\nvar StarLoopEntryState = ATNStates.StarLoopEntryState;\nvar PlusBlockStartState = ATNStates.PlusBlockStartState;\nvar StarBlockStartState = ATNStates.StarBlockStartState;\nvar BasicBlockStartState = ATNStates.BasicBlockStartState;\nvar Transitions = require('./Transition');\nvar Transition = Transitions.Transition;\nvar AtomTransition = Transitions.AtomTransition;\nvar SetTransition = Transitions.SetTransition;\nvar NotSetTransition = Transitions.NotSetTransition;\nvar RuleTransition = Transitions.RuleTransition;\nvar RangeTransition = Transitions.RangeTransition;\nvar ActionTransition = Transitions.ActionTransition;\nvar EpsilonTransition = Transitions.EpsilonTransition;\nvar WildcardTransition = Transitions.WildcardTransition;\nvar PredicateTransition = Transitions.PredicateTransition;\nvar PrecedencePredicateTransition = Transitions.PrecedencePredicateTransition;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\nvar Interval = require('./../IntervalSet').Interval;\nvar ATNDeserializationOptions = require('./ATNDeserializationOptions').ATNDeserializationOptions;\nvar LexerActions = require('./LexerAction');\nvar LexerActionType = LexerActions.LexerActionType;\nvar LexerSkipAction = LexerActions.LexerSkipAction;\nvar LexerChannelAction = LexerActions.LexerChannelAction;\nvar LexerCustomAction = LexerActions.LexerCustomAction;\nvar LexerMoreAction = LexerActions.LexerMoreAction;\nvar LexerTypeAction = LexerActions.LexerTypeAction;\nvar LexerPushModeAction = LexerActions.LexerPushModeAction;\nvar LexerPopModeAction = LexerActions.LexerPopModeAction;\nvar LexerModeAction = LexerActions.LexerModeAction;\n// This is the earliest supported serialized UUID.\n// stick to serialized version for now, we don't need a UUID instance\nvar BASE_SERIALIZED_UUID = \"AADB8D7E-AEEF-4415-AD2B-8204D6CF042E\";\n\n//\n// This UUID indicates the serialized ATN contains two sets of\n// IntervalSets, where the second set's values are encoded as\n// 32-bit integers to support the full Unicode SMP range up to U+10FFFF.\n//\nvar ADDED_UNICODE_SMP = \"59627784-3BE5-417A-B9EB-8131A7286089\";\n\n// This list contains all of the currently supported UUIDs, ordered by when\n// the feature first appeared in this branch.\nvar SUPPORTED_UUIDS = [ BASE_SERIALIZED_UUID, ADDED_UNICODE_SMP ];\n\nvar SERIALIZED_VERSION = 3;\n\n// This is the current serialized UUID.\nvar SERIALIZED_UUID = ADDED_UNICODE_SMP;\n\nfunction initArray( length, value) {\n\tvar tmp = [];\n\ttmp[length-1] = value;\n\treturn tmp.map(function(i) {return value;});\n}\n\nfunction ATNDeserializer (options) {\n\n    if ( options=== undefined || options === null ) {\n        options = ATNDeserializationOptions.defaultOptions;\n    }\n    this.deserializationOptions = options;\n    this.stateFactories = null;\n    this.actionFactories = null;\n\n    return this;\n}\n\n// Determines if a particular serialized representation of an ATN supports\n// a particular feature, identified by the {@link UUID} used for serializing\n// the ATN at the time the feature was first introduced.\n//\n// @param feature The {@link UUID} marking the first time the feature was\n// supported in the serialized ATN.\n// @param actualUuid The {@link UUID} of the actual serialized ATN which is\n// currently being deserialized.\n// @return {@code true} if the {@code actualUuid} value represents a\n// serialized ATN at or after the feature identified by {@code feature} was\n// introduced; otherwise, {@code false}.\n\nATNDeserializer.prototype.isFeatureSupported = function(feature, actualUuid) {\n    var idx1 = SUPPORTED_UUIDS.indexOf(feature);\n    if (idx1<0) {\n        return false;\n    }\n    var idx2 = SUPPORTED_UUIDS.indexOf(actualUuid);\n    return idx2 >= idx1;\n};\n\nATNDeserializer.prototype.deserialize = function(data) {\n    this.reset(data);\n    this.checkVersion();\n    this.checkUUID();\n    var atn = this.readATN();\n    this.readStates(atn);\n    this.readRules(atn);\n    this.readModes(atn);\n    var sets = [];\n    // First, deserialize sets with 16-bit arguments <= U+FFFF.\n    this.readSets(atn, sets, this.readInt.bind(this));\n    // Next, if the ATN was serialized with the Unicode SMP feature,\n    // deserialize sets with 32-bit arguments <= U+10FFFF.\n    if (this.isFeatureSupported(ADDED_UNICODE_SMP, this.uuid)) {\n        this.readSets(atn, sets, this.readInt32.bind(this));\n    }\n    this.readEdges(atn, sets);\n    this.readDecisions(atn);\n    this.readLexerActions(atn);\n    this.markPrecedenceDecisions(atn);\n    this.verifyATN(atn);\n    if (this.deserializationOptions.generateRuleBypassTransitions && atn.grammarType === ATNType.PARSER ) {\n        this.generateRuleBypassTransitions(atn);\n        // re-verify after modification\n        this.verifyATN(atn);\n    }\n    return atn;\n};\n\nATNDeserializer.prototype.reset = function(data) {\n\tvar adjust = function(c) {\n        var v = c.charCodeAt(0);\n        return v>1  ? v-2 : v + 65533;\n\t};\n    var temp = data.split(\"\").map(adjust);\n    // don't adjust the first value since that's the version number\n    temp[0] = data.charCodeAt(0);\n    this.data = temp;\n    this.pos = 0;\n};\n\nATNDeserializer.prototype.checkVersion = function() {\n    var version = this.readInt();\n    if ( version !== SERIALIZED_VERSION ) {\n        throw (\"Could not deserialize ATN with version \" + version + \" (expected \" + SERIALIZED_VERSION + \").\");\n    }\n};\n\nATNDeserializer.prototype.checkUUID = function() {\n    var uuid = this.readUUID();\n    if (SUPPORTED_UUIDS.indexOf(uuid)<0) {\n        throw (\"Could not deserialize ATN with UUID: \" + uuid +\n                        \" (expected \" + SERIALIZED_UUID + \" or a legacy UUID).\", uuid, SERIALIZED_UUID);\n    }\n    this.uuid = uuid;\n};\n\nATNDeserializer.prototype.readATN = function() {\n    var grammarType = this.readInt();\n    var maxTokenType = this.readInt();\n    return new ATN(grammarType, maxTokenType);\n};\n\nATNDeserializer.prototype.readStates = function(atn) {\n\tvar j, pair, stateNumber;\n    var loopBackStateNumbers = [];\n    var endStateNumbers = [];\n    var nstates = this.readInt();\n    for(var i=0; i<nstates; i++) {\n        var stype = this.readInt();\n        // ignore bad type of states\n        if (stype===ATNState.INVALID_TYPE) {\n            atn.addState(null);\n            continue;\n        }\n        var ruleIndex = this.readInt();\n        if (ruleIndex === 0xFFFF) {\n            ruleIndex = -1;\n        }\n        var s = this.stateFactory(stype, ruleIndex);\n        if (stype === ATNState.LOOP_END) { // special case\n            var loopBackStateNumber = this.readInt();\n            loopBackStateNumbers.push([s, loopBackStateNumber]);\n        } else if(s instanceof BlockStartState) {\n            var endStateNumber = this.readInt();\n            endStateNumbers.push([s, endStateNumber]);\n        }\n        atn.addState(s);\n    }\n    // delay the assignment of loop back and end states until we know all the\n\t// state instances have been initialized\n    for (j=0; j<loopBackStateNumbers.length; j++) {\n        pair = loopBackStateNumbers[j];\n        pair[0].loopBackState = atn.states[pair[1]];\n    }\n\n    for (j=0; j<endStateNumbers.length; j++) {\n        pair = endStateNumbers[j];\n        pair[0].endState = atn.states[pair[1]];\n    }\n\n    var numNonGreedyStates = this.readInt();\n    for (j=0; j<numNonGreedyStates; j++) {\n        stateNumber = this.readInt();\n        atn.states[stateNumber].nonGreedy = true;\n    }\n\n    var numPrecedenceStates = this.readInt();\n    for (j=0; j<numPrecedenceStates; j++) {\n        stateNumber = this.readInt();\n        atn.states[stateNumber].isPrecedenceRule = true;\n    }\n};\n\nATNDeserializer.prototype.readRules = function(atn) {\n    var i;\n    var nrules = this.readInt();\n    if (atn.grammarType === ATNType.LEXER ) {\n        atn.ruleToTokenType = initArray(nrules, 0);\n    }\n    atn.ruleToStartState = initArray(nrules, 0);\n    for (i=0; i<nrules; i++) {\n        var s = this.readInt();\n        var startState = atn.states[s];\n        atn.ruleToStartState[i] = startState;\n        if ( atn.grammarType === ATNType.LEXER ) {\n            var tokenType = this.readInt();\n            if (tokenType === 0xFFFF) {\n                tokenType = Token.EOF;\n            }\n            atn.ruleToTokenType[i] = tokenType;\n        }\n    }\n    atn.ruleToStopState = initArray(nrules, 0);\n    for (i=0; i<atn.states.length; i++) {\n        var state = atn.states[i];\n        if (!(state instanceof RuleStopState)) {\n            continue;\n        }\n        atn.ruleToStopState[state.ruleIndex] = state;\n        atn.ruleToStartState[state.ruleIndex].stopState = state;\n    }\n};\n\nATNDeserializer.prototype.readModes = function(atn) {\n    var nmodes = this.readInt();\n    for (var i=0; i<nmodes; i++) {\n        var s = this.readInt();\n        atn.modeToStartState.push(atn.states[s]);\n    }\n};\n\nATNDeserializer.prototype.readSets = function(atn, sets, readUnicode) {\n    var m = this.readInt();\n    for (var i=0; i<m; i++) {\n        var iset = new IntervalSet();\n        sets.push(iset);\n        var n = this.readInt();\n        var containsEof = this.readInt();\n        if (containsEof!==0) {\n            iset.addOne(-1);\n        }\n        for (var j=0; j<n; j++) {\n            var i1 = readUnicode();\n            var i2 = readUnicode();\n            iset.addRange(i1, i2);\n        }\n    }\n};\n\nATNDeserializer.prototype.readEdges = function(atn, sets) {\n\tvar i, j, state, trans, target;\n    var nedges = this.readInt();\n    for (i=0; i<nedges; i++) {\n        var src = this.readInt();\n        var trg = this.readInt();\n        var ttype = this.readInt();\n        var arg1 = this.readInt();\n        var arg2 = this.readInt();\n        var arg3 = this.readInt();\n        trans = this.edgeFactory(atn, ttype, src, trg, arg1, arg2, arg3, sets);\n        var srcState = atn.states[src];\n        srcState.addTransition(trans);\n    }\n    // edges for rule stop states can be derived, so they aren't serialized\n    for (i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        for (j=0; j<state.transitions.length; j++) {\n            var t = state.transitions[j];\n            if (!(t instanceof RuleTransition)) {\n                continue;\n            }\n\t\t\tvar outermostPrecedenceReturn = -1;\n\t\t\tif (atn.ruleToStartState[t.target.ruleIndex].isPrecedenceRule) {\n\t\t\t\tif (t.precedence === 0) {\n\t\t\t\t\toutermostPrecedenceReturn = t.target.ruleIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttrans = new EpsilonTransition(t.followState, outermostPrecedenceReturn);\n            atn.ruleToStopState[t.target.ruleIndex].addTransition(trans);\n        }\n    }\n\n    for (i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        if (state instanceof BlockStartState) {\n            // we need to know the end state to set its start state\n            if (state.endState === null) {\n                throw (\"IllegalState\");\n            }\n            // block end states can only be associated to a single block start\n\t\t\t// state\n            if ( state.endState.startState !== null) {\n                throw (\"IllegalState\");\n            }\n            state.endState.startState = state;\n        }\n        if (state instanceof PlusLoopbackState) {\n            for (j=0; j<state.transitions.length; j++) {\n                target = state.transitions[j].target;\n                if (target instanceof PlusBlockStartState) {\n                    target.loopBackState = state;\n                }\n            }\n        } else if (state instanceof StarLoopbackState) {\n            for (j=0; j<state.transitions.length; j++) {\n                target = state.transitions[j].target;\n                if (target instanceof StarLoopEntryState) {\n                    target.loopBackState = state;\n                }\n            }\n        }\n    }\n};\n\nATNDeserializer.prototype.readDecisions = function(atn) {\n    var ndecisions = this.readInt();\n    for (var i=0; i<ndecisions; i++) {\n        var s = this.readInt();\n        var decState = atn.states[s];\n        atn.decisionToState.push(decState);\n        decState.decision = i;\n    }\n};\n\nATNDeserializer.prototype.readLexerActions = function(atn) {\n    if (atn.grammarType === ATNType.LEXER) {\n        var count = this.readInt();\n        atn.lexerActions = initArray(count, null);\n        for (var i=0; i<count; i++) {\n            var actionType = this.readInt();\n            var data1 = this.readInt();\n            if (data1 === 0xFFFF) {\n                data1 = -1;\n            }\n            var data2 = this.readInt();\n            if (data2 === 0xFFFF) {\n                data2 = -1;\n            }\n            var lexerAction = this.lexerActionFactory(actionType, data1, data2);\n            atn.lexerActions[i] = lexerAction;\n        }\n    }\n};\n\nATNDeserializer.prototype.generateRuleBypassTransitions = function(atn) {\n\tvar i;\n    var count = atn.ruleToStartState.length;\n    for(i=0; i<count; i++) {\n        atn.ruleToTokenType[i] = atn.maxTokenType + i + 1;\n    }\n    for(i=0; i<count; i++) {\n        this.generateRuleBypassTransition(atn, i);\n    }\n};\n\nATNDeserializer.prototype.generateRuleBypassTransition = function(atn, idx) {\n\tvar i, state;\n    var bypassStart = new BasicBlockStartState();\n    bypassStart.ruleIndex = idx;\n    atn.addState(bypassStart);\n\n    var bypassStop = new BlockEndState();\n    bypassStop.ruleIndex = idx;\n    atn.addState(bypassStop);\n\n    bypassStart.endState = bypassStop;\n    atn.defineDecisionState(bypassStart);\n\n    bypassStop.startState = bypassStart;\n\n    var excludeTransition = null;\n    var endState = null;\n\n    if (atn.ruleToStartState[idx].isPrecedenceRule) {\n        // wrap from the beginning of the rule to the StarLoopEntryState\n        endState = null;\n        for(i=0; i<atn.states.length; i++) {\n            state = atn.states[i];\n            if (this.stateIsEndStateFor(state, idx)) {\n                endState = state;\n                excludeTransition = state.loopBackState.transitions[0];\n                break;\n            }\n        }\n        if (excludeTransition === null) {\n            throw (\"Couldn't identify final state of the precedence rule prefix section.\");\n        }\n    } else {\n        endState = atn.ruleToStopState[idx];\n    }\n\n    // all non-excluded transitions that currently target end state need to\n\t// target blockEnd instead\n    for(i=0; i<atn.states.length; i++) {\n        state = atn.states[i];\n        for(var j=0; j<state.transitions.length; j++) {\n            var transition = state.transitions[j];\n            if (transition === excludeTransition) {\n                continue;\n            }\n            if (transition.target === endState) {\n                transition.target = bypassStop;\n            }\n        }\n    }\n\n    // all transitions leaving the rule start state need to leave blockStart\n\t// instead\n    var ruleToStartState = atn.ruleToStartState[idx];\n    var count = ruleToStartState.transitions.length;\n    while ( count > 0) {\n        bypassStart.addTransition(ruleToStartState.transitions[count-1]);\n        ruleToStartState.transitions = ruleToStartState.transitions.slice(-1);\n    }\n    // link the new states\n    atn.ruleToStartState[idx].addTransition(new EpsilonTransition(bypassStart));\n    bypassStop.addTransition(new EpsilonTransition(endState));\n\n    var matchState = new BasicState();\n    atn.addState(matchState);\n    matchState.addTransition(new AtomTransition(bypassStop, atn.ruleToTokenType[idx]));\n    bypassStart.addTransition(new EpsilonTransition(matchState));\n};\n\nATNDeserializer.prototype.stateIsEndStateFor = function(state, idx) {\n    if ( state.ruleIndex !== idx) {\n        return null;\n    }\n    if (!( state instanceof StarLoopEntryState)) {\n        return null;\n    }\n    var maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n    if (!( maybeLoopEndState instanceof LoopEndState)) {\n        return null;\n    }\n    if (maybeLoopEndState.epsilonOnlyTransitions &&\n        (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n        return state;\n    } else {\n        return null;\n    }\n};\n\n//\n// Analyze the {@link StarLoopEntryState} states in the specified ATN to set\n// the {@link StarLoopEntryState//isPrecedenceDecision} field to the\n// correct value.\n//\n// @param atn The ATN.\n//\nATNDeserializer.prototype.markPrecedenceDecisions = function(atn) {\n\tfor(var i=0; i<atn.states.length; i++) {\n\t\tvar state = atn.states[i];\n\t\tif (!( state instanceof StarLoopEntryState)) {\n            continue;\n        }\n        // We analyze the ATN to determine if this ATN decision state is the\n        // decision for the closure block that determines whether a\n        // precedence rule should continue or complete.\n        //\n        if ( atn.ruleToStartState[state.ruleIndex].isPrecedenceRule) {\n            var maybeLoopEndState = state.transitions[state.transitions.length - 1].target;\n            if (maybeLoopEndState instanceof LoopEndState) {\n                if ( maybeLoopEndState.epsilonOnlyTransitions &&\n                        (maybeLoopEndState.transitions[0].target instanceof RuleStopState)) {\n                    state.isPrecedenceDecision = true;\n                }\n            }\n        }\n\t}\n};\n\nATNDeserializer.prototype.verifyATN = function(atn) {\n    if (!this.deserializationOptions.verifyATN) {\n        return;\n    }\n    // verify assumptions\n\tfor(var i=0; i<atn.states.length; i++) {\n        var state = atn.states[i];\n        if (state === null) {\n            continue;\n        }\n        this.checkCondition(state.epsilonOnlyTransitions || state.transitions.length <= 1);\n        if (state instanceof PlusBlockStartState) {\n            this.checkCondition(state.loopBackState !== null);\n        } else  if (state instanceof StarLoopEntryState) {\n            this.checkCondition(state.loopBackState !== null);\n            this.checkCondition(state.transitions.length === 2);\n            if (state.transitions[0].target instanceof StarBlockStartState) {\n                this.checkCondition(state.transitions[1].target instanceof LoopEndState);\n                this.checkCondition(!state.nonGreedy);\n            } else if (state.transitions[0].target instanceof LoopEndState) {\n                this.checkCondition(state.transitions[1].target instanceof StarBlockStartState);\n                this.checkCondition(state.nonGreedy);\n            } else {\n                throw(\"IllegalState\");\n            }\n        } else if (state instanceof StarLoopbackState) {\n            this.checkCondition(state.transitions.length === 1);\n            this.checkCondition(state.transitions[0].target instanceof StarLoopEntryState);\n        } else if (state instanceof LoopEndState) {\n            this.checkCondition(state.loopBackState !== null);\n        } else if (state instanceof RuleStartState) {\n            this.checkCondition(state.stopState !== null);\n        } else if (state instanceof BlockStartState) {\n            this.checkCondition(state.endState !== null);\n        } else if (state instanceof BlockEndState) {\n            this.checkCondition(state.startState !== null);\n        } else if (state instanceof DecisionState) {\n            this.checkCondition(state.transitions.length <= 1 || state.decision >= 0);\n        } else {\n            this.checkCondition(state.transitions.length <= 1 || (state instanceof RuleStopState));\n        }\n\t}\n};\n\nATNDeserializer.prototype.checkCondition = function(condition, message) {\n    if (!condition) {\n        if (message === undefined || message===null) {\n            message = \"IllegalState\";\n        }\n        throw (message);\n    }\n};\n\nATNDeserializer.prototype.readInt = function() {\n    return this.data[this.pos++];\n};\n\nATNDeserializer.prototype.readInt32 = function() {\n    var low = this.readInt();\n    var high = this.readInt();\n    return low | (high << 16);\n};\n\nATNDeserializer.prototype.readLong = function() {\n    var low = this.readInt32();\n    var high = this.readInt32();\n    return (low & 0x00000000FFFFFFFF) | (high << 32);\n};\n\nfunction createByteToHex() {\n\tvar bth = [];\n\tfor (var i = 0; i < 256; i++) {\n\t\tbth[i] = (i + 0x100).toString(16).substr(1).toUpperCase();\n\t}\n\treturn bth;\n}\n\nvar byteToHex = createByteToHex();\n\nATNDeserializer.prototype.readUUID = function() {\n\tvar bb = [];\n\tfor(var i=7;i>=0;i--) {\n\t\tvar int = this.readInt();\n\t\t/* jshint bitwise: false */\n\t\tbb[(2*i)+1] = int & 0xFF;\n\t\tbb[2*i] = (int >> 8) & 0xFF;\n\t}\n    return byteToHex[bb[0]] + byteToHex[bb[1]] +\n    byteToHex[bb[2]] + byteToHex[bb[3]] + '-' +\n    byteToHex[bb[4]] + byteToHex[bb[5]] + '-' +\n    byteToHex[bb[6]] + byteToHex[bb[7]] + '-' +\n    byteToHex[bb[8]] + byteToHex[bb[9]] + '-' +\n    byteToHex[bb[10]] + byteToHex[bb[11]] +\n    byteToHex[bb[12]] + byteToHex[bb[13]] +\n    byteToHex[bb[14]] + byteToHex[bb[15]];\n};\n\nATNDeserializer.prototype.edgeFactory = function(atn, type, src, trg, arg1, arg2, arg3, sets) {\n    var target = atn.states[trg];\n    switch(type) {\n    case Transition.EPSILON:\n        return new EpsilonTransition(target);\n    case Transition.RANGE:\n        return arg3 !== 0 ? new RangeTransition(target, Token.EOF, arg2) : new RangeTransition(target, arg1, arg2);\n    case Transition.RULE:\n        return new RuleTransition(atn.states[arg1], arg2, arg3, target);\n    case Transition.PREDICATE:\n        return new PredicateTransition(target, arg1, arg2, arg3 !== 0);\n    case Transition.PRECEDENCE:\n        return new PrecedencePredicateTransition(target, arg1);\n    case Transition.ATOM:\n        return arg3 !== 0 ? new AtomTransition(target, Token.EOF) : new AtomTransition(target, arg1);\n    case Transition.ACTION:\n        return new ActionTransition(target, arg1, arg2, arg3 !== 0);\n    case Transition.SET:\n        return new SetTransition(target, sets[arg1]);\n    case Transition.NOT_SET:\n        return new NotSetTransition(target, sets[arg1]);\n    case Transition.WILDCARD:\n        return new WildcardTransition(target);\n    default:\n        throw \"The specified transition type: \" + type + \" is not valid.\";\n    }\n};\n\nATNDeserializer.prototype.stateFactory = function(type, ruleIndex) {\n    if (this.stateFactories === null) {\n        var sf = [];\n        sf[ATNState.INVALID_TYPE] = null;\n        sf[ATNState.BASIC] = function() { return new BasicState(); };\n        sf[ATNState.RULE_START] = function() { return new RuleStartState(); };\n        sf[ATNState.BLOCK_START] = function() { return new BasicBlockStartState(); };\n        sf[ATNState.PLUS_BLOCK_START] = function() { return new PlusBlockStartState(); };\n        sf[ATNState.STAR_BLOCK_START] = function() { return new StarBlockStartState(); };\n        sf[ATNState.TOKEN_START] = function() { return new TokensStartState(); };\n        sf[ATNState.RULE_STOP] = function() { return new RuleStopState(); };\n        sf[ATNState.BLOCK_END] = function() { return new BlockEndState(); };\n        sf[ATNState.STAR_LOOP_BACK] = function() { return new StarLoopbackState(); };\n        sf[ATNState.STAR_LOOP_ENTRY] = function() { return new StarLoopEntryState(); };\n        sf[ATNState.PLUS_LOOP_BACK] = function() { return new PlusLoopbackState(); };\n        sf[ATNState.LOOP_END] = function() { return new LoopEndState(); };\n        this.stateFactories = sf;\n    }\n    if (type>this.stateFactories.length || this.stateFactories[type] === null) {\n        throw(\"The specified state type \" + type + \" is not valid.\");\n    } else {\n        var s = this.stateFactories[type]();\n        if (s!==null) {\n            s.ruleIndex = ruleIndex;\n            return s;\n        }\n    }\n};\n\nATNDeserializer.prototype.lexerActionFactory = function(type, data1, data2) {\n    if (this.actionFactories === null) {\n        var af = [];\n        af[LexerActionType.CHANNEL] = function(data1, data2) { return new LexerChannelAction(data1); };\n        af[LexerActionType.CUSTOM] = function(data1, data2) { return new LexerCustomAction(data1, data2); };\n        af[LexerActionType.MODE] = function(data1, data2) { return new LexerModeAction(data1); };\n        af[LexerActionType.MORE] = function(data1, data2) { return LexerMoreAction.INSTANCE; };\n        af[LexerActionType.POP_MODE] = function(data1, data2) { return LexerPopModeAction.INSTANCE; };\n        af[LexerActionType.PUSH_MODE] = function(data1, data2) { return new LexerPushModeAction(data1); };\n        af[LexerActionType.SKIP] = function(data1, data2) { return LexerSkipAction.INSTANCE; };\n        af[LexerActionType.TYPE] = function(data1, data2) { return new LexerTypeAction(data1); };\n        this.actionFactories = af;\n    }\n    if (type>this.actionFactories.length || this.actionFactories[type] === null) {\n        throw(\"The specified lexer action type \" + type + \" is not valid.\");\n    } else {\n        return this.actionFactories[type](data1, data2);\n    }\n};\n\n\nexports.ATNDeserializer = ATNDeserializer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNDeserializer.js\n// module id = 3Rtt\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./Token').Token;\nrequire('./polyfills/codepointat');\nrequire('./polyfills/fromcodepoint');\n\n// Vacuum all input from a string and then treat it like a buffer.\n\nfunction _loadString(stream, decodeToUnicodeCodePoints) {\n\tstream._index = 0;\n\tstream.data = [];\n\tif (stream.decodeToUnicodeCodePoints) {\n\t\tfor (var i = 0; i < stream.strdata.length; ) {\n\t\t\tvar codePoint = stream.strdata.codePointAt(i);\n\t\t\tstream.data.push(codePoint);\n\t\t\ti += codePoint <= 0xFFFF ? 1 : 2;\n\t\t}\n\t} else {\n\t\tfor (var i = 0; i < stream.strdata.length; i++) {\n\t\t\tvar codeUnit = stream.strdata.charCodeAt(i);\n\t\t\tstream.data.push(codeUnit);\n\t\t}\n\t}\n\tstream._size = stream.data.length;\n}\n\n// If decodeToUnicodeCodePoints is true, the input is treated\n// as a series of Unicode code points.\n//\n// Otherwise, the input is treated as a series of 16-bit UTF-16 code\n// units.\nfunction InputStream(data, decodeToUnicodeCodePoints) {\n\tthis.name = \"<empty>\";\n\tthis.strdata = data;\n\tthis.decodeToUnicodeCodePoints = decodeToUnicodeCodePoints || false;\n\t_loadString(this);\n\treturn this;\n}\n\nObject.defineProperty(InputStream.prototype, \"index\", {\n\tget : function() {\n\t\treturn this._index;\n\t}\n});\n\nObject.defineProperty(InputStream.prototype, \"size\", {\n\tget : function() {\n\t\treturn this._size;\n\t}\n});\n\n// Reset the stream so that it's in the same state it was\n// when the object was created *except* the data array is not\n// touched.\n//\nInputStream.prototype.reset = function() {\n\tthis._index = 0;\n};\n\nInputStream.prototype.consume = function() {\n\tif (this._index >= this._size) {\n\t\t// assert this.LA(1) == Token.EOF\n\t\tthrow (\"cannot consume EOF\");\n\t}\n\tthis._index += 1;\n};\n\nInputStream.prototype.LA = function(offset) {\n\tif (offset === 0) {\n\t\treturn 0; // undefined\n\t}\n\tif (offset < 0) {\n\t\toffset += 1; // e.g., translate LA(-1) to use offset=0\n\t}\n\tvar pos = this._index + offset - 1;\n\tif (pos < 0 || pos >= this._size) { // invalid\n\t\treturn Token.EOF;\n\t}\n\treturn this.data[pos];\n};\n\nInputStream.prototype.LT = function(offset) {\n\treturn this.LA(offset);\n};\n\n// mark/release do nothing; we have entire buffer\nInputStream.prototype.mark = function() {\n\treturn -1;\n};\n\nInputStream.prototype.release = function(marker) {\n};\n\n// consume() ahead until p==_index; can't just set p=_index as we must\n// update line and column. If we seek backwards, just set p\n//\nInputStream.prototype.seek = function(_index) {\n\tif (_index <= this._index) {\n\t\tthis._index = _index; // just jump; don't update stream state (line,\n\t\t\t\t\t\t\t\t// ...)\n\t\treturn;\n\t}\n\t// seek forward\n\tthis._index = Math.min(_index, this._size);\n};\n\nInputStream.prototype.getText = function(start, stop) {\n\tif (stop >= this._size) {\n\t\tstop = this._size - 1;\n\t}\n\tif (start >= this._size) {\n\t\treturn \"\";\n\t} else {\n\t\tif (this.decodeToUnicodeCodePoints) {\n\t\t\tvar result = \"\";\n\t\t\tfor (var i = start; i <= stop; i++) {\n\t\t\t\tresult += String.fromCodePoint(this.data[i]);\n\t\t\t}\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn this.strdata.slice(start, stop + 1);\n\t\t}\n\t}\n};\n\nInputStream.prototype.toString = function() {\n\treturn this.strdata;\n};\n\nexports.InputStream = InputStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/InputStream.js\n// module id = 4iSB\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// The root of the ANTLR exception hierarchy. In general, ANTLR tracks just\n//  3 kinds of errors: prediction errors, failed predicate errors, and\n//  mismatched input errors. In each case, the parser knows where it is\n//  in the input, where it is in the ATN, the rule invocation stack,\n//  and what kind of problem occurred.\n\nvar PredicateTransition = require('./../atn/Transition').PredicateTransition;\n\nfunction RecognitionException(params) {\n\tError.call(this);\n\tif (!!Error.captureStackTrace) {\n        Error.captureStackTrace(this, RecognitionException);\n\t} else {\n\t\tvar stack = new Error().stack;\n\t}\n\tthis.message = params.message;\n    this.recognizer = params.recognizer;\n    this.input = params.input;\n    this.ctx = params.ctx;\n    // The current {@link Token} when an error occurred. Since not all streams\n    // support accessing symbols by index, we have to track the {@link Token}\n    // instance itself.\n    this.offendingToken = null;\n    // Get the ATN state number the parser was in at the time the error\n    // occurred. For {@link NoViableAltException} and\n    // {@link LexerNoViableAltException} exceptions, this is the\n    // {@link DecisionState} number. For others, it is the state whose outgoing\n    // edge we couldn't match.\n    this.offendingState = -1;\n    if (this.recognizer!==null) {\n        this.offendingState = this.recognizer.state;\n    }\n    return this;\n}\n\nRecognitionException.prototype = Object.create(Error.prototype);\nRecognitionException.prototype.constructor = RecognitionException;\n\n// <p>If the state number is not known, this method returns -1.</p>\n\n//\n// Gets the set of input symbols which could potentially follow the\n// previously matched symbol at the time this exception was thrown.\n//\n// <p>If the set of expected tokens is not known and could not be computed,\n// this method returns {@code null}.</p>\n//\n// @return The set of token types that could potentially follow the current\n// state in the ATN, or {@code null} if the information is not available.\n// /\nRecognitionException.prototype.getExpectedTokens = function() {\n    if (this.recognizer!==null) {\n        return this.recognizer.atn.getExpectedTokens(this.offendingState, this.ctx);\n    } else {\n        return null;\n    }\n};\n\nRecognitionException.prototype.toString = function() {\n    return this.message;\n};\n\nfunction LexerNoViableAltException(lexer, input, startIndex, deadEndConfigs) {\n\tRecognitionException.call(this, {message:\"\", recognizer:lexer, input:input, ctx:null});\n    this.startIndex = startIndex;\n    this.deadEndConfigs = deadEndConfigs;\n    return this;\n}\n\nLexerNoViableAltException.prototype = Object.create(RecognitionException.prototype);\nLexerNoViableAltException.prototype.constructor = LexerNoViableAltException;\n\nLexerNoViableAltException.prototype.toString = function() {\n    var symbol = \"\";\n    if (this.startIndex >= 0 && this.startIndex < this.input.size) {\n        symbol = this.input.getText((this.startIndex,this.startIndex));\n    }\n    return \"LexerNoViableAltException\" + symbol;\n};\n\n// Indicates that the parser could not decide which of two or more paths\n// to take based upon the remaining input. It tracks the starting token\n// of the offending input and also knows where the parser was\n// in the various paths when the error. Reported by reportNoViableAlternative()\n//\nfunction NoViableAltException(recognizer, input, startToken, offendingToken, deadEndConfigs, ctx) {\n\tctx = ctx || recognizer._ctx;\n\toffendingToken = offendingToken || recognizer.getCurrentToken();\n\tstartToken = startToken || recognizer.getCurrentToken();\n\tinput = input || recognizer.getInputStream();\n\tRecognitionException.call(this, {message:\"\", recognizer:recognizer, input:input, ctx:ctx});\n    // Which configurations did we try at input.index() that couldn't match\n\t// input.LT(1)?//\n    this.deadEndConfigs = deadEndConfigs;\n    // The token object at the start index; the input stream might\n    // not be buffering tokens so get a reference to it. (At the\n    // time the error occurred, of course the stream needs to keep a\n    // buffer all of the tokens but later we might not have access to those.)\n    this.startToken = startToken;\n    this.offendingToken = offendingToken;\n}\n\nNoViableAltException.prototype = Object.create(RecognitionException.prototype);\nNoViableAltException.prototype.constructor = NoViableAltException;\n\n// This signifies any kind of mismatched input exceptions such as\n// when the current input does not match the expected token.\n//\nfunction InputMismatchException(recognizer) {\n\tRecognitionException.call(this, {message:\"\", recognizer:recognizer, input:recognizer.getInputStream(), ctx:recognizer._ctx});\n    this.offendingToken = recognizer.getCurrentToken();\n}\n\nInputMismatchException.prototype = Object.create(RecognitionException.prototype);\nInputMismatchException.prototype.constructor = InputMismatchException;\n\n// A semantic predicate failed during validation. Validation of predicates\n// occurs when normally parsing the alternative just like matching a token.\n// Disambiguating predicate evaluation occurs when we test a predicate during\n// prediction.\n\nfunction FailedPredicateException(recognizer, predicate, message) {\n\tRecognitionException.call(this, {message:this.formatMessage(predicate,message || null), recognizer:recognizer,\n                         input:recognizer.getInputStream(), ctx:recognizer._ctx});\n    var s = recognizer._interp.atn.states[recognizer.state];\n    var trans = s.transitions[0];\n    if (trans instanceof PredicateTransition) {\n        this.ruleIndex = trans.ruleIndex;\n        this.predicateIndex = trans.predIndex;\n    } else {\n        this.ruleIndex = 0;\n        this.predicateIndex = 0;\n    }\n    this.predicate = predicate;\n    this.offendingToken = recognizer.getCurrentToken();\n    return this;\n}\n\nFailedPredicateException.prototype = Object.create(RecognitionException.prototype);\nFailedPredicateException.prototype.constructor = FailedPredicateException;\n\nFailedPredicateException.prototype.formatMessage = function(predicate, message) {\n    if (message !==null) {\n        return message;\n    } else {\n        return \"failed predicate: {\" + predicate + \"}?\";\n    }\n};\n\nfunction ParseCancellationException() {\n\tError.call(this);\n\tError.captureStackTrace(this, ParseCancellationException);\n\treturn this;\n}\n\nParseCancellationException.prototype = Object.create(Error.prototype);\nParseCancellationException.prototype.constructor = ParseCancellationException;\n\nexports.RecognitionException = RecognitionException;\nexports.NoViableAltException = NoViableAltException;\nexports.LexerNoViableAltException = LexerNoViableAltException;\nexports.InputMismatchException = InputMismatchException;\nexports.FailedPredicateException = FailedPredicateException;\nexports.ParseCancellationException = ParseCancellationException;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/error/Errors.js\n// module id = 5d5Q\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n//  A rule context is a record of a single rule invocation. It knows\n//  which context invoked it, if any. If there is no parent context, then\n//  naturally the invoking state is not valid.  The parent link\n//  provides a chain upwards from the current rule invocation to the root\n//  of the invocation tree, forming a stack. We actually carry no\n//  information about the rule associated with this context (except\n//  when parsing). We keep only the state number of the invoking state from\n//  the ATN submachine that invoked this. Contrast this with the s\n//  pointer inside ParserRuleContext that tracks the current state\n//  being \"executed\" for the current rule.\n//\n//  The parent contexts are useful for computing lookahead sets and\n//  getting error information.\n//\n//  These objects are used during parsing and prediction.\n//  For the special case of parsers, we use the subclass\n//  ParserRuleContext.\n//\n//  @see ParserRuleContext\n///\n\nvar RuleNode = require('./tree/Tree').RuleNode;\nvar INVALID_INTERVAL = require('./tree/Tree').INVALID_INTERVAL;\nvar INVALID_ALT_NUMBER = require('./atn/ATN').INVALID_ALT_NUMBER;\n\nfunction RuleContext(parent, invokingState) {\n\tRuleNode.call(this);\n\t// What context invoked this rule?\n\tthis.parentCtx = parent || null;\n\t// What state invoked the rule associated with this context?\n\t// The \"return address\" is the followState of invokingState\n\t// If parent is null, this should be -1.\n\tthis.invokingState = invokingState || -1;\n\treturn this;\n}\n\nRuleContext.prototype = Object.create(RuleNode.prototype);\nRuleContext.prototype.constructor = RuleContext;\n\nRuleContext.prototype.depth = function() {\n\tvar n = 0;\n\tvar p = this;\n\twhile (p !== null) {\n\t\tp = p.parentCtx;\n\t\tn += 1;\n\t}\n\treturn n;\n};\n\n// A context is empty if there is no invoking state; meaning nobody call\n// current context.\nRuleContext.prototype.isEmpty = function() {\n\treturn this.invokingState === -1;\n};\n\n// satisfy the ParseTree / SyntaxTree interface\n\nRuleContext.prototype.getSourceInterval = function() {\n\treturn INVALID_INTERVAL;\n};\n\nRuleContext.prototype.getRuleContext = function() {\n\treturn this;\n};\n\nRuleContext.prototype.getPayload = function() {\n\treturn this;\n};\n\n// Return the combined text of all child nodes. This method only considers\n// tokens which have been added to the parse tree.\n// <p>\n// Since tokens on hidden channels (e.g. whitespace or comments) are not\n// added to the parse trees, they will not appear in the output of this\n// method.\n// /\nRuleContext.prototype.getText = function() {\n\tif (this.getChildCount() === 0) {\n\t\treturn \"\";\n\t} else {\n\t\treturn this.children.map(function(child) {\n\t\t\treturn child.getText();\n\t\t}).join(\"\");\n\t}\n};\n\n// For rule associated with this parse tree internal node, return\n// the outer alternative number used to match the input. Default\n// implementation does not compute nor store this alt num. Create\n// a subclass of ParserRuleContext with backing field and set\n// option contextSuperClass.\n// to set it.\nRuleContext.prototype.getAltNumber = function() { return INVALID_ALT_NUMBER; }\n\n// Set the outer alternative number for this context node. Default\n// implementation does nothing to avoid backing field overhead for\n// trees that don't need it.  Create\n// a subclass of ParserRuleContext with backing field and set\n// option contextSuperClass.\nRuleContext.prototype.setAltNumber = function(altNumber) { }\n\nRuleContext.prototype.getChild = function(i) {\n\treturn null;\n};\n\nRuleContext.prototype.getChildCount = function() {\n\treturn 0;\n};\n\nRuleContext.prototype.accept = function(visitor) {\n\treturn visitor.visitChildren(this);\n};\n\n//need to manage circular dependencies, so export now\nexports.RuleContext = RuleContext;\nvar Trees = require('./tree/Trees').Trees;\n\n\n// Print out a whole tree, not just a node, in LISP format\n// (root child1 .. childN). Print just a node if this is a leaf.\n//\n\nRuleContext.prototype.toStringTree = function(ruleNames, recog) {\n\treturn Trees.toStringTree(this, ruleNames, recog);\n};\n\nRuleContext.prototype.toString = function(ruleNames, stop) {\n\truleNames = ruleNames || null;\n\tstop = stop || null;\n\tvar p = this;\n\tvar s = \"[\";\n\twhile (p !== null && p !== stop) {\n\t\tif (ruleNames === null) {\n\t\t\tif (!p.isEmpty()) {\n\t\t\t\ts += p.invokingState;\n\t\t\t}\n\t\t} else {\n\t\t\tvar ri = p.ruleIndex;\n\t\t\tvar ruleName = (ri >= 0 && ri < ruleNames.length) ? ruleNames[ri]\n\t\t\t\t\t: \"\" + ri;\n\t\t\ts += ruleName;\n\t\t}\n\t\tif (p.parentCtx !== null && (ruleNames !== null || !p.parentCtx.isEmpty())) {\n\t\t\ts += \" \";\n\t\t}\n\t\tp = p.parentCtx;\n\t}\n\ts += \"]\";\n\treturn s;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/RuleContext.js\n// module id = 6GCw\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar LL1Analyzer = require('./../LL1Analyzer').LL1Analyzer;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\n\nfunction ATN(grammarType , maxTokenType) {\n\n    // Used for runtime deserialization of ATNs from strings///\n    // The type of the ATN.\n    this.grammarType = grammarType;\n    // The maximum value for any symbol recognized by a transition in the ATN.\n    this.maxTokenType = maxTokenType;\n    this.states = [];\n    // Each subrule/rule is a decision point and we must track them so we\n    //  can go back later and build DFA predictors for them.  This includes\n    //  all the rules, subrules, optional blocks, ()+, ()* etc...\n    this.decisionToState = [];\n    // Maps from rule index to starting state number.\n    this.ruleToStartState = [];\n    // Maps from rule index to stop state number.\n    this.ruleToStopState = null;\n    this.modeNameToStartState = {};\n    // For lexer ATNs, this maps the rule index to the resulting token type.\n    // For parser ATNs, this maps the rule index to the generated bypass token\n    // type if the\n    // {@link ATNDeserializationOptions//isGenerateRuleBypassTransitions}\n    // deserialization option was specified; otherwise, this is {@code null}.\n    this.ruleToTokenType = null;\n    // For lexer ATNs, this is an array of {@link LexerAction} objects which may\n    // be referenced by action transitions in the ATN.\n    this.lexerActions = null;\n    this.modeToStartState = [];\n\n    return this;\n}\n\n// Compute the set of valid tokens that can occur starting in state {@code s}.\n//  If {@code ctx} is null, the set of tokens will not include what can follow\n//  the rule surrounding {@code s}. In other words, the set will be\n//  restricted to tokens reachable staying within {@code s}'s rule.\nATN.prototype.nextTokensInContext = function(s, ctx) {\n    var anal = new LL1Analyzer(this);\n    return anal.LOOK(s, null, ctx);\n};\n\n// Compute the set of valid tokens that can occur starting in {@code s} and\n// staying in same rule. {@link Token//EPSILON} is in set if we reach end of\n// rule.\nATN.prototype.nextTokensNoContext = function(s) {\n    if (s.nextTokenWithinRule !== null ) {\n        return s.nextTokenWithinRule;\n    }\n    s.nextTokenWithinRule = this.nextTokensInContext(s, null);\n    s.nextTokenWithinRule.readOnly = true;\n    return s.nextTokenWithinRule;\n};\n\nATN.prototype.nextTokens = function(s, ctx) {\n    if ( ctx===undefined ) {\n        return this.nextTokensNoContext(s);\n    } else {\n        return this.nextTokensInContext(s, ctx);\n    }\n};\n\nATN.prototype.addState = function( state) {\n    if ( state !== null ) {\n        state.atn = this;\n        state.stateNumber = this.states.length;\n    }\n    this.states.push(state);\n};\n\nATN.prototype.removeState = function( state) {\n    this.states[state.stateNumber] = null; // just free mem, don't shift states in list\n};\n\nATN.prototype.defineDecisionState = function( s) {\n    this.decisionToState.push(s);\n    s.decision = this.decisionToState.length-1;\n    return s.decision;\n};\n\nATN.prototype.getDecisionState = function( decision) {\n    if (this.decisionToState.length===0) {\n        return null;\n    } else {\n        return this.decisionToState[decision];\n    }\n};\n\n// Computes the set of input symbols which could follow ATN state number\n// {@code stateNumber} in the specified full {@code context}. This method\n// considers the complete parser context, but does not evaluate semantic\n// predicates (i.e. all predicates encountered during the calculation are\n// assumed true). If a path in the ATN exists from the starting state to the\n// {@link RuleStopState} of the outermost context without matching any\n// symbols, {@link Token//EOF} is added to the returned set.\n//\n// <p>If {@code context} is {@code null}, it is treated as\n// {@link ParserRuleContext//EMPTY}.</p>\n//\n// @param stateNumber the ATN state number\n// @param context the full parse context\n// @return The set of potentially valid input symbols which could follow the\n// specified state in the specified context.\n// @throws IllegalArgumentException if the ATN does not contain a state with\n// number {@code stateNumber}\nvar Token = require('./../Token').Token;\n\nATN.prototype.getExpectedTokens = function( stateNumber, ctx ) {\n    if ( stateNumber < 0 || stateNumber >= this.states.length ) {\n        throw(\"Invalid state number.\");\n    }\n    var s = this.states[stateNumber];\n    var following = this.nextTokens(s);\n    if (!following.contains(Token.EPSILON)) {\n        return following;\n    }\n    var expected = new IntervalSet();\n    expected.addSet(following);\n    expected.removeOne(Token.EPSILON);\n    while (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n        var invokingState = this.states[ctx.invokingState];\n        var rt = invokingState.transitions[0];\n        following = this.nextTokens(rt.followState);\n        expected.addSet(following);\n        expected.removeOne(Token.EPSILON);\n        ctx = ctx.parentCtx;\n    }\n    if (following.contains(Token.EPSILON)) {\n        expected.addOne(Token.EOF);\n    }\n    return expected;\n};\n\nATN.INVALID_ALT_NUMBER = 0;\n\nexports.ATN = ATN;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATN.js\n// module id = 7y1Z\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// Represents the type of recognizer an ATN applies to.\n\nfunction ATNType() {\n\n}\n\nATNType.LEXER = 0;\nATNType.PARSER = 1;\n\nexports.ATNType = ATNType;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNType.js\n// module id = 8Teg\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\nexports.atn = require('./atn/index');\nexports.codepointat = require('./polyfills/codepointat');\nexports.dfa = require('./dfa/index');\nexports.fromcodepoint = require('./polyfills/fromcodepoint');\nexports.tree = require('./tree/index');\nexports.error = require('./error/index');\nexports.Token = require('./Token').Token;\nexports.CharStreams = require('./CharStreams').CharStreams;\nexports.CommonToken = require('./Token').CommonToken;\nexports.InputStream = require('./InputStream').InputStream;\nexports.FileStream = require('./FileStream').FileStream;\nexports.CommonTokenStream = require('./CommonTokenStream').CommonTokenStream;\nexports.Lexer = require('./Lexer').Lexer;\nexports.Parser = require('./Parser').Parser;\nvar pc = require('./PredictionContext');\nexports.PredictionContextCache = pc.PredictionContextCache;\nexports.ParserRuleContext = require('./ParserRuleContext').ParserRuleContext;\nexports.Interval = require('./IntervalSet').Interval;\nexports.Utils = require('./Utils');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/index.js\n// module id = 9C8F\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// This implementation of {@link ANTLRErrorListener} can be used to identify\n// certain potential correctness and performance problems in grammars. \"Reports\"\n// are made by calling {@link Parser//notifyErrorListeners} with the appropriate\n// message.\n//\n// <ul>\n// <li><b>Ambiguities</b>: These are cases where more than one path through the\n// grammar can match the input.</li>\n// <li><b>Weak context sensitivity</b>: These are cases where full-context\n// prediction resolved an SLL conflict to a unique alternative which equaled the\n// minimum alternative of the SLL conflict.</li>\n// <li><b>Strong (forced) context sensitivity</b>: These are cases where the\n// full-context prediction resolved an SLL conflict to a unique alternative,\n// <em>and</em> the minimum alternative of the SLL conflict was found to not be\n// a truly viable alternative. Two-stage parsing cannot be used for inputs where\n// this situation occurs.</li>\n// </ul>\n\nvar BitSet = require('./../Utils').BitSet;\nvar ErrorListener = require('./ErrorListener').ErrorListener;\nvar Interval = require('./../IntervalSet').Interval;\n\nfunction DiagnosticErrorListener(exactOnly) {\n\tErrorListener.call(this);\n\texactOnly = exactOnly || true;\n\t// whether all ambiguities or only exact ambiguities are reported.\n\tthis.exactOnly = exactOnly;\n\treturn this;\n}\n\nDiagnosticErrorListener.prototype = Object.create(ErrorListener.prototype);\nDiagnosticErrorListener.prototype.constructor = DiagnosticErrorListener;\n\nDiagnosticErrorListener.prototype.reportAmbiguity = function(recognizer, dfa,\n\t\tstartIndex, stopIndex, exact, ambigAlts, configs) {\n\tif (this.exactOnly && !exact) {\n\t\treturn;\n\t}\n\tvar msg = \"reportAmbiguity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\": ambigAlts=\" +\n\t\t\tthis.getConflictingAlts(ambigAlts, configs) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.reportAttemptingFullContext = function(\n\t\trecognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n\tvar msg = \"reportAttemptingFullContext d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.reportContextSensitivity = function(\n\t\trecognizer, dfa, startIndex, stopIndex, prediction, configs) {\n\tvar msg = \"reportContextSensitivity d=\" +\n\t\t\tthis.getDecisionDescription(recognizer, dfa) +\n\t\t\t\", input='\" +\n\t\t\trecognizer.getTokenStream().getText(new Interval(startIndex, stopIndex)) + \"'\";\n\trecognizer.notifyErrorListeners(msg);\n};\n\nDiagnosticErrorListener.prototype.getDecisionDescription = function(recognizer, dfa) {\n\tvar decision = dfa.decision;\n\tvar ruleIndex = dfa.atnStartState.ruleIndex;\n\n\tvar ruleNames = recognizer.ruleNames;\n\tif (ruleIndex < 0 || ruleIndex >= ruleNames.length) {\n\t\treturn \"\" + decision;\n\t}\n\tvar ruleName = ruleNames[ruleIndex] || null;\n\tif (ruleName === null || ruleName.length === 0) {\n\t\treturn \"\" + decision;\n\t}\n\treturn \"\" + decision + \" (\" + ruleName + \")\";\n};\n\n//\n// Computes the set of conflicting or ambiguous alternatives from a\n// configuration set, if that information was not already provided by the\n// parser.\n//\n// @param reportedAlts The set of conflicting or ambiguous alternatives, as\n// reported by the parser.\n// @param configs The conflicting or ambiguous configuration set.\n// @return Returns {@code reportedAlts} if it is not {@code null}, otherwise\n// returns the set of alternatives represented in {@code configs}.\n//\nDiagnosticErrorListener.prototype.getConflictingAlts = function(reportedAlts, configs) {\n\tif (reportedAlts !== null) {\n\t\treturn reportedAlts;\n\t}\n\tvar result = new BitSet();\n\tfor (var i = 0; i < configs.items.length; i++) {\n\t\tresult.add(configs.items[i].alt);\n\t}\n\treturn \"{\" + result.values().join(\", \") + \"}\";\n};\n\nexports.DiagnosticErrorListener = DiagnosticErrorListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/error/DiagnosticErrorListener.js\n// module id = B0bK\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.DFA = require('./DFA').DFA;\nexports.DFASerializer = require('./DFASerializer').DFASerializer;\nexports.LexerDFASerializer = require('./DFASerializer').LexerDFASerializer;\nexports.PredPrediction = require('./DFAState').PredPrediction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/dfa/index.js\n// module id = CF8A\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Tree = require('./Tree');\nexports.Trees = require('./Trees').Trees;\nexports.RuleNode = Tree.RuleNode;\nexports.ParseTreeListener = Tree.ParseTreeListener;\nexports.ParseTreeVisitor = Tree.ParseTreeVisitor;\nexports.ParseTreeWalker = Tree.ParseTreeWalker;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/tree/index.js\n// module id = CLgU\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n//* A rule invocation record for parsing.\n//\n//  Contains all of the information about the current rule not stored in the\n//  RuleContext. It handles parse tree children list, Any ATN state\n//  tracing, and the default values available for rule indications:\n//  start, stop, rule index, current alt number, current\n//  ATN state.\n//\n//  Subclasses made for each rule and grammar track the parameters,\n//  return values, locals, and labels specific to that rule. These\n//  are the objects that are returned from rules.\n//\n//  Note text is not an actual field of a rule return value; it is computed\n//  from start and stop using the input stream's toString() method.  I\n//  could add a ctor to this so that we can pass in and store the input\n//  stream, but I'm not sure we want to do that.  It would seem to be undefined\n//  to get the .text property anyway if the rule matches tokens from multiple\n//  input streams.\n//\n//  I do not use getters for fields of objects that are used simply to\n//  group values such as this aggregate.  The getters/setters are there to\n//  satisfy the superclass interface.\n\nvar RuleContext = require('./RuleContext').RuleContext;\nvar Tree = require('./tree/Tree');\nvar INVALID_INTERVAL = Tree.INVALID_INTERVAL;\nvar TerminalNode = Tree.TerminalNode;\nvar TerminalNodeImpl = Tree.TerminalNodeImpl;\nvar ErrorNodeImpl = Tree.ErrorNodeImpl;\nvar Interval = require(\"./IntervalSet\").Interval;\n\nfunction ParserRuleContext(parent, invokingStateNumber) {\n\tparent = parent || null;\n\tinvokingStateNumber = invokingStateNumber || null;\n\tRuleContext.call(this, parent, invokingStateNumber);\n\tthis.ruleIndex = -1;\n    // * If we are debugging or building a parse tree for a visitor,\n    // we need to track all of the tokens and rule invocations associated\n    // with this rule's context. This is empty for parsing w/o tree constr.\n    // operation because we don't the need to track the details about\n    // how we parse this rule.\n    // /\n    this.children = null;\n    this.start = null;\n    this.stop = null;\n    // The exception that forced this rule to return. If the rule successfully\n    // completed, this is {@code null}.\n    this.exception = null;\n}\n\nParserRuleContext.prototype = Object.create(RuleContext.prototype);\nParserRuleContext.prototype.constructor = ParserRuleContext;\n\n// * COPY a ctx (I'm deliberately not using copy constructor)///\nParserRuleContext.prototype.copyFrom = function(ctx) {\n    // from RuleContext\n    this.parentCtx = ctx.parentCtx;\n    this.invokingState = ctx.invokingState;\n    this.children = null;\n    this.start = ctx.start;\n    this.stop = ctx.stop;\n    // copy any error nodes to alt label node\n    if(ctx.children) {\n        this.children = [];\n        // reset parent pointer for any error nodes\n    \tctx.children.map(function(child) {\n    \t\tif (child instanceof ErrorNodeImpl) {\n                this.children.push(child);\n                child.parentCtx = this;\n            }\n\t\t}, this);\n\t}\n};\n\n// Double dispatch methods for listeners\nParserRuleContext.prototype.enterRule = function(listener) {\n};\n\nParserRuleContext.prototype.exitRule = function(listener) {\n};\n\n// * Does not set parent link; other add methods do that///\nParserRuleContext.prototype.addChild = function(child) {\n    if (this.children === null) {\n        this.children = [];\n    }\n    this.children.push(child);\n    return child;\n};\n\n// * Used by enterOuterAlt to toss out a RuleContext previously added as\n// we entered a rule. If we have // label, we will need to remove\n// generic ruleContext object.\n// /\nParserRuleContext.prototype.removeLastChild = function() {\n    if (this.children !== null) {\n        this.children.pop();\n    }\n};\n\nParserRuleContext.prototype.addTokenNode = function(token) {\n    var node = new TerminalNodeImpl(token);\n    this.addChild(node);\n    node.parentCtx = this;\n    return node;\n};\n\nParserRuleContext.prototype.addErrorNode = function(badToken) {\n    var node = new ErrorNodeImpl(badToken);\n    this.addChild(node);\n    node.parentCtx = this;\n    return node;\n};\n\nParserRuleContext.prototype.getChild = function(i, type) {\n\ttype = type || null;\n\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\treturn null;\n\t}\n\tif (type === null) {\n\t\treturn this.children[i];\n\t} else {\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif(child instanceof type) {\n\t\t\t\tif(i===0) {\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\ti -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n    }\n};\n\n\nParserRuleContext.prototype.getToken = function(ttype, i) {\n\tif (this.children === null || i < 0 || i >= this.children.length) {\n\t\treturn null;\n\t}\n\tfor(var j=0; j<this.children.length; j++) {\n\t\tvar child = this.children[j];\n\t\tif (child instanceof TerminalNode) {\n\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\tif(i===0) {\n\t\t\t\t\treturn child;\n\t\t\t\t} else {\n\t\t\t\t\ti -= 1;\n\t\t\t\t}\n\t\t\t}\n        }\n\t}\n    return null;\n};\n\nParserRuleContext.prototype.getTokens = function(ttype ) {\n    if (this.children=== null) {\n        return [];\n    } else {\n\t\tvar tokens = [];\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif (child instanceof TerminalNode) {\n\t\t\t\tif (child.symbol.type === ttype) {\n\t\t\t\t\ttokens.push(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tokens;\n    }\n};\n\nParserRuleContext.prototype.getTypedRuleContext = function(ctxType, i) {\n    return this.getChild(i, ctxType);\n};\n\nParserRuleContext.prototype.getTypedRuleContexts = function(ctxType) {\n    if (this.children=== null) {\n        return [];\n    } else {\n\t\tvar contexts = [];\n\t\tfor(var j=0; j<this.children.length; j++) {\n\t\t\tvar child = this.children[j];\n\t\t\tif (child instanceof ctxType) {\n\t\t\t\tcontexts.push(child);\n\t\t\t}\n\t\t}\n\t\treturn contexts;\n\t}\n};\n\nParserRuleContext.prototype.getChildCount = function() {\n\tif (this.children=== null) {\n\t\treturn 0;\n\t} else {\n\t\treturn this.children.length;\n\t}\n};\n\nParserRuleContext.prototype.getSourceInterval = function() {\n    if( this.start === null || this.stop === null) {\n        return INVALID_INTERVAL;\n    } else {\n        return new Interval(this.start.tokenIndex, this.stop.tokenIndex);\n    }\n};\n\nRuleContext.EMPTY = new ParserRuleContext();\n\nfunction InterpreterRuleContext(parent, invokingStateNumber, ruleIndex) {\n\tParserRuleContext.call(parent, invokingStateNumber);\n    this.ruleIndex = ruleIndex;\n    return this;\n}\n\nInterpreterRuleContext.prototype = Object.create(ParserRuleContext.prototype);\nInterpreterRuleContext.prototype.constructor = InterpreterRuleContext;\n\nexports.ParserRuleContext = ParserRuleContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/ParserRuleContext.js\n// module id = EesY\n// module chunks = 0 1","const policy = require('policy_lang');\r\nconst policyListener = policy.policyListener;\r\nlet _ = require('underscore');\r\n\r\n//排列\r\npermute.permArr = [];\r\npermute.usedChars = [];\r\nfunction permute(input) {\r\n  let i,\r\n    ch;\r\n  for (i = 0; i < input.length; i++) {\r\n    ch = input.splice(i, 1)[0];\r\n    permute.usedChars.push(ch);\r\n    if (input.length == 0) {\r\n      permute.permArr.push(permute.usedChars.slice());\r\n    }\r\n    permute(input);\r\n    input.splice(i, 0, ch);\r\n    permute.usedChars.pop();\r\n  }\r\n  return permute.permArr\r\n};\r\n//随机的中间态名称\r\nfunction genRandomStateName(evt1, evt2,evtName) {\r\n  return 'autoGenratedState_'+evt1+'_'+evt2+'_'+evtName+'_'+(new Date * Math.random()).toString(36).substring(0, 4);\r\n};\r\n\r\nclass JSONGeneratorExtentionClass extends policyListener {\r\n  constructor() {\r\n    super();\r\n    this.errorMsg = null;\r\n    this.policy_segments = [];\r\n  }\r\n\r\n  enterP(ctx) {};\r\n  exitP(ctx) {};\r\n  enterStart_hour(ctx) {};\r\n  exitStart_hour(ctx) {};\r\n\r\n  enterEnd_hour(ctx) {};\r\n  exitEnd_hour(ctx) {};\r\n\r\n  enterSegment(ctx) {\r\n    //对应一个segment\r\n    ctx.segment_block = {\r\n      initialState : 'initial',\r\n      terminateState : 'terminate',\r\n      users: [], //暂时只有两种user，个人的和组的\r\n      states: [],\r\n      all_occured_states: [],\r\n      state_transition_table: []\r\n    };\r\n  };\r\n  exitSegment(ctx) {\r\n      // this.policy_segments.push(ctx.segment_block);\r\n  };\r\n  // 留给下简化版\r\n  // enterSettlement_clause (ctx) {};\r\n  // exitSettlement_clause (ctx) {\r\n  //   //settlement事件\r\n  //   let settlementForward = {\r\n  //     type: 'settlementForward',\r\n  //     params: [3, 'day'],\r\n  //     eventName: 'settlementForward_3_day'\r\n  //   };\r\n  //   let accountSettled = {\r\n  //     type: 'accountSettled',\r\n  //     params: [],\r\n  //     eventName: 'accountSettled'\r\n  //   };\r\n  //   //列出所有token states\r\n  //   let tokenStates = _.reduce( ctx.ID(), (x, y)=> {\r\n  //     return x.concat(y.getText())\r\n  //   }, []);\r\n  //   //获取对应的segment\r\n  //   let segment = this.policy_segments[this.policy_segments.length-1];\r\n  //   //检查tokens staets 是否已经出现,并且暂存一起来，如果pass验证，那么就concat进去了\r\n  //   let tempStates = [];\r\n  //   let statesOccured = _.every(tokenStates, (el)=> {\r\n  //     tempStates.push({\r\n  //       currentState: el,\r\n  //       event: settlementForward,\r\n  //       nextState: 'settlement'\r\n  //     });\r\n  //     tempStates.push({\r\n  //       currentState: 'settlement',\r\n  //       event: accountSettled,\r\n  //       nextState: el\r\n  //     });\r\n  //     return _.contains(segment.all_occured_states, el);\r\n  //   });\r\n  //   // //针对当前segment加入结算事件\r\n  //   if ( statesOccured ) {\r\n  //     Array.prototype.push.apply(this.policy_segments[this.policy_segments.length-1].state_transition_table, tempStates);\r\n  //   }\r\n  // };\r\n  enterAudience_clause(ctx) {\r\n    ctx.segment_block = ctx.parentCtx.segment_block;\r\n  };\r\n  exitAudience_clause(ctx) {\r\n    ctx.parentCtx.segment_block = ctx.segment_block;\r\n  };\r\n  enterAthorize_token_clause (ctx) {\r\n    ctx.segment_block = ctx.parentCtx.segment_block;\r\n    ctx.segment_block.activatedStates = [];\r\n    _.each( ctx.ID(), (state)=>{\r\n        ctx.segment_block.activatedStates.push(state.getText());\r\n    });\r\n  };\r\n\r\n  exitAthorize_token_clause (ctx) {\r\n    this.policy_segments.push(ctx.segment_block);\r\n  };\r\n\r\n  enterAudience_individuals_clause(ctx) {\r\n    ctx.segment_block = ctx.parentCtx.segment_block;\r\n    ctx.userObj = {};\r\n    ctx.userObj.userType = 'individuals';\r\n  };\r\n  exitAudience_individuals_clause(ctx) {\r\n    ctx.segment_block.users.push(ctx.userObj);\r\n    ctx.parentCtx.segment_block = ctx.segment_block;\r\n  };\r\n\r\n  enterAudience_groups_clause(ctx) {\r\n    ctx.segment_block = ctx.parentCtx.segment_block;\r\n    ctx.userObj = {};\r\n    ctx.userObj.userType = 'groups';\r\n  };\r\n  exitAudience_groups_clause(ctx) {\r\n    ctx.segment_block.users.push(ctx.userObj);\r\n    ctx.parentCtx.segment_block = ctx.segment_block;\r\n  };\r\n\r\n\r\n  enterState_clause(ctx) {\r\n    ctx.segment_block = ctx.parentCtx.segment_block;\r\n  };\r\n  exitState_clause(ctx) {\r\n    ctx.parentCtx.segment_block = ctx.segment_block;\r\n  };\r\n\r\n  enterCurrent_state_clause(ctx) {\r\n    ctx.segment_block = ctx.parentCtx.segment_block;\r\n    console.log('ctx',ctx.ID());\r\n    ctx.segment_block.states.push(ctx.ID().getText());\r\n    ctx.segment_block.all_occured_states.push(ctx.ID().getText());\r\n    ctx.segment_block.all_occured_states = _.uniq(ctx.segment_block.all_occured_states);\r\n  };\r\n  exitCurrent_state_clause(ctx) {\r\n    ctx.parentCtx.segment_block = ctx.segment_block;\r\n  };\r\n\r\n  enterTarget_clause(ctx) {\r\n    ctx.segment_block = ctx.parentCtx.segment_block;\r\n    //重置state\r\n    ctx.current_state = ctx.parentCtx.current_state_clause().ID().getText();\r\n    //next_state\r\n    ctx.next_state = ctx.ID().getText();\r\n    //重置event\r\n    ctx.events = [];\r\n  };\r\n\r\n  // Exit a parse tree produced by policyParser#target_clause.\r\n  exitTarget_clause(ctx) {\r\n    let state_transition\r\n    if( ctx.events.length >1 ) {\r\n      state_transition = {\r\n        currentState: ctx.current_state,\r\n        event: {\r\n          type : 'compoundEvents',\r\n          params : ctx.events\r\n        },\r\n        nextState: ctx.next_state\r\n      };\r\n    } else {\r\n      state_transition = {\r\n        currentState: ctx.current_state,\r\n        event: ctx.events[0],\r\n        nextState: ctx.next_state\r\n      };\r\n    }\r\n    ctx.segment_block.state_transition_table.push(state_transition);\r\n    // //生成中间状态\r\n    // let tempCurrent = ctx.current_state;\r\n    // //permute当前events\r\n    // _.each(permute(ctx.events), (orderedEvts) => {\r\n    //   tempCurrent = ctx.current_state;\r\n    //   let path = [];\r\n    //   while (orderedEvts.length != 0) {\r\n    //     let event = orderedEvts.pop();\r\n    //     path.push(event.type);\r\n    //     let randomStateName = genRandomStateName(ctx.current_state, ctx.next_state,path.join('-'));\r\n    //     let state_transition = {\r\n    //       currentState: tempCurrent,\r\n    //       event: event,\r\n    //       nextState: ctx.next_state\r\n    //     };\r\n    //     if (orderedEvts.length != 0) {\r\n    //       state_transition.nextState = randomStateName;\r\n    //       tempCurrent = randomStateName;\r\n    //       ctx.segment_block.all_occured_states.push(randomStateName); //记录同一个起始state下面所有的target state及中间state\r\n    //     }\r\n    //     ctx.segment_block.state_transition_table.push(state_transition);\r\n    //   }\r\n    // });\r\n    //记录同一个curren_state 下的多个target\r\n    ctx.segment_block.all_occured_states.push(ctx.next_state);\r\n    ctx.segment_block.all_occured_states = _.uniq(ctx.segment_block.all_occured_states);\r\n    //回传\r\n    ctx.parentCtx.segment_block = ctx.segment_block;\r\n  };\r\n\r\n  enterEvent(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n  };\r\n  exitEvent(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterAnd_event(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n  };\r\n  exitAnd_event(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n  enterPeriod_event (ctx) {\r\n    let timeUnit = ctx.time_unit().getText();\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({\r\n      type: 'period',\r\n      params: [timeUnit],\r\n      eventName: 'period_'+timeUnit+ '_event'\r\n    });\r\n  };\r\n  exitPeriod_event (ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n  enterSpecific_date_event (ctx) {\r\n    let date = ctx.DATE().getText();\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({\r\n      type: 'arrivalDate',\r\n      params: [1, date],\r\n      eventName: 'arrivalDate_1_'+date+'_event'\r\n    });\r\n  };\r\n  exitSpecific_date_event  (ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n  enterRelative_date_event (ctx) {\r\n    let day = Number(ctx.INT().getText());\r\n    let unit = ctx.time_unit().getText();\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({\r\n      type: 'arrivalDate',\r\n      params: [0, day, unit],\r\n      eventName: 'arrivalDate_0_'+day +'_'+unit+'_event'\r\n    });\r\n  };\r\n  exitRelative_date_event (ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n  enterPricing_agreement_event(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({\r\n      type: 'pricingAgreement',\r\n      params:[tbd],\r\n      eventName: 'pricingAgreement'\r\n    });\r\n  };\r\n  exitPricing_agreement_event(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterTransaction_event(ctx) {\r\n    let transactionAmount = Number(ctx.INT().getText());\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({\r\n      type: 'transaction',\r\n      params: ['userId', transactionAmount],\r\n      eventName: 'transaction_userid_'+transactionAmount\r\n    });\r\n  };\r\n  exitTransaction_event(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterSigning_event(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n    let tempLicenseIds = [];\r\n    _.each( ctx.license_resource_id(), (licensId)=>{\r\n      tempLicenseIds.push(licensId.getText());\r\n    });\r\n    ctx.events.push({\r\n      type: 'signing',\r\n      params: tempLicenseIds,\r\n      eventName: 'signing_'+tempLicenseIds.join('_')\r\n    });\r\n  };\r\n  exitSigning_event(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterGuaranty_event(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n  };\r\n  exitGuaranty_event(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterContract_guaranty(ctx) {\r\n    let amount = ctx.INT()[0].getText();\r\n    let day = ctx.INT()[1].getText();\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({\r\n      type: 'contractGuaranty',\r\n      params: [ amount, day, 'day'],\r\n      eventName: 'contractGuaranty_'+amount +'_'+day+'_event'\r\n    });\r\n  };\r\n  exitContract_guaranty(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterPlatform_guaranty(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({\r\n      type: 'platformGuaranty',\r\n      params: [Number(ctx.INT().getText())],\r\n      eventName: 'platformGuaranty'\r\n    });\r\n  };\r\n  exitPlatform_guaranty(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterSettlement_event(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({\r\n      type: 'accountSettled',\r\n      params:[]\r\n    });\r\n  };\r\n  exitSettlement_event(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterAccess_count_event(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n  };\r\n  exitAccess_count_event(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterVisit_increment_event(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({\r\n      type: 'accessCountIncrement',\r\n      params: [Number(ctx.INT().getText())]\r\n    });\r\n  };\r\n\r\n  // Exit a parse tree produced by policyParser#visit_increment_event.\r\n  exitVisit_increment_event(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterVisit_event(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({\r\n      type: 'accessCount',\r\n      params: [Number(ctx.INT().getText())]\r\n    });\r\n  };\r\n  exitVisit_event(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterBalance_event(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n  };\r\n  exitBalance_event(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  // Enter a parse tree produced by policyParser#balance_greater.\r\n  enterBalance_greater(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({type: 'balance_smaller_event', params: ctx.getText()});\r\n  };\r\n  exitBalance_greater(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterBalance_smaller(ctx) {\r\n    ctx.events = ctx.parentCtx.events;\r\n    ctx.events.push({type: 'balance_greater_event', params: ctx.getText()});\r\n  };\r\n  exitBalance_smaller(ctx) {\r\n    ctx.parentCtx.events = ctx.events;\r\n  };\r\n\r\n  enterTime_unit(ctx) {};\r\n  exitTime_unit(ctx) {};\r\n\r\n  enterState(ctx) {};\r\n  exitState(ctx) {};\r\n\r\n  enterLicense_resource_id(ctx) {};\r\n  exitLicense_resource_id(ctx) {};\r\n\r\n  enterUsers(ctx) {\r\n    //继承\r\n    ctx.userObj = ctx.parentCtx.userObj;\r\n    //新增users\r\n    ctx.userObj.users = ctx.userObj.users || [];\r\n    ctx.userObj.users.push(ctx.getText());\r\n    // for (var i = 0; i < ctx.getChildCount(); i++) {\r\n    //   if (ctx.getChild(i).getText() != ',') {\r\n    //     //修改\r\n    //     ctx.userObj.users.push(ctx.getChild(i).getText());\r\n    //   }\r\n    // }\r\n  };\r\n  exitUsers(ctx) {\r\n    //回传\r\n    ctx.parentCtx.userObj = ctx.userObj;\r\n  };\r\n\r\n  enterUser_groups(ctx) {\r\n    //继承\r\n    ctx.userObj = ctx.parentCtx.userObj;\r\n    //新增users\r\n    ctx.userObj.users = ctx.userObj.users || [];\r\n    for (var i = 0; i < ctx.getChildCount(); i++) {\r\n      if (ctx.getChild(i).getText() != ',') {\r\n        ctx.userObj.users.push(ctx.getChild(i).getText());\r\n      }\r\n    }\r\n  };\r\n  exitUser_groups(ctx) {\r\n    //回传\r\n    ctx.parentCtx.userObj = ctx.userObj;\r\n  };\r\n\r\n};\r\n\r\nmodule.exports = JSONGeneratorExtentionClass;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/freelog_policy_compiler/JSONGeneratorExtension.js\n// module id = Ev7n\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// This implementation of {@link TokenStream} loads tokens from a\n// {@link TokenSource} on-demand, and places the tokens in a buffer to provide\n// access to any previous token by index.\n//\n// <p>\n// This token stream ignores the value of {@link Token//getChannel}. If your\n// parser requires the token stream filter tokens to only those on a particular\n// channel, such as {@link Token//DEFAULT_CHANNEL} or\n// {@link Token//HIDDEN_CHANNEL}, use a filtering token stream such a\n// {@link CommonTokenStream}.</p>\n\nvar Token = require('./Token').Token;\nvar Lexer = require('./Lexer').Lexer;\nvar Interval = require('./IntervalSet').Interval;\n\n// this is just to keep meaningful parameter types to Parser\nfunction TokenStream() {\n\treturn this;\n}\n\nfunction BufferedTokenStream(tokenSource) {\n\n\tTokenStream.call(this);\n\t// The {@link TokenSource} from which tokens for this stream are fetched.\n\tthis.tokenSource = tokenSource;\n\n\t// A collection of all tokens fetched from the token source. The list is\n\t// considered a complete view of the input once {@link //fetchedEOF} is set\n\t// to {@code true}.\n\tthis.tokens = [];\n\n\t// The index into {@link //tokens} of the current token (next token to\n\t// {@link //consume}). {@link //tokens}{@code [}{@link //p}{@code ]} should\n\t// be\n\t// {@link //LT LT(1)}.\n\t//\n\t// <p>This field is set to -1 when the stream is first constructed or when\n\t// {@link //setTokenSource} is called, indicating that the first token has\n\t// not yet been fetched from the token source. For additional information,\n\t// see the documentation of {@link IntStream} for a description of\n\t// Initializing Methods.</p>\n\tthis.index = -1;\n\n\t// Indicates whether the {@link Token//EOF} token has been fetched from\n\t// {@link //tokenSource} and added to {@link //tokens}. This field improves\n\t// performance for the following cases:\n\t//\n\t// <ul>\n\t// <li>{@link //consume}: The lookahead check in {@link //consume} to\n\t// prevent\n\t// consuming the EOF symbol is optimized by checking the values of\n\t// {@link //fetchedEOF} and {@link //p} instead of calling {@link\n\t// //LA}.</li>\n\t// <li>{@link //fetch}: The check to prevent adding multiple EOF symbols\n\t// into\n\t// {@link //tokens} is trivial with this field.</li>\n\t// <ul>\n\tthis.fetchedEOF = false;\n\treturn this;\n}\n\nBufferedTokenStream.prototype = Object.create(TokenStream.prototype);\nBufferedTokenStream.prototype.constructor = BufferedTokenStream;\n\nBufferedTokenStream.prototype.mark = function() {\n\treturn 0;\n};\n\nBufferedTokenStream.prototype.release = function(marker) {\n\t// no resources to release\n};\n\nBufferedTokenStream.prototype.reset = function() {\n\tthis.seek(0);\n};\n\nBufferedTokenStream.prototype.seek = function(index) {\n\tthis.lazyInit();\n\tthis.index = this.adjustSeekIndex(index);\n};\n\nBufferedTokenStream.prototype.get = function(index) {\n\tthis.lazyInit();\n\treturn this.tokens[index];\n};\n\nBufferedTokenStream.prototype.consume = function() {\n\tvar skipEofCheck = false;\n\tif (this.index >= 0) {\n\t\tif (this.fetchedEOF) {\n\t\t\t// the last token in tokens is EOF. skip check if p indexes any\n\t\t\t// fetched token except the last.\n\t\t\tskipEofCheck = this.index < this.tokens.length - 1;\n\t\t} else {\n\t\t\t// no EOF token in tokens. skip check if p indexes a fetched token.\n\t\t\tskipEofCheck = this.index < this.tokens.length;\n\t\t}\n\t} else {\n\t\t// not yet initialized\n\t\tskipEofCheck = false;\n\t}\n\tif (!skipEofCheck && this.LA(1) === Token.EOF) {\n\t\tthrow \"cannot consume EOF\";\n\t}\n\tif (this.sync(this.index + 1)) {\n\t\tthis.index = this.adjustSeekIndex(this.index + 1);\n\t}\n};\n\n// Make sure index {@code i} in tokens has a token.\n//\n// @return {@code true} if a token is located at index {@code i}, otherwise\n// {@code false}.\n// @see //get(int i)\n// /\nBufferedTokenStream.prototype.sync = function(i) {\n\tvar n = i - this.tokens.length + 1; // how many more elements we need?\n\tif (n > 0) {\n\t\tvar fetched = this.fetch(n);\n\t\treturn fetched >= n;\n\t}\n\treturn true;\n};\n\n// Add {@code n} elements to buffer.\n//\n// @return The actual number of elements added to the buffer.\n// /\nBufferedTokenStream.prototype.fetch = function(n) {\n\tif (this.fetchedEOF) {\n\t\treturn 0;\n\t}\n\tfor (var i = 0; i < n; i++) {\n\t\tvar t = this.tokenSource.nextToken();\n\t\tt.tokenIndex = this.tokens.length;\n\t\tthis.tokens.push(t);\n\t\tif (t.type === Token.EOF) {\n\t\t\tthis.fetchedEOF = true;\n\t\t\treturn i + 1;\n\t\t}\n\t}\n\treturn n;\n};\n\n// Get all tokens from start..stop inclusively///\nBufferedTokenStream.prototype.getTokens = function(start, stop, types) {\n\tif (types === undefined) {\n\t\ttypes = null;\n\t}\n\tif (start < 0 || stop < 0) {\n\t\treturn null;\n\t}\n\tthis.lazyInit();\n\tvar subset = [];\n\tif (stop >= this.tokens.length) {\n\t\tstop = this.tokens.length - 1;\n\t}\n\tfor (var i = start; i < stop; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (t.type === Token.EOF) {\n\t\t\tbreak;\n\t\t}\n\t\tif (types === null || types.contains(t.type)) {\n\t\t\tsubset.push(t);\n\t\t}\n\t}\n\treturn subset;\n};\n\nBufferedTokenStream.prototype.LA = function(i) {\n\treturn this.LT(i).type;\n};\n\nBufferedTokenStream.prototype.LB = function(k) {\n\tif (this.index - k < 0) {\n\t\treturn null;\n\t}\n\treturn this.tokens[this.index - k];\n};\n\nBufferedTokenStream.prototype.LT = function(k) {\n\tthis.lazyInit();\n\tif (k === 0) {\n\t\treturn null;\n\t}\n\tif (k < 0) {\n\t\treturn this.LB(-k);\n\t}\n\tvar i = this.index + k - 1;\n\tthis.sync(i);\n\tif (i >= this.tokens.length) { // return EOF token\n\t\t// EOF must be last token\n\t\treturn this.tokens[this.tokens.length - 1];\n\t}\n\treturn this.tokens[i];\n};\n\n// Allowed derived classes to modify the behavior of operations which change\n// the current stream position by adjusting the target token index of a seek\n// operation. The default implementation simply returns {@code i}. If an\n// exception is thrown in this method, the current stream index should not be\n// changed.\n//\n// <p>For example, {@link CommonTokenStream} overrides this method to ensure\n// that\n// the seek target is always an on-channel token.</p>\n//\n// @param i The target token index.\n// @return The adjusted target token index.\n\nBufferedTokenStream.prototype.adjustSeekIndex = function(i) {\n\treturn i;\n};\n\nBufferedTokenStream.prototype.lazyInit = function() {\n\tif (this.index === -1) {\n\t\tthis.setup();\n\t}\n};\n\nBufferedTokenStream.prototype.setup = function() {\n\tthis.sync(0);\n\tthis.index = this.adjustSeekIndex(0);\n};\n\n// Reset this token stream by setting its token source.///\nBufferedTokenStream.prototype.setTokenSource = function(tokenSource) {\n\tthis.tokenSource = tokenSource;\n\tthis.tokens = [];\n\tthis.index = -1;\n\tthis.fetchedEOF = false;\n};\n\n\n// Given a starting index, return the index of the next token on channel.\n// Return i if tokens[i] is on channel. Return -1 if there are no tokens\n// on channel between i and EOF.\n// /\nBufferedTokenStream.prototype.nextTokenOnChannel = function(i, channel) {\n\tthis.sync(i);\n\tif (i >= this.tokens.length) {\n\t\treturn -1;\n\t}\n\tvar token = this.tokens[i];\n\twhile (token.channel !== this.channel) {\n\t\tif (token.type === Token.EOF) {\n\t\t\treturn -1;\n\t\t}\n\t\ti += 1;\n\t\tthis.sync(i);\n\t\ttoken = this.tokens[i];\n\t}\n\treturn i;\n};\n\n// Given a starting index, return the index of the previous token on channel.\n// Return i if tokens[i] is on channel. Return -1 if there are no tokens\n// on channel between i and 0.\nBufferedTokenStream.prototype.previousTokenOnChannel = function(i, channel) {\n\twhile (i >= 0 && this.tokens[i].channel !== channel) {\n\t\ti -= 1;\n\t}\n\treturn i;\n};\n\n// Collect all tokens on specified channel to the right of\n// the current token up until we see a token on DEFAULT_TOKEN_CHANNEL or\n// EOF. If channel is -1, find any non default channel token.\nBufferedTokenStream.prototype.getHiddenTokensToRight = function(tokenIndex,\n\t\tchannel) {\n\tif (channel === undefined) {\n\t\tchannel = -1;\n\t}\n\tthis.lazyInit();\n\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t}\n\tvar nextOnChannel = this.nextTokenOnChannel(tokenIndex + 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\tvar from_ = tokenIndex + 1;\n\t// if none onchannel to right, nextOnChannel=-1 so set to = last token\n\tvar to = nextOnChannel === -1 ? this.tokens.length - 1 : nextOnChannel;\n\treturn this.filterForChannel(from_, to, channel);\n};\n\n// Collect all tokens on specified channel to the left of\n// the current token up until we see a token on DEFAULT_TOKEN_CHANNEL.\n// If channel is -1, find any non default channel token.\nBufferedTokenStream.prototype.getHiddenTokensToLeft = function(tokenIndex,\n\t\tchannel) {\n\tif (channel === undefined) {\n\t\tchannel = -1;\n\t}\n\tthis.lazyInit();\n\tif (tokenIndex < 0 || tokenIndex >= this.tokens.length) {\n\t\tthrow \"\" + tokenIndex + \" not in 0..\" + this.tokens.length - 1;\n\t}\n\tvar prevOnChannel = this.previousTokenOnChannel(tokenIndex - 1, Lexer.DEFAULT_TOKEN_CHANNEL);\n\tif (prevOnChannel === tokenIndex - 1) {\n\t\treturn null;\n\t}\n\t// if none on channel to left, prevOnChannel=-1 then from=0\n\tvar from_ = prevOnChannel + 1;\n\tvar to = tokenIndex - 1;\n\treturn this.filterForChannel(from_, to, channel);\n};\n\nBufferedTokenStream.prototype.filterForChannel = function(left, right, channel) {\n\tvar hidden = [];\n\tfor (var i = left; i < right + 1; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (channel === -1) {\n\t\t\tif (t.channel !== Lexer.DEFAULT_TOKEN_CHANNEL) {\n\t\t\t\thidden.push(t);\n\t\t\t}\n\t\t} else if (t.channel === channel) {\n\t\t\thidden.push(t);\n\t\t}\n\t}\n\tif (hidden.length === 0) {\n\t\treturn null;\n\t}\n\treturn hidden;\n};\n\nBufferedTokenStream.prototype.getSourceName = function() {\n\treturn this.tokenSource.getSourceName();\n};\n\n// Get the text of all tokens in this buffer.///\nBufferedTokenStream.prototype.getText = function(interval) {\n\tthis.lazyInit();\n\tthis.fill();\n\tif (interval === undefined || interval === null) {\n\t\tinterval = new Interval(0, this.tokens.length - 1);\n\t}\n\tvar start = interval.start;\n\tif (start instanceof Token) {\n\t\tstart = start.tokenIndex;\n\t}\n\tvar stop = interval.stop;\n\tif (stop instanceof Token) {\n\t\tstop = stop.tokenIndex;\n\t}\n\tif (start === null || stop === null || start < 0 || stop < 0) {\n\t\treturn \"\";\n\t}\n\tif (stop >= this.tokens.length) {\n\t\tstop = this.tokens.length - 1;\n\t}\n\tvar s = \"\";\n\tfor (var i = start; i < stop + 1; i++) {\n\t\tvar t = this.tokens[i];\n\t\tif (t.type === Token.EOF) {\n\t\t\tbreak;\n\t\t}\n\t\ts = s + t.text;\n\t}\n\treturn s;\n};\n\n// Get all tokens from lexer until EOF///\nBufferedTokenStream.prototype.fill = function() {\n\tthis.lazyInit();\n\twhile (this.fetch(1000) === 1000) {\n\t\tcontinue;\n\t}\n};\n\nexports.BufferedTokenStream = BufferedTokenStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/BufferedTokenStream.js\n// module id = ExQ7\n// module chunks = 0 1","// removed by extract-text-webpack-plugin\n    if(module.hot) {\n      // 1514363257799\n      var cssReload = require(\"../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-hot-loader!./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3541c136\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/pagebuild/app.vue\n// module id = FQRy\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n//\n// This class extends {@link BufferedTokenStream} with functionality to filter\n// token streams to tokens on a particular channel (tokens where\n// {@link Token//getChannel} returns a particular value).\n//\n// <p>\n// This token stream provides access to all tokens by index or when calling\n// methods like {@link //getText}. The channel filtering is only used for code\n// accessing tokens via the lookahead methods {@link //LA}, {@link //LT}, and\n// {@link //LB}.</p>\n//\n// <p>\n// By default, tokens are placed on the default channel\n// ({@link Token//DEFAULT_CHANNEL}), but may be reassigned by using the\n// {@code ->channel(HIDDEN)} lexer command, or by using an embedded action to\n// call {@link Lexer//setChannel}.\n// </p>\n//\n// <p>\n// Note: lexer rules which use the {@code ->skip} lexer command or call\n// {@link Lexer//skip} do not produce tokens at all, so input text matched by\n// such a rule will not be available as part of the token stream, regardless of\n// channel.</p>\n///\n\nvar Token = require('./Token').Token;\nvar BufferedTokenStream = require('./BufferedTokenStream').BufferedTokenStream;\n\nfunction CommonTokenStream(lexer, channel) {\n\tBufferedTokenStream.call(this, lexer);\n    this.channel = channel===undefined ? Token.DEFAULT_CHANNEL : channel;\n    return this;\n}\n\nCommonTokenStream.prototype = Object.create(BufferedTokenStream.prototype);\nCommonTokenStream.prototype.constructor = CommonTokenStream;\n\nCommonTokenStream.prototype.adjustSeekIndex = function(i) {\n    return this.nextTokenOnChannel(i, this.channel);\n};\n\nCommonTokenStream.prototype.LB = function(k) {\n    if (k===0 || this.index-k<0) {\n        return null;\n    }\n    var i = this.index;\n    var n = 1;\n    // find k good tokens looking backwards\n    while (n <= k) {\n        // skip off-channel tokens\n        i = this.previousTokenOnChannel(i - 1, this.channel);\n        n += 1;\n    }\n    if (i < 0) {\n        return null;\n    }\n    return this.tokens[i];\n};\n\nCommonTokenStream.prototype.LT = function(k) {\n    this.lazyInit();\n    if (k === 0) {\n        return null;\n    }\n    if (k < 0) {\n        return this.LB(-k);\n    }\n    var i = this.index;\n    var n = 1; // we know tokens[pos] is a good one\n    // find k good tokens\n    while (n < k) {\n        // skip off-channel tokens, but make sure to not look past EOF\n        if (this.sync(i + 1)) {\n            i = this.nextTokenOnChannel(i + 1, this.channel);\n        }\n        n += 1;\n    }\n    return this.tokens[i];\n};\n\n// Count EOF just once.///\nCommonTokenStream.prototype.getNumberOfOnChannelTokens = function() {\n    var n = 0;\n    this.fill();\n    for (var i =0; i< this.tokens.length;i++) {\n        var t = this.tokens[i];\n        if( t.channel===this.channel) {\n            n += 1;\n        }\n        if( t.type===Token.EOF) {\n            break;\n        }\n    }\n    return n;\n};\n\nexports.CommonTokenStream = CommonTokenStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/CommonTokenStream.js\n// module id = Fzuw\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar InputStream = require('./InputStream').InputStream;\n\nvar isNodeJs = typeof window === 'undefined' && typeof importScripts === 'undefined';\nvar fs = isNodeJs ? require(\"fs\") : null;\n\n// Utility functions to create InputStreams from various sources.\n//\n// All returned InputStreams support the full range of Unicode\n// up to U+10FFFF (the default behavior of InputStream only supports\n// code points up to U+FFFF).\nvar CharStreams = {\n  // Creates an InputStream from a string.\n  fromString: function(str) {\n    return new InputStream(str, true);\n  },\n\n  // Asynchronously creates an InputStream from a blob given the\n  // encoding of the bytes in that blob (defaults to 'utf8' if\n  // encoding is null).\n  //\n  // Invokes onLoad(result) on success, onError(error) on\n  // failure.\n  fromBlob: function(blob, encoding, onLoad, onError) {\n    var reader = FileReader();\n    reader.onload = function(e) {\n      var is = new InputStream(e.target.result, true);\n      onLoad(is);\n    };\n    reader.onerror = onError;\n    reader.readAsText(blob, encoding);\n  },\n\n  // Creates an InputStream from a Buffer given the\n  // encoding of the bytes in that buffer (defaults to 'utf8' if\n  // encoding is null).\n  fromBuffer: function(buffer, encoding) {\n    return new InputStream(buffer.toString(encoding), true);\n  },\n\n  // Asynchronously creates an InputStream from a file on disk given\n  // the encoding of the bytes in that file (defaults to 'utf8' if\n  // encoding is null).\n  //\n  // Invokes callback(error, result) on completion.\n  fromPath: function(path, encoding, callback) {\n    fs.readFile(path, encoding, function(err, data) {\n      var is = null;\n      if (data !== null) {\n        is = new InputStream(data, true);\n      }\n      callback(err, is);\n    });\n  },\n\n  // Synchronously creates an InputStream given a path to a file\n  // on disk and the encoding of the bytes in that file (defaults to\n  // 'utf8' if encoding is null).\n  fromPathSync: function(path, encoding) {\n    var data = fs.readFileSync(path, encoding);\n    return new InputStream(data, true);\n  }\n};\n\nexports.CharStreams = CharStreams;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/CharStreams.js\n// module id = HNBV\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar ATNConfigSet = require('./../atn/ATNConfigSet').ATNConfigSet;\nvar Utils = require('./../Utils');\nvar Hash = Utils.Hash;\nvar Set = Utils.Set;\n\n// Map a predicate to a predicted alternative.///\n\nfunction PredPrediction(pred, alt) {\n\tthis.alt = alt;\n\tthis.pred = pred;\n\treturn this;\n}\n\nPredPrediction.prototype.toString = function() {\n\treturn \"(\" + this.pred + \", \" + this.alt + \")\";\n};\n\n// A DFA state represents a set of possible ATN configurations.\n// As Aho, Sethi, Ullman p. 117 says \"The DFA uses its state\n// to keep track of all possible states the ATN can be in after\n// reading each input symbol. That is to say, after reading\n// input a1a2..an, the DFA is in a state that represents the\n// subset T of the states of the ATN that are reachable from the\n// ATN's start state along some path labeled a1a2..an.\"\n// In conventional NFA&rarr;DFA conversion, therefore, the subset T\n// would be a bitset representing the set of states the\n// ATN could be in. We need to track the alt predicted by each\n// state as well, however. More importantly, we need to maintain\n// a stack of states, tracking the closure operations as they\n// jump from rule to rule, emulating rule invocations (method calls).\n// I have to add a stack to simulate the proper lookahead sequences for\n// the underlying LL grammar from which the ATN was derived.\n//\n// <p>I use a set of ATNConfig objects not simple states. An ATNConfig\n// is both a state (ala normal conversion) and a RuleContext describing\n// the chain of rules (if any) followed to arrive at that state.</p>\n//\n// <p>A DFA state may have multiple references to a particular state,\n// but with different ATN contexts (with same or different alts)\n// meaning that state was reached via a different set of rule invocations.</p>\n// /\n\nfunction DFAState(stateNumber, configs) {\n\tif (stateNumber === null) {\n\t\tstateNumber = -1;\n\t}\n\tif (configs === null) {\n\t\tconfigs = new ATNConfigSet();\n\t}\n\tthis.stateNumber = stateNumber;\n\tthis.configs = configs;\n\t// {@code edges[symbol]} points to target of symbol. Shift up by 1 so (-1)\n\t// {@link Token//EOF} maps to {@code edges[0]}.\n\tthis.edges = null;\n\tthis.isAcceptState = false;\n\t// if accept state, what ttype do we match or alt do we predict?\n\t// This is set to {@link ATN//INVALID_ALT_NUMBER} when {@link\n\t// //predicates}{@code !=null} or\n\t// {@link //requiresFullContext}.\n\tthis.prediction = 0;\n\tthis.lexerActionExecutor = null;\n\t// Indicates that this state was created during SLL prediction that\n\t// discovered a conflict between the configurations in the state. Future\n\t// {@link ParserATNSimulator//execATN} invocations immediately jumped doing\n\t// full context prediction if this field is true.\n\tthis.requiresFullContext = false;\n\t// During SLL parsing, this is a list of predicates associated with the\n\t// ATN configurations of the DFA state. When we have predicates,\n\t// {@link //requiresFullContext} is {@code false} since full context\n\t// prediction evaluates predicates\n\t// on-the-fly. If this is not null, then {@link //prediction} is\n\t// {@link ATN//INVALID_ALT_NUMBER}.\n\t//\n\t// <p>We only use these for non-{@link //requiresFullContext} but\n\t// conflicting states. That\n\t// means we know from the context (it's $ or we don't dip into outer\n\t// context) that it's an ambiguity not a conflict.</p>\n\t//\n\t// <p>This list is computed by {@link\n\t// ParserATNSimulator//predicateDFAState}.</p>\n\tthis.predicates = null;\n\treturn this;\n}\n\n// Get the set of all alts mentioned by all ATN configurations in this\n// DFA state.\nDFAState.prototype.getAltSet = function() {\n\tvar alts = new Set();\n\tif (this.configs !== null) {\n\t\tfor (var i = 0; i < this.configs.length; i++) {\n\t\t\tvar c = this.configs[i];\n\t\t\talts.add(c.alt);\n\t\t}\n\t}\n\tif (alts.length === 0) {\n\t\treturn null;\n\t} else {\n\t\treturn alts;\n\t}\n};\n\n// Two {@link DFAState} instances are equal if their ATN configuration sets\n// are the same. This method is used to see if a state already exists.\n//\n// <p>Because the number of alternatives and number of ATN configurations are\n// finite, there is a finite number of DFA states that can be processed.\n// This is necessary to show that the algorithm terminates.</p>\n//\n// <p>Cannot test the DFA state numbers here because in\n// {@link ParserATNSimulator//addDFAState} we need to know if any other state\n// exists that has this exact set of ATN configurations. The\n// {@link //stateNumber} is irrelevant.</p>\nDFAState.prototype.equals = function(other) {\n\t// compare set of ATN configurations in this set with other\n\treturn this === other ||\n\t\t\t(other instanceof DFAState &&\n\t\t\t\tthis.configs.equals(other.configs));\n};\n\nDFAState.prototype.toString = function() {\n\tvar s = \"\" + this.stateNumber + \":\" + this.configs;\n\tif(this.isAcceptState) {\n        s = s + \"=>\";\n        if (this.predicates !== null)\n            s = s + this.predicates;\n        else\n            s = s + this.prediction;\n    }\n\treturn s;\n};\n\nDFAState.prototype.hashCode = function() {\n\tvar hash = new Hash();\n\thash.update(this.configs);\n\tif(this.isAcceptState) {\n        if (this.predicates !== null)\n            hash.update(this.predicates);\n        else\n            hash.update(this.prediction);\n    }\n    return hash.finish();\n};\n\nexports.DFAState = DFAState;\nexports.PredPrediction = PredPrediction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/dfa/DFAState.js\n// module id = IUCG\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n //\n\nfunction LexerActionType() {\n}\n\nLexerActionType.CHANNEL = 0;     //The type of a {@link LexerChannelAction} action.\nLexerActionType.CUSTOM = 1;      //The type of a {@link LexerCustomAction} action.\nLexerActionType.MODE = 2;        //The type of a {@link LexerModeAction} action.\nLexerActionType.MORE = 3;        //The type of a {@link LexerMoreAction} action.\nLexerActionType.POP_MODE = 4;    //The type of a {@link LexerPopModeAction} action.\nLexerActionType.PUSH_MODE = 5;   //The type of a {@link LexerPushModeAction} action.\nLexerActionType.SKIP = 6;        //The type of a {@link LexerSkipAction} action.\nLexerActionType.TYPE = 7;        //The type of a {@link LexerTypeAction} action.\n\nfunction LexerAction(action) {\n    this.actionType = action;\n    this.isPositionDependent = false;\n    return this;\n}\n\nLexerAction.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish()\n};\n\nLexerAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType);\n};\n\nLexerAction.prototype.equals = function(other) {\n    return this === other;\n};\n\n\n\n//\n// Implements the {@code skip} lexer action by calling {@link Lexer//skip}.\n//\n// <p>The {@code skip} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerSkipAction() {\n\tLexerAction.call(this, LexerActionType.SKIP);\n\treturn this;\n}\n\nLexerSkipAction.prototype = Object.create(LexerAction.prototype);\nLexerSkipAction.prototype.constructor = LexerSkipAction;\n\n// Provides a singleton instance of this parameterless lexer action.\nLexerSkipAction.INSTANCE = new LexerSkipAction();\n\nLexerSkipAction.prototype.execute = function(lexer) {\n    lexer.skip();\n};\n\nLexerSkipAction.prototype.toString = function() {\n\treturn \"skip\";\n};\n\n//  Implements the {@code type} lexer action by calling {@link Lexer//setType}\n// with the assigned type.\nfunction LexerTypeAction(type) {\n\tLexerAction.call(this, LexerActionType.TYPE);\n\tthis.type = type;\n\treturn this;\n}\n\nLexerTypeAction.prototype = Object.create(LexerAction.prototype);\nLexerTypeAction.prototype.constructor = LexerTypeAction;\n\nLexerTypeAction.prototype.execute = function(lexer) {\n    lexer.type = this.type;\n};\n\nLexerTypeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.type);\n};\n\n\nLexerTypeAction.prototype.equals = function(other) {\n    if(this === other) {\n        return true;\n    } else if (! (other instanceof LexerTypeAction)) {\n        return false;\n    } else {\n        return this.type === other.type;\n    }\n};\n\nLexerTypeAction.prototype.toString = function() {\n    return \"type(\" + this.type + \")\";\n};\n\n// Implements the {@code pushMode} lexer action by calling\n// {@link Lexer//pushMode} with the assigned mode.\nfunction LexerPushModeAction(mode) {\n\tLexerAction.call(this, LexerActionType.PUSH_MODE);\n    this.mode = mode;\n    return this;\n}\n\nLexerPushModeAction.prototype = Object.create(LexerAction.prototype);\nLexerPushModeAction.prototype.constructor = LexerPushModeAction;\n\n// <p>This action is implemented by calling {@link Lexer//pushMode} with the\n// value provided by {@link //getMode}.</p>\nLexerPushModeAction.prototype.execute = function(lexer) {\n    lexer.pushMode(this.mode);\n};\n\nLexerPushModeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.mode);\n};\n\nLexerPushModeAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerPushModeAction)) {\n        return false;\n    } else {\n        return this.mode === other.mode;\n    }\n};\n\nLexerPushModeAction.prototype.toString = function() {\n\treturn \"pushMode(\" + this.mode + \")\";\n};\n\n\n// Implements the {@code popMode} lexer action by calling {@link Lexer//popMode}.\n//\n// <p>The {@code popMode} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerPopModeAction() {\n\tLexerAction.call(this,LexerActionType.POP_MODE);\n\treturn this;\n}\n\nLexerPopModeAction.prototype = Object.create(LexerAction.prototype);\nLexerPopModeAction.prototype.constructor = LexerPopModeAction;\n\nLexerPopModeAction.INSTANCE = new LexerPopModeAction();\n\n// <p>This action is implemented by calling {@link Lexer//popMode}.</p>\nLexerPopModeAction.prototype.execute = function(lexer) {\n    lexer.popMode();\n};\n\nLexerPopModeAction.prototype.toString = function() {\n\treturn \"popMode\";\n};\n\n// Implements the {@code more} lexer action by calling {@link Lexer//more}.\n//\n// <p>The {@code more} command does not have any parameters, so this action is\n// implemented as a singleton instance exposed by {@link //INSTANCE}.</p>\nfunction LexerMoreAction() {\n\tLexerAction.call(this, LexerActionType.MORE);\n\treturn this;\n}\n\nLexerMoreAction.prototype = Object.create(LexerAction.prototype);\nLexerMoreAction.prototype.constructor = LexerMoreAction;\n\nLexerMoreAction.INSTANCE = new LexerMoreAction();\n\n// <p>This action is implemented by calling {@link Lexer//popMode}.</p>\nLexerMoreAction.prototype.execute = function(lexer) {\n    lexer.more();\n};\n\nLexerMoreAction.prototype.toString = function() {\n    return \"more\";\n};\n\n\n// Implements the {@code mode} lexer action by calling {@link Lexer//mode} with\n// the assigned mode.\nfunction LexerModeAction(mode) {\n\tLexerAction.call(this, LexerActionType.MODE);\n    this.mode = mode;\n    return this;\n}\n\nLexerModeAction.prototype = Object.create(LexerAction.prototype);\nLexerModeAction.prototype.constructor = LexerModeAction;\n\n// <p>This action is implemented by calling {@link Lexer//mode} with the\n// value provided by {@link //getMode}.</p>\nLexerModeAction.prototype.execute = function(lexer) {\n    lexer.mode(this.mode);\n};\n\nLexerModeAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.mode);\n};\n\nLexerModeAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerModeAction)) {\n        return false;\n    } else {\n        return this.mode === other.mode;\n    }\n};\n\nLexerModeAction.prototype.toString = function() {\n    return \"mode(\" + this.mode + \")\";\n};\n\n// Executes a custom lexer action by calling {@link Recognizer//action} with the\n// rule and action indexes assigned to the custom action. The implementation of\n// a custom action is added to the generated code for the lexer in an override\n// of {@link Recognizer//action} when the grammar is compiled.\n//\n// <p>This class may represent embedded actions created with the <code>{...}</code>\n// syntax in ANTLR 4, as well as actions created for lexer commands where the\n// command argument could not be evaluated when the grammar was compiled.</p>\n\n\n    // Constructs a custom lexer action with the specified rule and action\n    // indexes.\n    //\n    // @param ruleIndex The rule index to use for calls to\n    // {@link Recognizer//action}.\n    // @param actionIndex The action index to use for calls to\n    // {@link Recognizer//action}.\n\nfunction LexerCustomAction(ruleIndex, actionIndex) {\n\tLexerAction.call(this, LexerActionType.CUSTOM);\n    this.ruleIndex = ruleIndex;\n    this.actionIndex = actionIndex;\n    this.isPositionDependent = true;\n    return this;\n}\n\nLexerCustomAction.prototype = Object.create(LexerAction.prototype);\nLexerCustomAction.prototype.constructor = LexerCustomAction;\n\n// <p>Custom actions are implemented by calling {@link Lexer//action} with the\n// appropriate rule and action indexes.</p>\nLexerCustomAction.prototype.execute = function(lexer) {\n    lexer.action(null, this.ruleIndex, this.actionIndex);\n};\n\nLexerCustomAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.ruleIndex, this.actionIndex);\n};\n\nLexerCustomAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerCustomAction)) {\n        return false;\n    } else {\n        return this.ruleIndex === other.ruleIndex && this.actionIndex === other.actionIndex;\n    }\n};\n\n// Implements the {@code channel} lexer action by calling\n// {@link Lexer//setChannel} with the assigned channel.\n// Constructs a new {@code channel} action with the specified channel value.\n// @param channel The channel value to pass to {@link Lexer//setChannel}.\nfunction LexerChannelAction(channel) {\n\tLexerAction.call(this, LexerActionType.CHANNEL);\n    this.channel = channel;\n    return this;\n}\n\nLexerChannelAction.prototype = Object.create(LexerAction.prototype);\nLexerChannelAction.prototype.constructor = LexerChannelAction;\n\n// <p>This action is implemented by calling {@link Lexer//setChannel} with the\n// value provided by {@link //getChannel}.</p>\nLexerChannelAction.prototype.execute = function(lexer) {\n    lexer._channel = this.channel;\n};\n\nLexerChannelAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.channel);\n};\n\nLexerChannelAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerChannelAction)) {\n        return false;\n    } else {\n        return this.channel === other.channel;\n    }\n};\n\nLexerChannelAction.prototype.toString = function() {\n    return \"channel(\" + this.channel + \")\";\n};\n\n// This implementation of {@link LexerAction} is used for tracking input offsets\n// for position-dependent actions within a {@link LexerActionExecutor}.\n//\n// <p>This action is not serialized as part of the ATN, and is only required for\n// position-dependent lexer actions which appear at a location other than the\n// end of a rule. For more information about DFA optimizations employed for\n// lexer actions, see {@link LexerActionExecutor//append} and\n// {@link LexerActionExecutor//fixOffsetBeforeMatch}.</p>\n\n// Constructs a new indexed custom action by associating a character offset\n// with a {@link LexerAction}.\n//\n// <p>Note: This class is only required for lexer actions for which\n// {@link LexerAction//isPositionDependent} returns {@code true}.</p>\n//\n// @param offset The offset into the input {@link CharStream}, relative to\n// the token start index, at which the specified lexer action should be\n// executed.\n// @param action The lexer action to execute at a particular offset in the\n// input {@link CharStream}.\nfunction LexerIndexedCustomAction(offset, action) {\n\tLexerAction.call(this, action.actionType);\n    this.offset = offset;\n    this.action = action;\n    this.isPositionDependent = true;\n    return this;\n}\n\nLexerIndexedCustomAction.prototype = Object.create(LexerAction.prototype);\nLexerIndexedCustomAction.prototype.constructor = LexerIndexedCustomAction;\n\n// <p>This method calls {@link //execute} on the result of {@link //getAction}\n// using the provided {@code lexer}.</p>\nLexerIndexedCustomAction.prototype.execute = function(lexer) {\n    // assume the input stream position was properly set by the calling code\n    this.action.execute(lexer);\n};\n\nLexerIndexedCustomAction.prototype.updateHashCode = function(hash) {\n    hash.update(this.actionType, this.offset, this.action);\n};\n\nLexerIndexedCustomAction.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof LexerIndexedCustomAction)) {\n        return false;\n    } else {\n        return this.offset === other.offset && this.action === other.action;\n    }\n};\n\n\nexports.LexerActionType = LexerActionType;\nexports.LexerSkipAction = LexerSkipAction;\nexports.LexerChannelAction = LexerChannelAction;\nexports.LexerCustomAction = LexerCustomAction;\nexports.LexerIndexedCustomAction = LexerIndexedCustomAction;\nexports.LexerMoreAction = LexerMoreAction;\nexports.LexerTypeAction = LexerTypeAction;\nexports.LexerPushModeAction = LexerPushModeAction;\nexports.LexerPopModeAction = LexerPopModeAction;\nexports.LexerModeAction = LexerModeAction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/LexerAction.js\n// module id = J8R0\n// module chunks = 0 1","// removed by extract-text-webpack-plugin\n    if(module.hot) {\n      // 1514363258414\n      var cssReload = require(\"../../../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-hot-loader!./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-4774b55e\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/pagebuild/ui-lib/contract-steps/index.vue\n// module id = L6wg\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n//\n// This enumeration defines the prediction modes available in ANTLR 4 along with\n// utility methods for analyzing configuration sets for conflicts and/or\n// ambiguities.\n\nvar Set = require('./../Utils').Set;\nvar Map = require('./../Utils').Map;\nvar BitSet = require('./../Utils').BitSet;\nvar AltDict = require('./../Utils').AltDict;\nvar ATN = require('./ATN').ATN;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar ATNConfig = require('./ATNConfig').ATNConfig;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar Hash = require(\"../Utils\").Hash;\nvar hashStuff = require('./../Utils').hashStuff;\nvar equalArrays = require('./../Utils').equalArrays;\n\nfunction PredictionMode() {\n\treturn this;\n}\n\n//\n// The SLL(*) prediction mode. This prediction mode ignores the current\n// parser context when making predictions. This is the fastest prediction\n// mode, and provides correct results for many grammars. This prediction\n// mode is more powerful than the prediction mode provided by ANTLR 3, but\n// may result in syntax errors for grammar and input combinations which are\n// not SLL.\n//\n// <p>\n// When using this prediction mode, the parser will either return a correct\n// parse tree (i.e. the same parse tree that would be returned with the\n// {@link //LL} prediction mode), or it will report a syntax error. If a\n// syntax error is encountered when using the {@link //SLL} prediction mode,\n// it may be due to either an actual syntax error in the input or indicate\n// that the particular combination of grammar and input requires the more\n// powerful {@link //LL} prediction abilities to complete successfully.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.SLL = 0;\n//\n// The LL(*) prediction mode. This prediction mode allows the current parser\n// context to be used for resolving SLL conflicts that occur during\n// prediction. This is the fastest prediction mode that guarantees correct\n// parse results for all combinations of grammars with syntactically correct\n// inputs.\n//\n// <p>\n// When using this prediction mode, the parser will make correct decisions\n// for all syntactically-correct grammar and input combinations. However, in\n// cases where the grammar is truly ambiguous this prediction mode might not\n// report a precise answer for <em>exactly which</em> alternatives are\n// ambiguous.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.LL = 1;\n//\n// The LL(*) prediction mode with exact ambiguity detection. In addition to\n// the correctness guarantees provided by the {@link //LL} prediction mode,\n// this prediction mode instructs the prediction algorithm to determine the\n// complete and exact set of ambiguous alternatives for every ambiguous\n// decision encountered while parsing.\n//\n// <p>\n// This prediction mode may be used for diagnosing ambiguities during\n// grammar development. Due to the performance overhead of calculating sets\n// of ambiguous alternatives, this prediction mode should be avoided when\n// the exact results are not necessary.</p>\n//\n// <p>\n// This prediction mode does not provide any guarantees for prediction\n// behavior for syntactically-incorrect inputs.</p>\n//\nPredictionMode.LL_EXACT_AMBIG_DETECTION = 2;\n\n\n//\n// Computes the SLL prediction termination condition.\n//\n// <p>\n// This method computes the SLL prediction termination condition for both of\n// the following cases.</p>\n//\n// <ul>\n// <li>The usual SLL+LL fallback upon SLL conflict</li>\n// <li>Pure SLL without LL fallback</li>\n// </ul>\n//\n// <p><strong>COMBINED SLL+LL PARSING</strong></p>\n//\n// <p>When LL-fallback is enabled upon SLL conflict, correct predictions are\n// ensured regardless of how the termination condition is computed by this\n// method. Due to the substantially higher cost of LL prediction, the\n// prediction should only fall back to LL when the additional lookahead\n// cannot lead to a unique SLL prediction.</p>\n//\n// <p>Assuming combined SLL+LL parsing, an SLL configuration set with only\n// conflicting subsets should fall back to full LL, even if the\n// configuration sets don't resolve to the same alternative (e.g.\n// {@code {1,2}} and {@code {3,4}}. If there is at least one non-conflicting\n// configuration, SLL could continue with the hopes that more lookahead will\n// resolve via one of those non-conflicting configurations.</p>\n//\n// <p>Here's the prediction termination rule them: SLL (for SLL+LL parsing)\n// stops when it sees only conflicting configuration subsets. In contrast,\n// full LL keeps going when there is uncertainty.</p>\n//\n// <p><strong>HEURISTIC</strong></p>\n//\n// <p>As a heuristic, we stop prediction when we see any conflicting subset\n// unless we see a state that only has one alternative associated with it.\n// The single-alt-state thing lets prediction continue upon rules like\n// (otherwise, it would admit defeat too soon):</p>\n//\n// <p>{@code [12|1|[], 6|2|[], 12|2|[]]. s : (ID | ID ID?) ';' ;}</p>\n//\n// <p>When the ATN simulation reaches the state before {@code ';'}, it has a\n// DFA state that looks like: {@code [12|1|[], 6|2|[], 12|2|[]]}. Naturally\n// {@code 12|1|[]} and {@code 12|2|[]} conflict, but we cannot stop\n// processing this node because alternative to has another way to continue,\n// via {@code [6|2|[]]}.</p>\n//\n// <p>It also let's us continue for this rule:</p>\n//\n// <p>{@code [1|1|[], 1|2|[], 8|3|[]] a : A | A | A B ;}</p>\n//\n// <p>After matching input A, we reach the stop state for rule A, state 1.\n// State 8 is the state right before B. Clearly alternatives 1 and 2\n// conflict and no amount of further lookahead will separate the two.\n// However, alternative 3 will be able to continue and so we do not stop\n// working on this state. In the previous example, we're concerned with\n// states associated with the conflicting alternatives. Here alt 3 is not\n// associated with the conflicting configs, but since we can continue\n// looking for input reasonably, don't declare the state done.</p>\n//\n// <p><strong>PURE SLL PARSING</strong></p>\n//\n// <p>To handle pure SLL parsing, all we have to do is make sure that we\n// combine stack contexts for configurations that differ only by semantic\n// predicate. From there, we can do the usual SLL termination heuristic.</p>\n//\n// <p><strong>PREDICATES IN SLL+LL PARSING</strong></p>\n//\n// <p>SLL decisions don't evaluate predicates until after they reach DFA stop\n// states because they need to create the DFA cache that works in all\n// semantic situations. In contrast, full LL evaluates predicates collected\n// during start state computation so it can ignore predicates thereafter.\n// This means that SLL termination detection can totally ignore semantic\n// predicates.</p>\n//\n// <p>Implementation-wise, {@link ATNConfigSet} combines stack contexts but not\n// semantic predicate contexts so we might see two configurations like the\n// following.</p>\n//\n// <p>{@code (s, 1, x, {}), (s, 1, x', {p})}</p>\n//\n// <p>Before testing these configurations against others, we have to merge\n// {@code x} and {@code x'} (without modifying the existing configurations).\n// For example, we test {@code (x+x')==x''} when looking for conflicts in\n// the following configurations.</p>\n//\n// <p>{@code (s, 1, x, {}), (s, 1, x', {p}), (s, 2, x'', {})}</p>\n//\n// <p>If the configuration set has predicates (as indicated by\n// {@link ATNConfigSet//hasSemanticContext}), this algorithm makes a copy of\n// the configurations to strip out all of the predicates so that a standard\n// {@link ATNConfigSet} will merge everything ignoring predicates.</p>\n//\nPredictionMode.hasSLLConflictTerminatingPrediction = function( mode, configs) {\n    // Configs in rule stop states indicate reaching the end of the decision\n    // rule (local context) or end of start rule (full context). If all\n    // configs meet this condition, then none of the configurations is able\n    // to match additional input so we terminate prediction.\n    //\n    if (PredictionMode.allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    // pure SLL mode parsing\n    if (mode === PredictionMode.SLL) {\n        // Don't bother with combining configs from different semantic\n        // contexts if we can fail over to full LL; costs more time\n        // since we'll often fail over anyway.\n        if (configs.hasSemanticContext) {\n            // dup configs, tossing out semantic predicates\n            var dup = new ATNConfigSet();\n            for(var i=0;i<configs.items.length;i++) {\n            \tvar c = configs.items[i];\n                c = new ATNConfig({semanticContext:SemanticContext.NONE}, c);\n                dup.add(c);\n            }\n            configs = dup;\n        }\n        // now we have combined contexts for configs with dissimilar preds\n    }\n    // pure SLL or combined SLL+LL mode parsing\n    var altsets = PredictionMode.getConflictingAltSubsets(configs);\n    return PredictionMode.hasConflictingAltSet(altsets) && !PredictionMode.hasStateAssociatedWithOneAlt(configs);\n};\n\n// Checks if any configuration in {@code configs} is in a\n// {@link RuleStopState}. Configurations meeting this condition have reached\n// the end of the decision rule (local context) or end of start rule (full\n// context).\n//\n// @param configs the configuration set to test\n// @return {@code true} if any configuration in {@code configs} is in a\n// {@link RuleStopState}, otherwise {@code false}\nPredictionMode.hasConfigInRuleStopState = function(configs) {\n\tfor(var i=0;i<configs.items.length;i++) {\n\t\tvar c = configs.items[i];\n        if (c.state instanceof RuleStopState) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n// Checks if all configurations in {@code configs} are in a\n// {@link RuleStopState}. Configurations meeting this condition have reached\n// the end of the decision rule (local context) or end of start rule (full\n// context).\n//\n// @param configs the configuration set to test\n// @return {@code true} if all configurations in {@code configs} are in a\n// {@link RuleStopState}, otherwise {@code false}\nPredictionMode.allConfigsInRuleStopStates = function(configs) {\n\tfor(var i=0;i<configs.items.length;i++) {\n\t\tvar c = configs.items[i];\n        if (!(c.state instanceof RuleStopState)) {\n            return false;\n        }\n\t}\n    return true;\n};\n\n//\n// Full LL prediction termination.\n//\n// <p>Can we stop looking ahead during ATN simulation or is there some\n// uncertainty as to which alternative we will ultimately pick, after\n// consuming more input? Even if there are partial conflicts, we might know\n// that everything is going to resolve to the same minimum alternative. That\n// means we can stop since no more lookahead will change that fact. On the\n// other hand, there might be multiple conflicts that resolve to different\n// minimums. That means we need more look ahead to decide which of those\n// alternatives we should predict.</p>\n//\n// <p>The basic idea is to split the set of configurations {@code C}, into\n// conflicting subsets {@code (s, _, ctx, _)} and singleton subsets with\n// non-conflicting configurations. Two configurations conflict if they have\n// identical {@link ATNConfig//state} and {@link ATNConfig//context} values\n// but different {@link ATNConfig//alt} value, e.g. {@code (s, i, ctx, _)}\n// and {@code (s, j, ctx, _)} for {@code i!=j}.</p>\n//\n// <p>Reduce these configuration subsets to the set of possible alternatives.\n// You can compute the alternative subsets in one pass as follows:</p>\n//\n// <p>{@code A_s,ctx = {i | (s, i, ctx, _)}} for each configuration in\n// {@code C} holding {@code s} and {@code ctx} fixed.</p>\n//\n// <p>Or in pseudo-code, for each configuration {@code c} in {@code C}:</p>\n//\n// <pre>\n// map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n// alt and not pred\n// </pre>\n//\n// <p>The values in {@code map} are the set of {@code A_s,ctx} sets.</p>\n//\n// <p>If {@code |A_s,ctx|=1} then there is no conflict associated with\n// {@code s} and {@code ctx}.</p>\n//\n// <p>Reduce the subsets to singletons by choosing a minimum of each subset. If\n// the union of these alternative subsets is a singleton, then no amount of\n// more lookahead will help us. We will always pick that alternative. If,\n// however, there is more than one alternative, then we are uncertain which\n// alternative to predict and must continue looking for resolution. We may\n// or may not discover an ambiguity in the future, even if there are no\n// conflicting subsets this round.</p>\n//\n// <p>The biggest sin is to terminate early because it means we've made a\n// decision but were uncertain as to the eventual outcome. We haven't used\n// enough lookahead. On the other hand, announcing a conflict too late is no\n// big deal; you will still have the conflict. It's just inefficient. It\n// might even look until the end of file.</p>\n//\n// <p>No special consideration for semantic predicates is required because\n// predicates are evaluated on-the-fly for full LL prediction, ensuring that\n// no configuration contains a semantic context during the termination\n// check.</p>\n//\n// <p><strong>CONFLICTING CONFIGS</strong></p>\n//\n// <p>Two configurations {@code (s, i, x)} and {@code (s, j, x')}, conflict\n// when {@code i!=j} but {@code x=x'}. Because we merge all\n// {@code (s, i, _)} configurations together, that means that there are at\n// most {@code n} configurations associated with state {@code s} for\n// {@code n} possible alternatives in the decision. The merged stacks\n// complicate the comparison of configuration contexts {@code x} and\n// {@code x'}. Sam checks to see if one is a subset of the other by calling\n// merge and checking to see if the merged result is either {@code x} or\n// {@code x'}. If the {@code x} associated with lowest alternative {@code i}\n// is the superset, then {@code i} is the only possible prediction since the\n// others resolve to {@code min(i)} as well. However, if {@code x} is\n// associated with {@code j>i} then at least one stack configuration for\n// {@code j} is not in conflict with alternative {@code i}. The algorithm\n// should keep going, looking for more lookahead due to the uncertainty.</p>\n//\n// <p>For simplicity, I'm doing a equality check between {@code x} and\n// {@code x'} that lets the algorithm continue to consume lookahead longer\n// than necessary. The reason I like the equality is of course the\n// simplicity but also because that is the test you need to detect the\n// alternatives that are actually in conflict.</p>\n//\n// <p><strong>CONTINUE/STOP RULE</strong></p>\n//\n// <p>Continue if union of resolved alternative sets from non-conflicting and\n// conflicting alternative subsets has more than one alternative. We are\n// uncertain about which alternative to predict.</p>\n//\n// <p>The complete set of alternatives, {@code [i for (_,i,_)]}, tells us which\n// alternatives are still in the running for the amount of input we've\n// consumed at this point. The conflicting sets let us to strip away\n// configurations that won't lead to more states because we resolve\n// conflicts to the configuration with a minimum alternate for the\n// conflicting set.</p>\n//\n// <p><strong>CASES</strong></p>\n//\n// <ul>\n//\n// <li>no conflicts and more than 1 alternative in set =&gt; continue</li>\n//\n// <li> {@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s, 3, z)},\n// {@code (s', 1, y)}, {@code (s', 2, y)} yields non-conflicting set\n// {@code {3}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n// {@code {1,3}} =&gt; continue\n// </li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n// {@code (s', 2, y)}, {@code (s'', 1, z)} yields non-conflicting set\n// {@code {1}} U conflicting sets {@code min({1,2})} U {@code min({1,2})} =\n// {@code {1}} =&gt; stop and predict 1</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 1, y)},\n// {@code (s', 2, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {1}} = {@code {1}} =&gt; stop and predict 1, can announce\n// ambiguity {@code {1,2}}</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 2, y)},\n// {@code (s', 3, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {2}} = {@code {1,2}} =&gt; continue</li>\n//\n// <li>{@code (s, 1, x)}, {@code (s, 2, x)}, {@code (s', 3, y)},\n// {@code (s', 4, y)} yields conflicting, reduced sets {@code {1}} U\n// {@code {3}} = {@code {1,3}} =&gt; continue</li>\n//\n// </ul>\n//\n// <p><strong>EXACT AMBIGUITY DETECTION</strong></p>\n//\n// <p>If all states report the same conflicting set of alternatives, then we\n// know we have the exact ambiguity set.</p>\n//\n// <p><code>|A_<em>i</em>|&gt;1</code> and\n// <code>A_<em>i</em> = A_<em>j</em></code> for all <em>i</em>, <em>j</em>.</p>\n//\n// <p>In other words, we continue examining lookahead until all {@code A_i}\n// have more than one alternative and all {@code A_i} are the same. If\n// {@code A={{1,2}, {1,3}}}, then regular LL prediction would terminate\n// because the resolved set is {@code {1}}. To determine what the real\n// ambiguity is, we have to know whether the ambiguity is between one and\n// two or one and three so we keep going. We can only stop prediction when\n// we need exact ambiguity detection when the sets look like\n// {@code A={{1,2}}} or {@code {{1,2},{1,2}}}, etc...</p>\n//\nPredictionMode.resolvesToJustOneViableAlt = function(altsets) {\n    return PredictionMode.getSingleViableAlt(altsets);\n};\n\n//\n// Determines if every alternative subset in {@code altsets} contains more\n// than one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if every {@link BitSet} in {@code altsets} has\n// {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n//\nPredictionMode.allSubsetsConflict = function(altsets) {\n    return ! PredictionMode.hasNonConflictingAltSet(altsets);\n};\n//\n// Determines if any single alternative subset in {@code altsets} contains\n// exactly one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if {@code altsets} contains a {@link BitSet} with\n// {@link BitSet//cardinality cardinality} 1, otherwise {@code false}\n//\nPredictionMode.hasNonConflictingAltSet = function(altsets) {\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (alts.length===1) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n//\n// Determines if any single alternative subset in {@code altsets} contains\n// more than one alternative.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if {@code altsets} contains a {@link BitSet} with\n// {@link BitSet//cardinality cardinality} &gt; 1, otherwise {@code false}\n//\nPredictionMode.hasConflictingAltSet = function(altsets) {\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (alts.length>1) {\n            return true;\n        }\n\t}\n    return false;\n};\n\n//\n// Determines if every alternative subset in {@code altsets} is equivalent.\n//\n// @param altsets a collection of alternative subsets\n// @return {@code true} if every member of {@code altsets} is equal to the\n// others, otherwise {@code false}\n//\nPredictionMode.allSubsetsEqual = function(altsets) {\n    var first = null;\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        if (first === null) {\n            first = alts;\n        } else if (alts!==first) {\n            return false;\n        }\n\t}\n    return true;\n};\n\n//\n// Returns the unique alternative predicted by all alternative subsets in\n// {@code altsets}. If no such alternative exists, this method returns\n// {@link ATN//INVALID_ALT_NUMBER}.\n//\n// @param altsets a collection of alternative subsets\n//\nPredictionMode.getUniqueAlt = function(altsets) {\n    var all = PredictionMode.getAlts(altsets);\n    if (all.length===1) {\n        return all.minValue();\n    } else {\n        return ATN.INVALID_ALT_NUMBER;\n    }\n};\n\n// Gets the complete set of represented alternatives for a collection of\n// alternative subsets. This method returns the union of each {@link BitSet}\n// in {@code altsets}.\n//\n// @param altsets a collection of alternative subsets\n// @return the set of represented alternatives in {@code altsets}\n//\nPredictionMode.getAlts = function(altsets) {\n    var all = new BitSet();\n    altsets.map( function(alts) { all.or(alts); });\n    return all;\n};\n\n//\n// This function gets the conflicting alt subsets from a configuration set.\n// For each configuration {@code c} in {@code configs}:\n//\n// <pre>\n// map[c] U= c.{@link ATNConfig//alt alt} // map hash/equals uses s and x, not\n// alt and not pred\n// </pre>\n\nPredictionMode.getConflictingAltSubsets = function(configs) {\n    var configToAlts = new Map();\n    configToAlts.hashFunction = function(cfg) { hashStuff(cfg.state.stateNumber, cfg.context); };\n    configToAlts.equalsFunction = function(c1, c2) { return c1.state.stateNumber==c2.state.stateNumber && c1.context.equals(c2.context);}\n    configs.items.map(function(cfg) {\n        var alts = configToAlts.get(cfg);\n        if (alts === null) {\n            alts = new BitSet();\n            configToAlts.put(cfg, alts);\n        }\n        alts.add(cfg.alt);\n\t});\n    return configToAlts.getValues();\n};\n\n//\n// Get a map from state to alt subset from a configuration set. For each\n// configuration {@code c} in {@code configs}:\n//\n// <pre>\n// map[c.{@link ATNConfig//state state}] U= c.{@link ATNConfig//alt alt}\n// </pre>\n//\nPredictionMode.getStateToAltMap = function(configs) {\n    var m = new AltDict();\n    configs.items.map(function(c) {\n        var alts = m.get(c.state);\n        if (alts === null) {\n            alts = new BitSet();\n            m.put(c.state, alts);\n        }\n        alts.add(c.alt);\n    });\n    return m;\n};\n\nPredictionMode.hasStateAssociatedWithOneAlt = function(configs) {\n    var values = PredictionMode.getStateToAltMap(configs).values();\n    for(var i=0;i<values.length;i++) {\n        if (values[i].length===1) {\n            return true;\n        }\n    }\n    return false;\n};\n\nPredictionMode.getSingleViableAlt = function(altsets) {\n    var result = null;\n\tfor(var i=0;i<altsets.length;i++) {\n\t\tvar alts = altsets[i];\n        var minAlt = alts.minValue();\n        if(result===null) {\n            result = minAlt;\n        } else if(result!==minAlt) { // more than 1 viable alt\n            return ATN.INVALID_ALT_NUMBER;\n        }\n\t}\n    return result;\n};\n\nexports.PredictionMode = PredictionMode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/PredictionMode.js\n// module id = LYMb\n// module chunks = 0 1","// Generated from policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\nvar policyListener = require('./policyListener').policyListener;\r\nvar grammarFileName = \"policy.g4\";\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u00037\\u0115\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\\u0004\\t\",\r\n    \"\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\\u0007\\u0004\",\r\n    \"\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\\f\\t\\f\\u0004\",\r\n    \"\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\\t\\u0010\\u0004\",\r\n    \"\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\\u0004\\u0014\\t\",\r\n    \"\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\\t\\u0017\\u0004\",\r\n    \"\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\\u0004\\u001b\\t\",\r\n    \"\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\\t\\u001e\\u0004\",\r\n    \"\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\\t#\\u0004$\\t$\\u0004\",\r\n    \"%\\t%\\u0004&\\t&\\u0003\\u0002\\u0006\\u0002N\\n\\u0002\\r\\u0002\\u000e\\u0002\",\r\n    \"O\\u0003\\u0002\\u0003\\u0002\\u0003\\u0003\\u0003\\u0003\\u0006\\u0003V\\n\\u0003\",\r\n    \"\\r\\u0003\\u000e\\u0003W\\u0003\\u0003\\u0003\\u0003\\u0007\\u0003\\\\\\n\\u0003\",\r\n    \"\\f\\u0003\\u000e\\u0003_\\u000b\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\",\r\n    \"\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0005\\u0004g\\n\\u0004\\u0003\\u0004\",\r\n    \"\\u0003\\u0004\\u0003\\u0004\\u0003\\u0004\\u0005\\u0004m\\n\\u0004\\u0005\\u0004\",\r\n    \"o\\n\\u0004\\u0003\\u0005\\u0003\\u0005\\u0007\\u0005s\\n\\u0005\\f\\u0005\\u000e\",\r\n    \"\\u0005v\\u000b\\u0005\\u0003\\u0005\\u0006\\u0005y\\n\\u0005\\r\\u0005\\u000e\\u0005\",\r\n    \"z\\u0003\\u0006\\u0003\\u0006\\u0003\\u0006\\u0007\\u0006\\u0080\\n\\u0006\\f\\u0006\",\r\n    \"\\u000e\\u0006\\u0083\\u000b\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\",\r\n    \"\\u0007\\u0007\\u0007\\u0089\\n\\u0007\\f\\u0007\\u000e\\u0007\\u008c\\u000b\\u0007\",\r\n    \"\\u0003\\b\\u0003\\b\\u0006\\b\\u0090\\n\\b\\r\\b\\u000e\\b\\u0091\\u0003\\t\\u0003\\t\",\r\n    \"\\u0003\\t\\u0003\\t\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0007\\n\\u009d\",\r\n    \"\\n\\n\\f\\n\\u000e\\n\\u00a0\\u000b\\n\\u0003\\n\\u0003\\n\\u0007\\n\\u00a4\\n\\n\\f\\n\",\r\n    \"\\u000e\\n\\u00a7\\u000b\\n\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0005\\f\\u00b5\",\r\n    \"\\n\\f\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\",\r\n    \"\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\",\r\n    \"\\u0010\\u0003\\u0011\\u0003\\u0011\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\",\r\n    \"\\u0012\\u0003\\u0013\\u0003\\u0013\\u0005\\u0013\\u00cc\\n\\u0013\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0016\\u0003\\u0016\\u0007\\u0016\\u00d9\\n\",\r\n    \"\\u0016\\f\\u0016\\u000e\\u0016\\u00dc\\u000b\\u0016\\u0003\\u0016\\u0006\\u0016\",\r\n    \"\\u00df\\n\\u0016\\r\\u0016\\u000e\\u0016\\u00e0\\u0003\\u0017\\u0003\\u0017\\u0005\",\r\n    \"\\u0017\\u00e5\\n\\u0017\\u0003\\u0018\\u0003\\u0018\\u0003\\u0018\\u0003\\u0019\",\r\n    \"\\u0003\\u0019\\u0003\\u0019\\u0003\\u001a\\u0003\\u001a\\u0005\\u001a\\u00ef\\n\",\r\n    \"\\u001a\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001c\\u0003\\u001c\\u0003\",\r\n    \"\\u001c\\u0003\\u001d\\u0003\\u001d\\u0003\\u001e\\u0003\\u001e\\u0003\\u001f\\u0003\",\r\n    \"\\u001f\\u0003 \\u0003 \\u0003 \\u0003 \\u0006 \\u0101\\n \\r \\u000e \\u0102\\u0003\",\r\n    \"!\\u0003!\\u0003\\\"\\u0003\\\"\\u0003#\\u0003#\\u0003$\\u0003$\\u0003%\\u0003%\\u0003\",\r\n    \"%\\u0003%\\u0003&\\u0003&\\u0003&\\u0003&\\u0003&\\u0002\\u0002\\'\\u0002\\u0004\",\r\n    \"\\u0006\\b\\n\\f\\u000e\\u0010\\u0012\\u0014\\u0016\\u0018\\u001a\\u001c\\u001e \",\r\n    \"\\\"$&(*,.02468:<>@BDFHJ\\u0002\\u0005\\u0003\\u0002\\u001b\\u001e\\u0003\\u0002\",\r\n    \" !\\u0004\\u0002\\u0011\\u0011\\\"$\\u0002\\u010e\\u0002M\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0004S\\u0003\\u0002\\u0002\\u0002\\u0006n\\u0003\\u0002\\u0002\\u0002\\bp\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\n|\\u0003\\u0002\\u0002\\u0002\\f\\u0084\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u000e\\u008d\\u0003\\u0002\\u0002\\u0002\\u0010\\u0093\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0012\\u0097\\u0003\\u0002\\u0002\\u0002\\u0014\\u00a8\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0016\\u00b4\\u0003\\u0002\\u0002\\u0002\\u0018\\u00b6\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u001a\\u00b9\\u0003\\u0002\\u0002\\u0002\\u001c\\u00bc\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u001e\\u00bf\\u0003\\u0002\\u0002\\u0002 \\u00c3\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\\"\\u00c5\\u0003\\u0002\\u0002\\u0002$\\u00cb\\u0003\\u0002\\u0002\\u0002\",\r\n    \"&\\u00cd\\u0003\\u0002\\u0002\\u0002(\\u00d3\\u0003\\u0002\\u0002\\u0002*\\u00d6\",\r\n    \"\\u0003\\u0002\\u0002\\u0002,\\u00e4\\u0003\\u0002\\u0002\\u0002.\\u00e6\\u0003\",\r\n    \"\\u0002\\u0002\\u00020\\u00e9\\u0003\\u0002\\u0002\\u00022\\u00ee\\u0003\\u0002\",\r\n    \"\\u0002\\u00024\\u00f0\\u0003\\u0002\\u0002\\u00026\\u00f3\\u0003\\u0002\\u0002\",\r\n    \"\\u00028\\u00f6\\u0003\\u0002\\u0002\\u0002:\\u00f8\\u0003\\u0002\\u0002\\u0002\",\r\n    \"<\\u00fa\\u0003\\u0002\\u0002\\u0002>\\u0100\\u0003\\u0002\\u0002\\u0002@\\u0104\",\r\n    \"\\u0003\\u0002\\u0002\\u0002B\\u0106\\u0003\\u0002\\u0002\\u0002D\\u0108\\u0003\",\r\n    \"\\u0002\\u0002\\u0002F\\u010a\\u0003\\u0002\\u0002\\u0002H\\u010c\\u0003\\u0002\",\r\n    \"\\u0002\\u0002J\\u0110\\u0003\\u0002\\u0002\\u0002LN\\u0005\\u0004\\u0003\\u0002\",\r\n    \"ML\\u0003\\u0002\\u0002\\u0002NO\\u0003\\u0002\\u0002\\u0002OM\\u0003\\u0002\\u0002\",\r\n    \"\\u0002OP\\u0003\\u0002\\u0002\\u0002PQ\\u0003\\u0002\\u0002\\u0002QR\\u0007\\u0002\",\r\n    \"\\u0002\\u0003R\\u0003\\u0003\\u0002\\u0002\\u0002SU\\u0007%\\u0002\\u0002TV\\u0005\",\r\n    \"\\u0006\\u0004\\u0002UT\\u0003\\u0002\\u0002\\u0002VW\\u0003\\u0002\\u0002\\u0002\",\r\n    \"WU\\u0003\\u0002\\u0002\\u0002WX\\u0003\\u0002\\u0002\\u0002XY\\u0003\\u0002\\u0002\",\r\n    \"\\u0002Y]\\u0007\\u0003\\u0002\\u0002Z\\\\\\u0005\\u000e\\b\\u0002[Z\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\\\_\\u0003\\u0002\\u0002\\u0002][\\u0003\\u0002\\u0002\\u0002]^\",\r\n    \"\\u0003\\u0002\\u0002\\u0002^`\\u0003\\u0002\\u0002\\u0002_]\\u0003\\u0002\\u0002\",\r\n    \"\\u0002`a\\u0005\\b\\u0005\\u0002a\\u0005\\u0003\\u0002\\u0002\\u0002bf\\u0005\",\r\n    \"\\n\\u0006\\u0002cd\\u0005B\\\"\\u0002de\\u0005\\f\\u0007\\u0002eg\\u0003\\u0002\",\r\n    \"\\u0002\\u0002fc\\u0003\\u0002\\u0002\\u0002fg\\u0003\\u0002\\u0002\\u0002go\\u0003\",\r\n    \"\\u0002\\u0002\\u0002hl\\u0005\\f\\u0007\\u0002ij\\u0005B\\\"\\u0002jk\\u0005\\n\",\r\n    \"\\u0006\\u0002km\\u0003\\u0002\\u0002\\u0002li\\u0003\\u0002\\u0002\\u0002lm\\u0003\",\r\n    \"\\u0002\\u0002\\u0002mo\\u0003\\u0002\\u0002\\u0002nb\\u0003\\u0002\\u0002\\u0002\",\r\n    \"nh\\u0003\\u0002\\u0002\\u0002o\\u0007\\u0003\\u0002\\u0002\\u0002px\\u0007\\u0004\",\r\n    \"\\u0002\\u0002qs\\u0007\\u0005\\u0002\\u0002rq\\u0003\\u0002\\u0002\\u0002sv\\u0003\",\r\n    \"\\u0002\\u0002\\u0002tr\\u0003\\u0002\\u0002\\u0002tu\\u0003\\u0002\\u0002\\u0002\",\r\n    \"uw\\u0003\\u0002\\u0002\\u0002vt\\u0003\\u0002\\u0002\\u0002wy\\u00074\\u0002\",\r\n    \"\\u0002xt\\u0003\\u0002\\u0002\\u0002yz\\u0003\\u0002\\u0002\\u0002zx\\u0003\\u0002\",\r\n    \"\\u0002\\u0002z{\\u0003\\u0002\\u0002\\u0002{\\t\\u0003\\u0002\\u0002\\u0002|\\u0081\",\r\n    \"\\u0005> \\u0002}~\\u0007\\u0005\\u0002\\u0002~\\u0080\\u0005> \\u0002\\u007f\",\r\n    \"}\\u0003\\u0002\\u0002\\u0002\\u0080\\u0083\\u0003\\u0002\\u0002\\u0002\\u0081\",\r\n    \"\\u007f\\u0003\\u0002\\u0002\\u0002\\u0081\\u0082\\u0003\\u0002\\u0002\\u0002\\u0082\",\r\n    \"\\u000b\\u0003\\u0002\\u0002\\u0002\\u0083\\u0081\\u0003\\u0002\\u0002\\u0002\\u0084\",\r\n    \"\\u0085\\u0007\\u0006\\u0002\\u0002\\u0085\\u008a\\u0005@!\\u0002\\u0086\\u0087\",\r\n    \"\\u0007\\u0005\\u0002\\u0002\\u0087\\u0089\\u0005@!\\u0002\\u0088\\u0086\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0089\\u008c\\u0003\\u0002\\u0002\\u0002\\u008a\\u0088\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u008a\\u008b\\u0003\\u0002\\u0002\\u0002\\u008b\\r\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u008c\\u008a\\u0003\\u0002\\u0002\\u0002\\u008d\\u008f\\u0005\",\r\n    \"\\u0010\\t\\u0002\\u008e\\u0090\\u0005\\u0012\\n\\u0002\\u008f\\u008e\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0090\\u0091\\u0003\\u0002\\u0002\\u0002\\u0091\\u008f\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0091\\u0092\\u0003\\u0002\\u0002\\u0002\\u0092\\u000f\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0093\\u0094\\u0007*\\u0002\\u0002\\u0094\\u0095\\u00074\\u0002\",\r\n    \"\\u0002\\u0095\\u0096\\u0007\\u0007\\u0002\\u0002\\u0096\\u0011\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0097\\u0098\\u0007(\\u0002\\u0002\\u0098\\u0099\\u0007)\\u0002\\u0002\",\r\n    \"\\u0099\\u009a\\u00074\\u0002\\u0002\\u009a\\u009e\\u0007+\\u0002\\u0002\\u009b\",\r\n    \"\\u009d\\u0005\\u0014\\u000b\\u0002\\u009c\\u009b\\u0003\\u0002\\u0002\\u0002\\u009d\",\r\n    \"\\u00a0\\u0003\\u0002\\u0002\\u0002\\u009e\\u009c\\u0003\\u0002\\u0002\\u0002\\u009e\",\r\n    \"\\u009f\\u0003\\u0002\\u0002\\u0002\\u009f\\u00a1\\u0003\\u0002\\u0002\\u0002\\u00a0\",\r\n    \"\\u009e\\u0003\\u0002\\u0002\\u0002\\u00a1\\u00a5\\u0005\\u0016\\f\\u0002\\u00a2\",\r\n    \"\\u00a4\\u0005\\u0018\\r\\u0002\\u00a3\\u00a2\\u0003\\u0002\\u0002\\u0002\\u00a4\",\r\n    \"\\u00a7\\u0003\\u0002\\u0002\\u0002\\u00a5\\u00a3\\u0003\\u0002\\u0002\\u0002\\u00a5\",\r\n    \"\\u00a6\\u0003\\u0002\\u0002\\u0002\\u00a6\\u0013\\u0003\\u0002\\u0002\\u0002\\u00a7\",\r\n    \"\\u00a5\\u0003\\u0002\\u0002\\u0002\\u00a8\\u00a9\\u0007,\\u0002\\u0002\\u00a9\",\r\n    \"\\u0015\\u0003\\u0002\\u0002\\u0002\\u00aa\\u00b5\\u0005\\u001a\\u000e\\u0002\\u00ab\",\r\n    \"\\u00b5\\u0005\\u001c\\u000f\\u0002\\u00ac\\u00b5\\u0005\\u001e\\u0010\\u0002\\u00ad\",\r\n    \"\\u00b5\\u0005 \\u0011\\u0002\\u00ae\\u00b5\\u0005\\\"\\u0012\\u0002\\u00af\\u00b5\",\r\n    \"\\u0005$\\u0013\\u0002\\u00b0\\u00b5\\u0005*\\u0016\\u0002\\u00b1\\u00b5\\u0005\",\r\n    \",\\u0017\\u0002\\u00b2\\u00b5\\u00052\\u001a\\u0002\\u00b3\\u00b5\\u00058\\u001d\",\r\n    \"\\u0002\\u00b4\\u00aa\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00ab\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00b4\\u00ac\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00ad\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00b4\\u00ae\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00af\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00b4\\u00b0\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00b1\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00b4\\u00b2\\u0003\\u0002\\u0002\\u0002\\u00b4\\u00b3\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00b5\\u0017\\u0003\\u0002\\u0002\\u0002\\u00b6\\u00b7\\u0007\\b\\u0002\",\r\n    \"\\u0002\\u00b7\\u00b8\\u0005\\u0016\\f\\u0002\\u00b8\\u0019\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00b9\\u00ba\\u0007\\t\\u0002\\u0002\\u00ba\\u00bb\\u0005F$\\u0002\\u00bb\",\r\n    \"\\u001b\\u0003\\u0002\\u0002\\u0002\\u00bc\\u00bd\\u0007\\n\\u0002\\u0002\\u00bd\",\r\n    \"\\u00be\\u00077\\u0002\\u0002\\u00be\\u001d\\u0003\\u0002\\u0002\\u0002\\u00bf\",\r\n    \"\\u00c0\\u00076\\u0002\\u0002\\u00c0\\u00c1\\u0005F$\\u0002\\u00c1\\u00c2\\u0007\",\r\n    \"\\u000b\\u0002\\u0002\\u00c2\\u001f\\u0003\\u0002\\u0002\\u0002\\u00c3\\u00c4\\u0007\",\r\n    \"\\f\\u0002\\u0002\\u00c4!\\u0003\\u0002\\u0002\\u0002\\u00c5\\u00c6\\u0007\\r\\u0002\",\r\n    \"\\u0002\\u00c6\\u00c7\\u00076\\u0002\\u0002\\u00c7\\u00c8\\u0007\\u000e\\u0002\",\r\n    \"\\u0002\\u00c8#\\u0003\\u0002\\u0002\\u0002\\u00c9\\u00cc\\u0005&\\u0014\\u0002\",\r\n    \"\\u00ca\\u00cc\\u0005(\\u0015\\u0002\\u00cb\\u00c9\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00cb\\u00ca\\u0003\\u0002\\u0002\\u0002\\u00cc%\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00cd\\u00ce\\u0007\\u000f\\u0002\\u0002\\u00ce\\u00cf\\u00076\\u0002\\u0002\",\r\n    \"\\u00cf\\u00d0\\u0007\\u0010\\u0002\\u0002\\u00d0\\u00d1\\u00076\\u0002\\u0002\",\r\n    \"\\u00d1\\u00d2\\u0007\\u0011\\u0002\\u0002\\u00d2\\'\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00d3\\u00d4\\u0007\\u0012\\u0002\\u0002\\u00d4\\u00d5\\u00076\\u0002\\u0002\",\r\n    \"\\u00d5)\\u0003\\u0002\\u0002\\u0002\\u00d6\\u00de\\u0007.\\u0002\\u0002\\u00d7\",\r\n    \"\\u00d9\\u0007\\u0005\\u0002\\u0002\\u00d8\\u00d7\\u0003\\u0002\\u0002\\u0002\\u00d9\",\r\n    \"\\u00dc\\u0003\\u0002\\u0002\\u0002\\u00da\\u00d8\\u0003\\u0002\\u0002\\u0002\\u00da\",\r\n    \"\\u00db\\u0003\\u0002\\u0002\\u0002\\u00db\\u00dd\\u0003\\u0002\\u0002\\u0002\\u00dc\",\r\n    \"\\u00da\\u0003\\u0002\\u0002\\u0002\\u00dd\\u00df\\u0005:\\u001e\\u0002\\u00de\",\r\n    \"\\u00da\\u0003\\u0002\\u0002\\u0002\\u00df\\u00e0\\u0003\\u0002\\u0002\\u0002\\u00e0\",\r\n    \"\\u00de\\u0003\\u0002\\u0002\\u0002\\u00e0\\u00e1\\u0003\\u0002\\u0002\\u0002\\u00e1\",\r\n    \"+\\u0003\\u0002\\u0002\\u0002\\u00e2\\u00e5\\u0005.\\u0018\\u0002\\u00e3\\u00e5\",\r\n    \"\\u00050\\u0019\\u0002\\u00e4\\u00e2\\u0003\\u0002\\u0002\\u0002\\u00e4\\u00e3\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00e5-\\u0003\\u0002\\u0002\\u0002\\u00e6\\u00e7\",\r\n    \"\\u0007\\u0013\\u0002\\u0002\\u00e7\\u00e8\\u00076\\u0002\\u0002\\u00e8/\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00e9\\u00ea\\u0007\\u0014\\u0002\\u0002\\u00ea\\u00eb\\u0007\",\r\n    \"6\\u0002\\u0002\\u00eb1\\u0003\\u0002\\u0002\\u0002\\u00ec\\u00ef\\u00054\\u001b\",\r\n    \"\\u0002\\u00ed\\u00ef\\u00056\\u001c\\u0002\\u00ee\\u00ec\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00ee\\u00ed\\u0003\\u0002\\u0002\\u0002\\u00ef3\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00f0\\u00f1\\u0007\\u0015\\u0002\\u0002\\u00f1\\u00f2\\u00076\\u0002\",\r\n    \"\\u0002\\u00f25\\u0003\\u0002\\u0002\\u0002\\u00f3\\u00f4\\u0007\\u0016\\u0002\",\r\n    \"\\u0002\\u00f4\\u00f5\\u00076\\u0002\\u0002\\u00f57\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00f6\\u00f7\\u0007\\u0017\\u0002\\u0002\\u00f79\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00f8\\u00f9\\u00074\\u0002\\u0002\\u00f9;\\u0003\\u0002\\u0002\\u0002\\u00fa\",\r\n    \"\\u00fb\\u00074\\u0002\\u0002\\u00fb=\\u0003\\u0002\\u0002\\u0002\\u00fc\\u0101\",\r\n    \"\\u0007\\u0018\\u0002\\u0002\\u00fd\\u0101\\u0007\\u0019\\u0002\\u0002\\u00fe\\u0101\",\r\n    \"\\u0007\\u001a\\u0002\\u0002\\u00ff\\u0101\\u00074\\u0002\\u0002\\u0100\\u00fc\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0100\\u00fd\\u0003\\u0002\\u0002\\u0002\\u0100\\u00fe\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0100\\u00ff\\u0003\\u0002\\u0002\\u0002\\u0101\\u0102\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0102\\u0100\\u0003\\u0002\\u0002\\u0002\\u0102\\u0103\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0103?\\u0003\\u0002\\u0002\\u0002\\u0104\\u0105\",\r\n    \"\\t\\u0002\\u0002\\u0002\\u0105A\\u0003\\u0002\\u0002\\u0002\\u0106\\u0107\\u0007\",\r\n    \"\\u001f\\u0002\\u0002\\u0107C\\u0003\\u0002\\u0002\\u0002\\u0108\\u0109\\t\\u0003\",\r\n    \"\\u0002\\u0002\\u0109E\\u0003\\u0002\\u0002\\u0002\\u010a\\u010b\\t\\u0004\\u0002\",\r\n    \"\\u0002\\u010bG\\u0003\\u0002\\u0002\\u0002\\u010c\\u010d\\u00076\\u0002\\u0002\",\r\n    \"\\u010d\\u010e\\u0007\\u0007\\u0002\\u0002\\u010e\\u010f\\u00076\\u0002\\u0002\",\r\n    \"\\u010fI\\u0003\\u0002\\u0002\\u0002\\u0110\\u0111\\u00076\\u0002\\u0002\\u0111\",\r\n    \"\\u0112\\u0007\\u0007\\u0002\\u0002\\u0112\\u0113\\u00076\\u0002\\u0002\\u0113\",\r\n    \"K\\u0003\\u0002\\u0002\\u0002\\u0017OW]flntz\\u0081\\u008a\\u0091\\u009e\\u00a5\",\r\n    \"\\u00b4\\u00cb\\u00da\\u00e0\\u00e4\\u00ee\\u0100\\u0102\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nvar sharedContextCache = new antlr4.PredictionContextCache();\r\n\r\nvar literalNames = [ null, \"'in the following states:'\", \"'I agree to authorize token in'\", \r\n                     \"','\", \"'users in'\", \"':'\", \"'and on'\", \"'the end of'\", \r\n                     \"'date'\", \"'after contract creation'\", \"'price priceExpression'\", \r\n                     \"'transaction of'\", \"'to owner'\", \"'contract_guaranty of'\", \r\n                     \"'refund after'\", \"'day'\", \"'platform_guaranty of'\", \r\n                     \"'visit_increment of'\", \"'visit of'\", \"'account_balance greater than'\", \r\n                     \"'account_balance smaller than'\", \"'account_settled'\", \r\n                     \"'.'\", \"'@'\", \"'_'\", \"'RegisteredUser'\", \"'LoginUser'\", \r\n                     \"'AllVisiter'\", \"'RegisteredNode'\", \"'and'\", \"'in total'\", \r\n                     \"'per view'\", \"'year'\", \"'week'\", \"'cycle'\", \"'For'\", \r\n                     \"'usergroups'\", \"'users'\", \"'proceed'\", \"'to'\", \"'in'\", \r\n                     \"'on'\", \"'accepting'\", null, \"'license'\", \"'paying'\", \r\n                     \"'per'\", \"'view'\", \"'require'\", \"'nothing'\" ];\r\n\r\nvar symbolicNames = [ null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, null, null, \r\n                      null, null, null, null, null, null, null, null, \"FOR\", \r\n                      \"USERGROUPS\", \"USERS\", \"PROCEED\", \"TO\", \"IN\", \"ON\", \r\n                      \"ACCEPTING\", \"SELF\", \"LICENSE\", \"PAYING\", \"PER\", \"VIEW\", \r\n                      \"REQUIRE\", \"NOTHING\", \"ID\", \"WS\", \"INT\", \"DATE\" ];\r\n\r\nvar ruleNames =  [ \"p\", \"segment\", \"audience_clause\", \"athorize_token_clause\", \r\n                   \"audience_individuals_clause\", \"audience_groups_clause\", \r\n                   \"state_clause\", \"current_state_clause\", \"target_clause\", \r\n                   \"accepting\", \"event\", \"and_event\", \"period_event\", \"specific_date_event\", \r\n                   \"relative_date_event\", \"pricing_agreement_event\", \"transaction_event\", \r\n                   \"guaranty_event\", \"contract_guaranty\", \"platform_guaranty\", \r\n                   \"signing_event\", \"access_count_event\", \"visit_increment_event\", \r\n                   \"visit_event\", \"balance_event\", \"balance_greater\", \"balance_smaller\", \r\n                   \"settlement_event\", \"license_resource_id\", \"account_id\", \r\n                   \"users\", \"user_groups\", \"and\", \"view_unit\", \"time_unit\", \r\n                   \"start_hour\", \"end_hour\" ];\r\n\r\nfunction policyParser (input) {\r\n\tantlr4.Parser.call(this, input);\r\n    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);\r\n    this.ruleNames = ruleNames;\r\n    this.literalNames = literalNames;\r\n    this.symbolicNames = symbolicNames;\r\n    return this;\r\n}\r\n\r\npolicyParser.prototype = Object.create(antlr4.Parser.prototype);\r\npolicyParser.prototype.constructor = policyParser;\r\n\r\nObject.defineProperty(policyParser.prototype, \"atn\", {\r\n\tget : function() {\r\n\t\treturn atn;\r\n\t}\r\n});\r\n\r\npolicyParser.EOF = antlr4.Token.EOF;\r\npolicyParser.T__0 = 1;\r\npolicyParser.T__1 = 2;\r\npolicyParser.T__2 = 3;\r\npolicyParser.T__3 = 4;\r\npolicyParser.T__4 = 5;\r\npolicyParser.T__5 = 6;\r\npolicyParser.T__6 = 7;\r\npolicyParser.T__7 = 8;\r\npolicyParser.T__8 = 9;\r\npolicyParser.T__9 = 10;\r\npolicyParser.T__10 = 11;\r\npolicyParser.T__11 = 12;\r\npolicyParser.T__12 = 13;\r\npolicyParser.T__13 = 14;\r\npolicyParser.T__14 = 15;\r\npolicyParser.T__15 = 16;\r\npolicyParser.T__16 = 17;\r\npolicyParser.T__17 = 18;\r\npolicyParser.T__18 = 19;\r\npolicyParser.T__19 = 20;\r\npolicyParser.T__20 = 21;\r\npolicyParser.T__21 = 22;\r\npolicyParser.T__22 = 23;\r\npolicyParser.T__23 = 24;\r\npolicyParser.T__24 = 25;\r\npolicyParser.T__25 = 26;\r\npolicyParser.T__26 = 27;\r\npolicyParser.T__27 = 28;\r\npolicyParser.T__28 = 29;\r\npolicyParser.T__29 = 30;\r\npolicyParser.T__30 = 31;\r\npolicyParser.T__31 = 32;\r\npolicyParser.T__32 = 33;\r\npolicyParser.T__33 = 34;\r\npolicyParser.FOR = 35;\r\npolicyParser.USERGROUPS = 36;\r\npolicyParser.USERS = 37;\r\npolicyParser.PROCEED = 38;\r\npolicyParser.TO = 39;\r\npolicyParser.IN = 40;\r\npolicyParser.ON = 41;\r\npolicyParser.ACCEPTING = 42;\r\npolicyParser.SELF = 43;\r\npolicyParser.LICENSE = 44;\r\npolicyParser.PAYING = 45;\r\npolicyParser.PER = 46;\r\npolicyParser.VIEW = 47;\r\npolicyParser.REQUIRE = 48;\r\npolicyParser.NOTHING = 49;\r\npolicyParser.ID = 50;\r\npolicyParser.WS = 51;\r\npolicyParser.INT = 52;\r\npolicyParser.DATE = 53;\r\n\r\npolicyParser.RULE_p = 0;\r\npolicyParser.RULE_segment = 1;\r\npolicyParser.RULE_audience_clause = 2;\r\npolicyParser.RULE_athorize_token_clause = 3;\r\npolicyParser.RULE_audience_individuals_clause = 4;\r\npolicyParser.RULE_audience_groups_clause = 5;\r\npolicyParser.RULE_state_clause = 6;\r\npolicyParser.RULE_current_state_clause = 7;\r\npolicyParser.RULE_target_clause = 8;\r\npolicyParser.RULE_accepting = 9;\r\npolicyParser.RULE_event = 10;\r\npolicyParser.RULE_and_event = 11;\r\npolicyParser.RULE_period_event = 12;\r\npolicyParser.RULE_specific_date_event = 13;\r\npolicyParser.RULE_relative_date_event = 14;\r\npolicyParser.RULE_pricing_agreement_event = 15;\r\npolicyParser.RULE_transaction_event = 16;\r\npolicyParser.RULE_guaranty_event = 17;\r\npolicyParser.RULE_contract_guaranty = 18;\r\npolicyParser.RULE_platform_guaranty = 19;\r\npolicyParser.RULE_signing_event = 20;\r\npolicyParser.RULE_access_count_event = 21;\r\npolicyParser.RULE_visit_increment_event = 22;\r\npolicyParser.RULE_visit_event = 23;\r\npolicyParser.RULE_balance_event = 24;\r\npolicyParser.RULE_balance_greater = 25;\r\npolicyParser.RULE_balance_smaller = 26;\r\npolicyParser.RULE_settlement_event = 27;\r\npolicyParser.RULE_license_resource_id = 28;\r\npolicyParser.RULE_account_id = 29;\r\npolicyParser.RULE_users = 30;\r\npolicyParser.RULE_user_groups = 31;\r\npolicyParser.RULE_and = 32;\r\npolicyParser.RULE_view_unit = 33;\r\npolicyParser.RULE_time_unit = 34;\r\npolicyParser.RULE_start_hour = 35;\r\npolicyParser.RULE_end_hour = 36;\r\n\r\nfunction PContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_p;\r\n    return this;\r\n}\r\n\r\nPContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPContext.prototype.constructor = PContext;\r\n\r\nPContext.prototype.EOF = function() {\r\n    return this.getToken(policyParser.EOF, 0);\r\n};\r\n\r\nPContext.prototype.segment = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(SegmentContext);\r\n    } else {\r\n        return this.getTypedRuleContext(SegmentContext,i);\r\n    }\r\n};\r\n\r\nPContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterP(this);\r\n\t}\r\n};\r\n\r\nPContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitP(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.PContext = PContext;\r\n\r\npolicyParser.prototype.p = function() {\r\n\r\n    var localctx = new PContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 0, policyParser.RULE_p);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 75; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 74;\r\n            this.segment();\r\n            this.state = 77; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.FOR);\r\n        this.state = 79;\r\n        this.match(policyParser.EOF);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction SegmentContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_segment;\r\n    return this;\r\n}\r\n\r\nSegmentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSegmentContext.prototype.constructor = SegmentContext;\r\n\r\nSegmentContext.prototype.FOR = function() {\r\n    return this.getToken(policyParser.FOR, 0);\r\n};\r\n\r\nSegmentContext.prototype.athorize_token_clause = function() {\r\n    return this.getTypedRuleContext(Athorize_token_clauseContext,0);\r\n};\r\n\r\nSegmentContext.prototype.audience_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Audience_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Audience_clauseContext,i);\r\n    }\r\n};\r\n\r\nSegmentContext.prototype.state_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(State_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(State_clauseContext,i);\r\n    }\r\n};\r\n\r\nSegmentContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSegment(this);\r\n\t}\r\n};\r\n\r\nSegmentContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSegment(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.SegmentContext = SegmentContext;\r\n\r\npolicyParser.prototype.segment = function() {\r\n\r\n    var localctx = new SegmentContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 2, policyParser.RULE_segment);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 81;\r\n        this.match(policyParser.FOR);\r\n        this.state = 83; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 82;\r\n            this.audience_clause();\r\n            this.state = 85; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << policyParser.T__3) | (1 << policyParser.T__21) | (1 << policyParser.T__22) | (1 << policyParser.T__23))) !== 0) || _la===policyParser.ID);\r\n        this.state = 87;\r\n        this.match(policyParser.T__0);\r\n        this.state = 91;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.IN) {\r\n            this.state = 88;\r\n            this.state_clause();\r\n            this.state = 93;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 94;\r\n        this.athorize_token_clause();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_audience_clause;\r\n    return this;\r\n}\r\n\r\nAudience_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_clauseContext.prototype.constructor = Audience_clauseContext;\r\n\r\nAudience_clauseContext.prototype.audience_individuals_clause = function() {\r\n    return this.getTypedRuleContext(Audience_individuals_clauseContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.and = function() {\r\n    return this.getTypedRuleContext(AndContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.audience_groups_clause = function() {\r\n    return this.getTypedRuleContext(Audience_groups_clauseContext,0);\r\n};\r\n\r\nAudience_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAudience_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAudience_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Audience_clauseContext = Audience_clauseContext;\r\n\r\npolicyParser.prototype.audience_clause = function() {\r\n\r\n    var localctx = new Audience_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 4, policyParser.RULE_audience_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.state = 108;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__21:\r\n        case policyParser.T__22:\r\n        case policyParser.T__23:\r\n        case policyParser.ID:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 96;\r\n            this.audience_individuals_clause();\r\n            this.state = 100;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===policyParser.T__28) {\r\n                this.state = 97;\r\n                this.and();\r\n                this.state = 98;\r\n                this.audience_groups_clause();\r\n            }\r\n\r\n            break;\r\n        case policyParser.T__3:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 102;\r\n            this.audience_groups_clause();\r\n            this.state = 106;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            if(_la===policyParser.T__28) {\r\n                this.state = 103;\r\n                this.and();\r\n                this.state = 104;\r\n                this.audience_individuals_clause();\r\n            }\r\n\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Athorize_token_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_athorize_token_clause;\r\n    return this;\r\n}\r\n\r\nAthorize_token_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAthorize_token_clauseContext.prototype.constructor = Athorize_token_clauseContext;\r\n\r\nAthorize_token_clauseContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.ID);\r\n    } else {\r\n        return this.getToken(policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nAthorize_token_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAthorize_token_clause(this);\r\n\t}\r\n};\r\n\r\nAthorize_token_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAthorize_token_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Athorize_token_clauseContext = Athorize_token_clauseContext;\r\n\r\npolicyParser.prototype.athorize_token_clause = function() {\r\n\r\n    var localctx = new Athorize_token_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 6, policyParser.RULE_athorize_token_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 110;\r\n        this.match(policyParser.T__1);\r\n        this.state = 118; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 114;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===policyParser.T__2) {\r\n                this.state = 111;\r\n                this.match(policyParser.T__2);\r\n                this.state = 116;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            this.state = 117;\r\n            this.match(policyParser.ID);\r\n            this.state = 120; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.T__2 || _la===policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_individuals_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_audience_individuals_clause;\r\n    return this;\r\n}\r\n\r\nAudience_individuals_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_individuals_clauseContext.prototype.constructor = Audience_individuals_clauseContext;\r\n\r\nAudience_individuals_clauseContext.prototype.users = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(UsersContext);\r\n    } else {\r\n        return this.getTypedRuleContext(UsersContext,i);\r\n    }\r\n};\r\n\r\nAudience_individuals_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAudience_individuals_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_individuals_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAudience_individuals_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Audience_individuals_clauseContext = Audience_individuals_clauseContext;\r\n\r\npolicyParser.prototype.audience_individuals_clause = function() {\r\n\r\n    var localctx = new Audience_individuals_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 8, policyParser.RULE_audience_individuals_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 122;\r\n        this.users();\r\n        this.state = 127;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.T__2) {\r\n            this.state = 123;\r\n            this.match(policyParser.T__2);\r\n            this.state = 124;\r\n            this.users();\r\n            this.state = 129;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Audience_groups_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_audience_groups_clause;\r\n    return this;\r\n}\r\n\r\nAudience_groups_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAudience_groups_clauseContext.prototype.constructor = Audience_groups_clauseContext;\r\n\r\nAudience_groups_clauseContext.prototype.user_groups = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(User_groupsContext);\r\n    } else {\r\n        return this.getTypedRuleContext(User_groupsContext,i);\r\n    }\r\n};\r\n\r\nAudience_groups_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAudience_groups_clause(this);\r\n\t}\r\n};\r\n\r\nAudience_groups_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAudience_groups_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Audience_groups_clauseContext = Audience_groups_clauseContext;\r\n\r\npolicyParser.prototype.audience_groups_clause = function() {\r\n\r\n    var localctx = new Audience_groups_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 10, policyParser.RULE_audience_groups_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 130;\r\n        this.match(policyParser.T__3);\r\n        this.state = 131;\r\n        this.user_groups();\r\n        this.state = 136;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.T__2) {\r\n            this.state = 132;\r\n            this.match(policyParser.T__2);\r\n            this.state = 133;\r\n            this.user_groups();\r\n            this.state = 138;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction State_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_state_clause;\r\n    return this;\r\n}\r\n\r\nState_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nState_clauseContext.prototype.constructor = State_clauseContext;\r\n\r\nState_clauseContext.prototype.current_state_clause = function() {\r\n    return this.getTypedRuleContext(Current_state_clauseContext,0);\r\n};\r\n\r\nState_clauseContext.prototype.target_clause = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(Target_clauseContext);\r\n    } else {\r\n        return this.getTypedRuleContext(Target_clauseContext,i);\r\n    }\r\n};\r\n\r\nState_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterState_clause(this);\r\n\t}\r\n};\r\n\r\nState_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitState_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.State_clauseContext = State_clauseContext;\r\n\r\npolicyParser.prototype.state_clause = function() {\r\n\r\n    var localctx = new State_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 12, policyParser.RULE_state_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 139;\r\n        this.current_state_clause();\r\n        this.state = 141; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 140;\r\n            this.target_clause();\r\n            this.state = 143; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.PROCEED);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Current_state_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_current_state_clause;\r\n    return this;\r\n}\r\n\r\nCurrent_state_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nCurrent_state_clauseContext.prototype.constructor = Current_state_clauseContext;\r\n\r\nCurrent_state_clauseContext.prototype.IN = function() {\r\n    return this.getToken(policyParser.IN, 0);\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterCurrent_state_clause(this);\r\n\t}\r\n};\r\n\r\nCurrent_state_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitCurrent_state_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Current_state_clauseContext = Current_state_clauseContext;\r\n\r\npolicyParser.prototype.current_state_clause = function() {\r\n\r\n    var localctx = new Current_state_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 14, policyParser.RULE_current_state_clause);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 145;\r\n        this.match(policyParser.IN);\r\n        this.state = 146;\r\n        this.match(policyParser.ID);\r\n        this.state = 147;\r\n        this.match(policyParser.T__4);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Target_clauseContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_target_clause;\r\n    return this;\r\n}\r\n\r\nTarget_clauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTarget_clauseContext.prototype.constructor = Target_clauseContext;\r\n\r\nTarget_clauseContext.prototype.PROCEED = function() {\r\n    return this.getToken(policyParser.PROCEED, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.TO = function() {\r\n    return this.getToken(policyParser.TO, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nTarget_clauseContext.prototype.event = function() {\r\n    return this.getTypedRuleContext(EventContext,0);\r\n};\r\n\r\nTarget_clauseContext.prototype.accepting = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(AcceptingContext);\r\n    } else {\r\n        return this.getTypedRuleContext(AcceptingContext,i);\r\n    }\r\n};\r\n\r\nTarget_clauseContext.prototype.and_event = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(And_eventContext);\r\n    } else {\r\n        return this.getTypedRuleContext(And_eventContext,i);\r\n    }\r\n};\r\n\r\nTarget_clauseContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterTarget_clause(this);\r\n\t}\r\n};\r\n\r\nTarget_clauseContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitTarget_clause(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Target_clauseContext = Target_clauseContext;\r\n\r\npolicyParser.prototype.target_clause = function() {\r\n\r\n    var localctx = new Target_clauseContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 16, policyParser.RULE_target_clause);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 149;\r\n        this.match(policyParser.PROCEED);\r\n        this.state = 150;\r\n        this.match(policyParser.TO);\r\n        this.state = 151;\r\n        this.match(policyParser.ID);\r\n        this.state = 152;\r\n        this.match(policyParser.ON);\r\n        this.state = 156;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.ACCEPTING) {\r\n            this.state = 153;\r\n            this.accepting();\r\n            this.state = 158;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n        this.state = 159;\r\n        this.event();\r\n        this.state = 163;\r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        while(_la===policyParser.T__5) {\r\n            this.state = 160;\r\n            this.and_event();\r\n            this.state = 165;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction AcceptingContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_accepting;\r\n    return this;\r\n}\r\n\r\nAcceptingContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAcceptingContext.prototype.constructor = AcceptingContext;\r\n\r\n\r\nAcceptingContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAccepting(this);\r\n\t}\r\n};\r\n\r\nAcceptingContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAccepting(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.AcceptingContext = AcceptingContext;\r\n\r\npolicyParser.prototype.accepting = function() {\r\n\r\n    var localctx = new AcceptingContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 18, policyParser.RULE_accepting);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 166;\r\n        this.match(policyParser.ACCEPTING);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction EventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_event;\r\n    return this;\r\n}\r\n\r\nEventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEventContext.prototype.constructor = EventContext;\r\n\r\nEventContext.prototype.period_event = function() {\r\n    return this.getTypedRuleContext(Period_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.specific_date_event = function() {\r\n    return this.getTypedRuleContext(Specific_date_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.relative_date_event = function() {\r\n    return this.getTypedRuleContext(Relative_date_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.pricing_agreement_event = function() {\r\n    return this.getTypedRuleContext(Pricing_agreement_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.transaction_event = function() {\r\n    return this.getTypedRuleContext(Transaction_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.guaranty_event = function() {\r\n    return this.getTypedRuleContext(Guaranty_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.signing_event = function() {\r\n    return this.getTypedRuleContext(Signing_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.access_count_event = function() {\r\n    return this.getTypedRuleContext(Access_count_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.balance_event = function() {\r\n    return this.getTypedRuleContext(Balance_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.settlement_event = function() {\r\n    return this.getTypedRuleContext(Settlement_eventContext,0);\r\n};\r\n\r\nEventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterEvent(this);\r\n\t}\r\n};\r\n\r\nEventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitEvent(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.EventContext = EventContext;\r\n\r\npolicyParser.prototype.event = function() {\r\n\r\n    var localctx = new EventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 20, policyParser.RULE_event);\r\n    try {\r\n        this.state = 178;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__6:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 168;\r\n            this.period_event();\r\n            break;\r\n        case policyParser.T__7:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 169;\r\n            this.specific_date_event();\r\n            break;\r\n        case policyParser.INT:\r\n            this.enterOuterAlt(localctx, 3);\r\n            this.state = 170;\r\n            this.relative_date_event();\r\n            break;\r\n        case policyParser.T__9:\r\n            this.enterOuterAlt(localctx, 4);\r\n            this.state = 171;\r\n            this.pricing_agreement_event();\r\n            break;\r\n        case policyParser.T__10:\r\n            this.enterOuterAlt(localctx, 5);\r\n            this.state = 172;\r\n            this.transaction_event();\r\n            break;\r\n        case policyParser.T__12:\r\n        case policyParser.T__15:\r\n            this.enterOuterAlt(localctx, 6);\r\n            this.state = 173;\r\n            this.guaranty_event();\r\n            break;\r\n        case policyParser.LICENSE:\r\n            this.enterOuterAlt(localctx, 7);\r\n            this.state = 174;\r\n            this.signing_event();\r\n            break;\r\n        case policyParser.T__16:\r\n        case policyParser.T__17:\r\n            this.enterOuterAlt(localctx, 8);\r\n            this.state = 175;\r\n            this.access_count_event();\r\n            break;\r\n        case policyParser.T__18:\r\n        case policyParser.T__19:\r\n            this.enterOuterAlt(localctx, 9);\r\n            this.state = 176;\r\n            this.balance_event();\r\n            break;\r\n        case policyParser.T__20:\r\n            this.enterOuterAlt(localctx, 10);\r\n            this.state = 177;\r\n            this.settlement_event();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction And_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_and_event;\r\n    return this;\r\n}\r\n\r\nAnd_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAnd_eventContext.prototype.constructor = And_eventContext;\r\n\r\nAnd_eventContext.prototype.event = function() {\r\n    return this.getTypedRuleContext(EventContext,0);\r\n};\r\n\r\nAnd_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAnd_event(this);\r\n\t}\r\n};\r\n\r\nAnd_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAnd_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.And_eventContext = And_eventContext;\r\n\r\npolicyParser.prototype.and_event = function() {\r\n\r\n    var localctx = new And_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 22, policyParser.RULE_and_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 180;\r\n        this.match(policyParser.T__5);\r\n        this.state = 181;\r\n        this.event();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Period_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_period_event;\r\n    return this;\r\n}\r\n\r\nPeriod_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPeriod_eventContext.prototype.constructor = Period_eventContext;\r\n\r\nPeriod_eventContext.prototype.time_unit = function() {\r\n    return this.getTypedRuleContext(Time_unitContext,0);\r\n};\r\n\r\nPeriod_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterPeriod_event(this);\r\n\t}\r\n};\r\n\r\nPeriod_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitPeriod_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Period_eventContext = Period_eventContext;\r\n\r\npolicyParser.prototype.period_event = function() {\r\n\r\n    var localctx = new Period_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 24, policyParser.RULE_period_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 183;\r\n        this.match(policyParser.T__6);\r\n        this.state = 184;\r\n        this.time_unit();\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Specific_date_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_specific_date_event;\r\n    return this;\r\n}\r\n\r\nSpecific_date_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSpecific_date_eventContext.prototype.constructor = Specific_date_eventContext;\r\n\r\nSpecific_date_eventContext.prototype.DATE = function() {\r\n    return this.getToken(policyParser.DATE, 0);\r\n};\r\n\r\nSpecific_date_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSpecific_date_event(this);\r\n\t}\r\n};\r\n\r\nSpecific_date_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSpecific_date_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Specific_date_eventContext = Specific_date_eventContext;\r\n\r\npolicyParser.prototype.specific_date_event = function() {\r\n\r\n    var localctx = new Specific_date_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 26, policyParser.RULE_specific_date_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 186;\r\n        this.match(policyParser.T__7);\r\n        this.state = 187;\r\n        this.match(policyParser.DATE);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Relative_date_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_relative_date_event;\r\n    return this;\r\n}\r\n\r\nRelative_date_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nRelative_date_eventContext.prototype.constructor = Relative_date_eventContext;\r\n\r\nRelative_date_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nRelative_date_eventContext.prototype.time_unit = function() {\r\n    return this.getTypedRuleContext(Time_unitContext,0);\r\n};\r\n\r\nRelative_date_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterRelative_date_event(this);\r\n\t}\r\n};\r\n\r\nRelative_date_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitRelative_date_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Relative_date_eventContext = Relative_date_eventContext;\r\n\r\npolicyParser.prototype.relative_date_event = function() {\r\n\r\n    var localctx = new Relative_date_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 28, policyParser.RULE_relative_date_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 189;\r\n        this.match(policyParser.INT);\r\n        this.state = 190;\r\n        this.time_unit();\r\n        this.state = 191;\r\n        this.match(policyParser.T__8);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Pricing_agreement_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_pricing_agreement_event;\r\n    return this;\r\n}\r\n\r\nPricing_agreement_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPricing_agreement_eventContext.prototype.constructor = Pricing_agreement_eventContext;\r\n\r\n\r\nPricing_agreement_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterPricing_agreement_event(this);\r\n\t}\r\n};\r\n\r\nPricing_agreement_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitPricing_agreement_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Pricing_agreement_eventContext = Pricing_agreement_eventContext;\r\n\r\npolicyParser.prototype.pricing_agreement_event = function() {\r\n\r\n    var localctx = new Pricing_agreement_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 30, policyParser.RULE_pricing_agreement_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 193;\r\n        this.match(policyParser.T__9);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Transaction_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_transaction_event;\r\n    return this;\r\n}\r\n\r\nTransaction_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTransaction_eventContext.prototype.constructor = Transaction_eventContext;\r\n\r\nTransaction_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nTransaction_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterTransaction_event(this);\r\n\t}\r\n};\r\n\r\nTransaction_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitTransaction_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Transaction_eventContext = Transaction_eventContext;\r\n\r\npolicyParser.prototype.transaction_event = function() {\r\n\r\n    var localctx = new Transaction_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 32, policyParser.RULE_transaction_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 195;\r\n        this.match(policyParser.T__10);\r\n        this.state = 196;\r\n        this.match(policyParser.INT);\r\n        this.state = 197;\r\n        this.match(policyParser.T__11);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Guaranty_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_guaranty_event;\r\n    return this;\r\n}\r\n\r\nGuaranty_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nGuaranty_eventContext.prototype.constructor = Guaranty_eventContext;\r\n\r\nGuaranty_eventContext.prototype.contract_guaranty = function() {\r\n    return this.getTypedRuleContext(Contract_guarantyContext,0);\r\n};\r\n\r\nGuaranty_eventContext.prototype.platform_guaranty = function() {\r\n    return this.getTypedRuleContext(Platform_guarantyContext,0);\r\n};\r\n\r\nGuaranty_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterGuaranty_event(this);\r\n\t}\r\n};\r\n\r\nGuaranty_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitGuaranty_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Guaranty_eventContext = Guaranty_eventContext;\r\n\r\npolicyParser.prototype.guaranty_event = function() {\r\n\r\n    var localctx = new Guaranty_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 34, policyParser.RULE_guaranty_event);\r\n    try {\r\n        this.state = 201;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__12:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 199;\r\n            this.contract_guaranty();\r\n            break;\r\n        case policyParser.T__15:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 200;\r\n            this.platform_guaranty();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Contract_guarantyContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_contract_guaranty;\r\n    return this;\r\n}\r\n\r\nContract_guarantyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nContract_guarantyContext.prototype.constructor = Contract_guarantyContext;\r\n\r\nContract_guarantyContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.INT);\r\n    } else {\r\n        return this.getToken(policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nContract_guarantyContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterContract_guaranty(this);\r\n\t}\r\n};\r\n\r\nContract_guarantyContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitContract_guaranty(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Contract_guarantyContext = Contract_guarantyContext;\r\n\r\npolicyParser.prototype.contract_guaranty = function() {\r\n\r\n    var localctx = new Contract_guarantyContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 36, policyParser.RULE_contract_guaranty);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 203;\r\n        this.match(policyParser.T__12);\r\n        this.state = 204;\r\n        this.match(policyParser.INT);\r\n        this.state = 205;\r\n        this.match(policyParser.T__13);\r\n        this.state = 206;\r\n        this.match(policyParser.INT);\r\n        this.state = 207;\r\n        this.match(policyParser.T__14);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Platform_guarantyContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_platform_guaranty;\r\n    return this;\r\n}\r\n\r\nPlatform_guarantyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nPlatform_guarantyContext.prototype.constructor = Platform_guarantyContext;\r\n\r\nPlatform_guarantyContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nPlatform_guarantyContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterPlatform_guaranty(this);\r\n\t}\r\n};\r\n\r\nPlatform_guarantyContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitPlatform_guaranty(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Platform_guarantyContext = Platform_guarantyContext;\r\n\r\npolicyParser.prototype.platform_guaranty = function() {\r\n\r\n    var localctx = new Platform_guarantyContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 38, policyParser.RULE_platform_guaranty);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 209;\r\n        this.match(policyParser.T__15);\r\n        this.state = 210;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Signing_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_signing_event;\r\n    return this;\r\n}\r\n\r\nSigning_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSigning_eventContext.prototype.constructor = Signing_eventContext;\r\n\r\nSigning_eventContext.prototype.LICENSE = function() {\r\n    return this.getToken(policyParser.LICENSE, 0);\r\n};\r\n\r\nSigning_eventContext.prototype.license_resource_id = function(i) {\r\n    if(i===undefined) {\r\n        i = null;\r\n    }\r\n    if(i===null) {\r\n        return this.getTypedRuleContexts(License_resource_idContext);\r\n    } else {\r\n        return this.getTypedRuleContext(License_resource_idContext,i);\r\n    }\r\n};\r\n\r\nSigning_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSigning_event(this);\r\n\t}\r\n};\r\n\r\nSigning_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSigning_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Signing_eventContext = Signing_eventContext;\r\n\r\npolicyParser.prototype.signing_event = function() {\r\n\r\n    var localctx = new Signing_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 40, policyParser.RULE_signing_event);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 212;\r\n        this.match(policyParser.LICENSE);\r\n        this.state = 220; \r\n        this._errHandler.sync(this);\r\n        _la = this._input.LA(1);\r\n        do {\r\n            this.state = 216;\r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n            while(_la===policyParser.T__2) {\r\n                this.state = 213;\r\n                this.match(policyParser.T__2);\r\n                this.state = 218;\r\n                this._errHandler.sync(this);\r\n                _la = this._input.LA(1);\r\n            }\r\n            this.state = 219;\r\n            this.license_resource_id();\r\n            this.state = 222; \r\n            this._errHandler.sync(this);\r\n            _la = this._input.LA(1);\r\n        } while(_la===policyParser.T__2 || _la===policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Access_count_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_access_count_event;\r\n    return this;\r\n}\r\n\r\nAccess_count_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAccess_count_eventContext.prototype.constructor = Access_count_eventContext;\r\n\r\nAccess_count_eventContext.prototype.visit_increment_event = function() {\r\n    return this.getTypedRuleContext(Visit_increment_eventContext,0);\r\n};\r\n\r\nAccess_count_eventContext.prototype.visit_event = function() {\r\n    return this.getTypedRuleContext(Visit_eventContext,0);\r\n};\r\n\r\nAccess_count_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAccess_count_event(this);\r\n\t}\r\n};\r\n\r\nAccess_count_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAccess_count_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Access_count_eventContext = Access_count_eventContext;\r\n\r\npolicyParser.prototype.access_count_event = function() {\r\n\r\n    var localctx = new Access_count_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 42, policyParser.RULE_access_count_event);\r\n    try {\r\n        this.state = 226;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__16:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 224;\r\n            this.visit_increment_event();\r\n            break;\r\n        case policyParser.T__17:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 225;\r\n            this.visit_event();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Visit_increment_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_visit_increment_event;\r\n    return this;\r\n}\r\n\r\nVisit_increment_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVisit_increment_eventContext.prototype.constructor = Visit_increment_eventContext;\r\n\r\nVisit_increment_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nVisit_increment_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterVisit_increment_event(this);\r\n\t}\r\n};\r\n\r\nVisit_increment_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitVisit_increment_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Visit_increment_eventContext = Visit_increment_eventContext;\r\n\r\npolicyParser.prototype.visit_increment_event = function() {\r\n\r\n    var localctx = new Visit_increment_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 44, policyParser.RULE_visit_increment_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 228;\r\n        this.match(policyParser.T__16);\r\n        this.state = 229;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Visit_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_visit_event;\r\n    return this;\r\n}\r\n\r\nVisit_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nVisit_eventContext.prototype.constructor = Visit_eventContext;\r\n\r\nVisit_eventContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nVisit_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterVisit_event(this);\r\n\t}\r\n};\r\n\r\nVisit_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitVisit_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Visit_eventContext = Visit_eventContext;\r\n\r\npolicyParser.prototype.visit_event = function() {\r\n\r\n    var localctx = new Visit_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 46, policyParser.RULE_visit_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 231;\r\n        this.match(policyParser.T__17);\r\n        this.state = 232;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_balance_event;\r\n    return this;\r\n}\r\n\r\nBalance_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_eventContext.prototype.constructor = Balance_eventContext;\r\n\r\nBalance_eventContext.prototype.balance_greater = function() {\r\n    return this.getTypedRuleContext(Balance_greaterContext,0);\r\n};\r\n\r\nBalance_eventContext.prototype.balance_smaller = function() {\r\n    return this.getTypedRuleContext(Balance_smallerContext,0);\r\n};\r\n\r\nBalance_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterBalance_event(this);\r\n\t}\r\n};\r\n\r\nBalance_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitBalance_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Balance_eventContext = Balance_eventContext;\r\n\r\npolicyParser.prototype.balance_event = function() {\r\n\r\n    var localctx = new Balance_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 48, policyParser.RULE_balance_event);\r\n    try {\r\n        this.state = 236;\r\n        this._errHandler.sync(this);\r\n        switch(this._input.LA(1)) {\r\n        case policyParser.T__18:\r\n            this.enterOuterAlt(localctx, 1);\r\n            this.state = 234;\r\n            this.balance_greater();\r\n            break;\r\n        case policyParser.T__19:\r\n            this.enterOuterAlt(localctx, 2);\r\n            this.state = 235;\r\n            this.balance_smaller();\r\n            break;\r\n        default:\r\n            throw new antlr4.error.NoViableAltException(this);\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_greaterContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_balance_greater;\r\n    return this;\r\n}\r\n\r\nBalance_greaterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_greaterContext.prototype.constructor = Balance_greaterContext;\r\n\r\nBalance_greaterContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nBalance_greaterContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterBalance_greater(this);\r\n\t}\r\n};\r\n\r\nBalance_greaterContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitBalance_greater(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Balance_greaterContext = Balance_greaterContext;\r\n\r\npolicyParser.prototype.balance_greater = function() {\r\n\r\n    var localctx = new Balance_greaterContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 50, policyParser.RULE_balance_greater);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 238;\r\n        this.match(policyParser.T__18);\r\n        this.state = 239;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Balance_smallerContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_balance_smaller;\r\n    return this;\r\n}\r\n\r\nBalance_smallerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nBalance_smallerContext.prototype.constructor = Balance_smallerContext;\r\n\r\nBalance_smallerContext.prototype.INT = function() {\r\n    return this.getToken(policyParser.INT, 0);\r\n};\r\n\r\nBalance_smallerContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterBalance_smaller(this);\r\n\t}\r\n};\r\n\r\nBalance_smallerContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitBalance_smaller(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Balance_smallerContext = Balance_smallerContext;\r\n\r\npolicyParser.prototype.balance_smaller = function() {\r\n\r\n    var localctx = new Balance_smallerContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 52, policyParser.RULE_balance_smaller);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 241;\r\n        this.match(policyParser.T__19);\r\n        this.state = 242;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Settlement_eventContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_settlement_event;\r\n    return this;\r\n}\r\n\r\nSettlement_eventContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nSettlement_eventContext.prototype.constructor = Settlement_eventContext;\r\n\r\n\r\nSettlement_eventContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterSettlement_event(this);\r\n\t}\r\n};\r\n\r\nSettlement_eventContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitSettlement_event(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Settlement_eventContext = Settlement_eventContext;\r\n\r\npolicyParser.prototype.settlement_event = function() {\r\n\r\n    var localctx = new Settlement_eventContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 54, policyParser.RULE_settlement_event);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 244;\r\n        this.match(policyParser.T__20);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction License_resource_idContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_license_resource_id;\r\n    return this;\r\n}\r\n\r\nLicense_resource_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nLicense_resource_idContext.prototype.constructor = License_resource_idContext;\r\n\r\nLicense_resource_idContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nLicense_resource_idContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterLicense_resource_id(this);\r\n\t}\r\n};\r\n\r\nLicense_resource_idContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitLicense_resource_id(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.License_resource_idContext = License_resource_idContext;\r\n\r\npolicyParser.prototype.license_resource_id = function() {\r\n\r\n    var localctx = new License_resource_idContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 56, policyParser.RULE_license_resource_id);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 246;\r\n        this.match(policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Account_idContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_account_id;\r\n    return this;\r\n}\r\n\r\nAccount_idContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAccount_idContext.prototype.constructor = Account_idContext;\r\n\r\nAccount_idContext.prototype.ID = function() {\r\n    return this.getToken(policyParser.ID, 0);\r\n};\r\n\r\nAccount_idContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAccount_id(this);\r\n\t}\r\n};\r\n\r\nAccount_idContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAccount_id(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Account_idContext = Account_idContext;\r\n\r\npolicyParser.prototype.account_id = function() {\r\n\r\n    var localctx = new Account_idContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 58, policyParser.RULE_account_id);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 248;\r\n        this.match(policyParser.ID);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction UsersContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_users;\r\n    return this;\r\n}\r\n\r\nUsersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUsersContext.prototype.constructor = UsersContext;\r\n\r\nUsersContext.prototype.ID = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.ID);\r\n    } else {\r\n        return this.getToken(policyParser.ID, i);\r\n    }\r\n};\r\n\r\n\r\nUsersContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterUsers(this);\r\n\t}\r\n};\r\n\r\nUsersContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitUsers(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.UsersContext = UsersContext;\r\n\r\npolicyParser.prototype.users = function() {\r\n\r\n    var localctx = new UsersContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 60, policyParser.RULE_users);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 254; \r\n        this._errHandler.sync(this);\r\n        var _alt = 1;\r\n        do {\r\n        \tswitch (_alt) {\r\n        \tcase 1:\r\n        \t\tthis.state = 254;\r\n        \t\tthis._errHandler.sync(this);\r\n        \t\tswitch(this._input.LA(1)) {\r\n        \t\tcase policyParser.T__21:\r\n        \t\t    this.state = 250;\r\n        \t\t    this.match(policyParser.T__21);\r\n        \t\t    break;\r\n        \t\tcase policyParser.T__22:\r\n        \t\t    this.state = 251;\r\n        \t\t    this.match(policyParser.T__22);\r\n        \t\t    break;\r\n        \t\tcase policyParser.T__23:\r\n        \t\t    this.state = 252;\r\n        \t\t    this.match(policyParser.T__23);\r\n        \t\t    break;\r\n        \t\tcase policyParser.ID:\r\n        \t\t    this.state = 253;\r\n        \t\t    this.match(policyParser.ID);\r\n        \t\t    break;\r\n        \t\tdefault:\r\n        \t\t    throw new antlr4.error.NoViableAltException(this);\r\n        \t\t}\r\n        \t\tbreak;\r\n        \tdefault:\r\n        \t\tthrow new antlr4.error.NoViableAltException(this);\r\n        \t}\r\n        \tthis.state = 256; \r\n        \tthis._errHandler.sync(this);\r\n        \t_alt = this._interp.adaptivePredict(this._input,20, this._ctx);\r\n        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction User_groupsContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_user_groups;\r\n    return this;\r\n}\r\n\r\nUser_groupsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nUser_groupsContext.prototype.constructor = User_groupsContext;\r\n\r\n\r\nUser_groupsContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterUser_groups(this);\r\n\t}\r\n};\r\n\r\nUser_groupsContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitUser_groups(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.User_groupsContext = User_groupsContext;\r\n\r\npolicyParser.prototype.user_groups = function() {\r\n\r\n    var localctx = new User_groupsContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 62, policyParser.RULE_user_groups);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 258;\r\n        _la = this._input.LA(1);\r\n        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << policyParser.T__24) | (1 << policyParser.T__25) | (1 << policyParser.T__26) | (1 << policyParser.T__27))) !== 0))) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction AndContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_and;\r\n    return this;\r\n}\r\n\r\nAndContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nAndContext.prototype.constructor = AndContext;\r\n\r\n\r\nAndContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterAnd(this);\r\n\t}\r\n};\r\n\r\nAndContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitAnd(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.AndContext = AndContext;\r\n\r\npolicyParser.prototype.and = function() {\r\n\r\n    var localctx = new AndContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 64, policyParser.RULE_and);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 260;\r\n        this.match(policyParser.T__28);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction View_unitContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_view_unit;\r\n    return this;\r\n}\r\n\r\nView_unitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nView_unitContext.prototype.constructor = View_unitContext;\r\n\r\n\r\nView_unitContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterView_unit(this);\r\n\t}\r\n};\r\n\r\nView_unitContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitView_unit(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.View_unitContext = View_unitContext;\r\n\r\npolicyParser.prototype.view_unit = function() {\r\n\r\n    var localctx = new View_unitContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 66, policyParser.RULE_view_unit);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 262;\r\n        _la = this._input.LA(1);\r\n        if(!(_la===policyParser.T__29 || _la===policyParser.T__30)) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Time_unitContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_time_unit;\r\n    return this;\r\n}\r\n\r\nTime_unitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nTime_unitContext.prototype.constructor = Time_unitContext;\r\n\r\n\r\nTime_unitContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterTime_unit(this);\r\n\t}\r\n};\r\n\r\nTime_unitContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitTime_unit(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Time_unitContext = Time_unitContext;\r\n\r\npolicyParser.prototype.time_unit = function() {\r\n\r\n    var localctx = new Time_unitContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 68, policyParser.RULE_time_unit);\r\n    var _la = 0; // Token type\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 264;\r\n        _la = this._input.LA(1);\r\n        if(!(((((_la - 15)) & ~0x1f) == 0 && ((1 << (_la - 15)) & ((1 << (policyParser.T__14 - 15)) | (1 << (policyParser.T__31 - 15)) | (1 << (policyParser.T__32 - 15)) | (1 << (policyParser.T__33 - 15)))) !== 0))) {\r\n        this._errHandler.recoverInline(this);\r\n        }\r\n        else {\r\n        \tthis._errHandler.reportMatch(this);\r\n            this.consume();\r\n        }\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction Start_hourContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_start_hour;\r\n    return this;\r\n}\r\n\r\nStart_hourContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nStart_hourContext.prototype.constructor = Start_hourContext;\r\n\r\nStart_hourContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.INT);\r\n    } else {\r\n        return this.getToken(policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nStart_hourContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterStart_hour(this);\r\n\t}\r\n};\r\n\r\nStart_hourContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitStart_hour(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.Start_hourContext = Start_hourContext;\r\n\r\npolicyParser.prototype.start_hour = function() {\r\n\r\n    var localctx = new Start_hourContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 70, policyParser.RULE_start_hour);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 266;\r\n        this.match(policyParser.INT);\r\n        this.state = 267;\r\n        this.match(policyParser.T__4);\r\n        this.state = 268;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\nfunction End_hourContext(parser, parent, invokingState) {\r\n\tif(parent===undefined) {\r\n\t    parent = null;\r\n\t}\r\n\tif(invokingState===undefined || invokingState===null) {\r\n\t\tinvokingState = -1;\r\n\t}\r\n\tantlr4.ParserRuleContext.call(this, parent, invokingState);\r\n    this.parser = parser;\r\n    this.ruleIndex = policyParser.RULE_end_hour;\r\n    return this;\r\n}\r\n\r\nEnd_hourContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);\r\nEnd_hourContext.prototype.constructor = End_hourContext;\r\n\r\nEnd_hourContext.prototype.INT = function(i) {\r\n\tif(i===undefined) {\r\n\t\ti = null;\r\n\t}\r\n    if(i===null) {\r\n        return this.getTokens(policyParser.INT);\r\n    } else {\r\n        return this.getToken(policyParser.INT, i);\r\n    }\r\n};\r\n\r\n\r\nEnd_hourContext.prototype.enterRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.enterEnd_hour(this);\r\n\t}\r\n};\r\n\r\nEnd_hourContext.prototype.exitRule = function(listener) {\r\n    if(listener instanceof policyListener ) {\r\n        listener.exitEnd_hour(this);\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\npolicyParser.End_hourContext = End_hourContext;\r\n\r\npolicyParser.prototype.end_hour = function() {\r\n\r\n    var localctx = new End_hourContext(this, this._ctx, this.state);\r\n    this.enterRule(localctx, 72, policyParser.RULE_end_hour);\r\n    try {\r\n        this.enterOuterAlt(localctx, 1);\r\n        this.state = 270;\r\n        this.match(policyParser.INT);\r\n        this.state = 271;\r\n        this.match(policyParser.T__4);\r\n        this.state = 272;\r\n        this.match(policyParser.INT);\r\n    } catch (re) {\r\n    \tif(re instanceof antlr4.error.RecognitionException) {\r\n\t        localctx.exception = re;\r\n\t        this._errHandler.reportError(this, re);\r\n\t        this._errHandler.recover(this, re);\r\n\t    } else {\r\n\t    \tthrow re;\r\n\t    }\r\n    } finally {\r\n        this.exitRule();\r\n    }\r\n    return localctx;\r\n};\r\n\r\n\r\nexports.policyParser = policyParser;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/policy_lang/gen/policyParser.js\n// module id = Lrau\n// module chunks = 0 1","const antlr4 = require('antlr4/index');\nconst policy = require('policy_lang');\r\nconst policyLexer = policy.policyLexer;\r\nconst policyParser = policy.policyParser\r\nconst _ = require('underscore');\r\n\r\nconst ErrorListener = require('antlr4/error/ErrorListener').ConsoleErrorListener;\r\nconst ErrorListenerExtend = require('./ErrorListenerExtend');\r\nErrorListenerExtend(ErrorListener.prototype);\r\n\r\nvar compile = function (text, target='json'){\r\n  let extentionClass = require('./JSONGeneratorExtension.js');\r\n  if (target === 'beautify') {\r\n    extentionClass = require('./BeautifyExtension.js');\r\n  }\r\n\r\n  let chars = new antlr4.InputStream(text);\r\n  let lexer = new policyLexer(chars);\r\n\r\n  let tokens  = new antlr4.CommonTokenStream(lexer);\r\n  let parser = new policyParser(tokens);\r\n  parser.buildParseTrees = true;\r\n  let tree = parser.p();\r\n  let listener = new extentionClass();\r\n  antlr4.tree.ParseTreeWalker.DEFAULT.walk(listener, tree);\r\n  if( parser._listeners[0].errorMsg ) {\r\n    //把错误信息放进listener里面\r\n    listener.errorMsg =  parser._listeners[0].errorMsg;\r\n    parser._listeners[0].errorMsg = null\r\n  }\r\n  return listener;\r\n};\r\n\r\nexports.compile = compile;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/freelog_policy_compiler/index.js\n// module id = QtOE\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar Set = require('./Utils').Set;\nvar BitSet = require('./Utils').BitSet;\nvar Token = require('./Token').Token;\nvar ATNConfig = require('./atn/ATNConfig').ATNConfig;\nvar Interval = require('./IntervalSet').Interval;\nvar IntervalSet = require('./IntervalSet').IntervalSet;\nvar RuleStopState = require('./atn/ATNState').RuleStopState;\nvar RuleTransition = require('./atn/Transition').RuleTransition;\nvar NotSetTransition = require('./atn/Transition').NotSetTransition;\nvar WildcardTransition = require('./atn/Transition').WildcardTransition;\nvar AbstractPredicateTransition = require('./atn/Transition').AbstractPredicateTransition;\n\nvar pc = require('./PredictionContext');\nvar predictionContextFromRuleContext = pc.predictionContextFromRuleContext;\nvar PredictionContext = pc.PredictionContext;\nvar SingletonPredictionContext = pc.SingletonPredictionContext;\n\nfunction LL1Analyzer (atn) {\n    this.atn = atn;\n}\n\n//* Special value added to the lookahead sets to indicate that we hit\n//  a predicate during analysis if {@code seeThruPreds==false}.\n///\nLL1Analyzer.HIT_PRED = Token.INVALID_TYPE;\n\n\n//*\n// Calculates the SLL(1) expected lookahead set for each outgoing transition\n// of an {@link ATNState}. The returned array has one element for each\n// outgoing transition in {@code s}. If the closure from transition\n// <em>i</em> leads to a semantic predicate before matching a symbol, the\n// element at index <em>i</em> of the result will be {@code null}.\n//\n// @param s the ATN state\n// @return the expected symbols for each outgoing transition of {@code s}.\n///\nLL1Analyzer.prototype.getDecisionLookahead = function(s) {\n    if (s === null) {\n        return null;\n    }\n    var count = s.transitions.length;\n    var look = [];\n    for(var alt=0; alt< count; alt++) {\n        look[alt] = new IntervalSet();\n        var lookBusy = new Set();\n        var seeThruPreds = false; // fail to get lookahead upon pred\n        this._LOOK(s.transition(alt).target, null, PredictionContext.EMPTY,\n              look[alt], lookBusy, new BitSet(), seeThruPreds, false);\n        // Wipe out lookahead for this alternative if we found nothing\n        // or we had a predicate when we !seeThruPreds\n        if (look[alt].length===0 || look[alt].contains(LL1Analyzer.HIT_PRED)) {\n            look[alt] = null;\n        }\n    }\n    return look;\n};\n\n//*\n// Compute set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n//\n// <p>If {@code ctx} is {@code null} and the end of the rule containing\n// {@code s} is reached, {@link Token//EPSILON} is added to the result set.\n// If {@code ctx} is not {@code null} and the end of the outermost rule is\n// reached, {@link Token//EOF} is added to the result set.</p>\n//\n// @param s the ATN state\n// @param stopState the ATN state to stop at. This can be a\n// {@link BlockEndState} to detect epsilon paths through a closure.\n// @param ctx the complete parser context, or {@code null} if the context\n// should be ignored\n//\n// @return The set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n///\nLL1Analyzer.prototype.LOOK = function(s, stopState, ctx) {\n    var r = new IntervalSet();\n    var seeThruPreds = true; // ignore preds; get all lookahead\n\tctx = ctx || null;\n    var lookContext = ctx!==null ? predictionContextFromRuleContext(s.atn, ctx) : null;\n    this._LOOK(s, stopState, lookContext, r, new Set(), new BitSet(), seeThruPreds, true);\n    return r;\n};\n\n//*\n// Compute set of tokens that can follow {@code s} in the ATN in the\n// specified {@code ctx}.\n//\n// <p>If {@code ctx} is {@code null} and {@code stopState} or the end of the\n// rule containing {@code s} is reached, {@link Token//EPSILON} is added to\n// the result set. If {@code ctx} is not {@code null} and {@code addEOF} is\n// {@code true} and {@code stopState} or the end of the outermost rule is\n// reached, {@link Token//EOF} is added to the result set.</p>\n//\n// @param s the ATN state.\n// @param stopState the ATN state to stop at. This can be a\n// {@link BlockEndState} to detect epsilon paths through a closure.\n// @param ctx The outer context, or {@code null} if the outer context should\n// not be used.\n// @param look The result lookahead set.\n// @param lookBusy A set used for preventing epsilon closures in the ATN\n// from causing a stack overflow. Outside code should pass\n// {@code new Set<ATNConfig>} for this argument.\n// @param calledRuleStack A set used for preventing left recursion in the\n// ATN from causing a stack overflow. Outside code should pass\n// {@code new BitSet()} for this argument.\n// @param seeThruPreds {@code true} to true semantic predicates as\n// implicitly {@code true} and \"see through them\", otherwise {@code false}\n// to treat semantic predicates as opaque and add {@link //HIT_PRED} to the\n// result if one is encountered.\n// @param addEOF Add {@link Token//EOF} to the result if the end of the\n// outermost context is reached. This parameter has no effect if {@code ctx}\n// is {@code null}.\n///\nLL1Analyzer.prototype._LOOK = function(s, stopState , ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF) {\n    var c = new ATNConfig({state:s, alt:0, context: ctx}, null);\n    if (lookBusy.contains(c)) {\n        return;\n    }\n    lookBusy.add(c);\n    if (s === stopState) {\n        if (ctx ===null) {\n            look.addOne(Token.EPSILON);\n            return;\n        } else if (ctx.isEmpty() && addEOF) {\n            look.addOne(Token.EOF);\n            return;\n        }\n    }\n    if (s instanceof RuleStopState ) {\n        if (ctx ===null) {\n            look.addOne(Token.EPSILON);\n            return;\n        } else if (ctx.isEmpty() && addEOF) {\n            look.addOne(Token.EOF);\n            return;\n        }\n        if (ctx !== PredictionContext.EMPTY) {\n            // run thru all possible stack tops in ctx\n            for(var i=0; i<ctx.length; i++) {\n                var returnState = this.atn.states[ctx.getReturnState(i)];\n                var removed = calledRuleStack.contains(returnState.ruleIndex);\n                try {\n                    calledRuleStack.remove(returnState.ruleIndex);\n                    this._LOOK(returnState, stopState, ctx.getParent(i), look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n                } finally {\n                    if (removed) {\n                        calledRuleStack.add(returnState.ruleIndex);\n                    }\n                }\n            }\n            return;\n        }\n    }\n    for(var j=0; j<s.transitions.length; j++) {\n        var t = s.transitions[j];\n        if (t.constructor === RuleTransition) {\n            if (calledRuleStack.contains(t.target.ruleIndex)) {\n                continue;\n            }\n            var newContext = SingletonPredictionContext.create(ctx, t.followState.stateNumber);\n            try {\n                calledRuleStack.add(t.target.ruleIndex);\n                this._LOOK(t.target, stopState, newContext, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n            } finally {\n                calledRuleStack.remove(t.target.ruleIndex);\n            }\n        } else if (t instanceof AbstractPredicateTransition ) {\n            if (seeThruPreds) {\n                this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n            } else {\n                look.addOne(LL1Analyzer.HIT_PRED);\n            }\n        } else if( t.isEpsilon) {\n            this._LOOK(t.target, stopState, ctx, look, lookBusy, calledRuleStack, seeThruPreds, addEOF);\n        } else if (t.constructor === WildcardTransition) {\n            look.addRange( Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType );\n        } else {\n            var set = t.label;\n            if (set !== null) {\n                if (t instanceof NotSetTransition) {\n                    set = set.complement(Token.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType);\n                }\n                look.addSet(set);\n            }\n        }\n    }\n};\n\nexports.LL1Analyzer = LL1Analyzer;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/LL1Analyzer.js\n// module id = RuwF\n// module chunks = 0 1","var dataloaderHelpers = {\n    loadResourceDetail(resourceId) {\n        return window.QI.fetch(`//api.freelog.com/v1/resources/${resourceId}`).then((res) => {\n            if (res.status === 200) {\n                return res.json()\n            } else {\n                return Promise.reject(res)\n            }\n        }).then((res) => {\n            if (res.ret === 0 && res.errcode === 0) {\n                return res.data\n            } else {\n                return Promise.reject(res)\n            }\n        })\n    },\n    loadPresentableDetail(presentableId) {\n        return window.QI.fetch(`//api.freelog.com/v1/presentables/${presentableId}`).then((res) => {\n            if (res.status === 200) {\n                return res.json()\n            } else {\n                return Promise.reject(res)\n            }\n        }).then((res) => {\n            if (res.ret === 0 && res.errcode === 0) {\n                return res.data\n            } else {\n                return Promise.reject(res)\n            }\n        })\n    },\n\n    loadContractDetail(data) {\n        var contractData = data.contract\n        return this.loadPresentableDetail(contractData.targetId)\n            .then((data) => {\n                contractData.resourceDetail = data.tagInfo.resourceInfo\n                data.contractDetail = contractData\n                data.resourceDetail = data.tagInfo.resourceInfo\n                return data\n            })\n    },\n    loadPolicyDetail(authData) {\n        var presentableId = authData.presentableId;\n        return this.loadPresentableDetail(presentableId)\n            .then((data) => {\n                data.resourceDetail = data.tagInfo.resourceInfo\n                return data\n            })\n    }\n}\n\nexport default {\n    name: 'errorResponseHandler',\n    handle(data, appUI, callback) {\n        this.appUI = appUI\n        if (data && data.errcode) {\n            var errorMsg = data.msg;\n            var resData = data.data && data.data.data\n            switch (data.errcode) {\n                //未激活状态\n                case 70080104:\n                    dataloaderHelpers.loadContractDetail(resData)\n                        .then(this.appendDataToUI.bind(this));\n                    break;\n                //未签约状态\n                case 70080101:\n                    dataloaderHelpers.loadPolicyDetail(resData)\n                        .then(this.appendDataToUI.bind(this));\n                    break;\n                //节点与资源之间的合约授权失败\n                case 70080202:\n                    console.log(errorMsg, resData)\n                    break;\n                default:\n                    break;\n            }\n\n            if (typeof callback === 'function') {\n                appUI.$on('close', function () {\n                    //todo\n                    console.log('error response close', resData)\n                })\n            }\n        }\n    },\n    appendDataToUI(data) {\n        this.appUI.appendData(data)\n        this.appUI.showAuthDialog()\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/services/errorResponseHandler.js","export default {\n    name: 'showDialogHandler',\n    handle(data, appUI, callback) {\n        appUI.showAuthDialog()\n        callback && callback()\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/services/showDialogHandler.js","import errorResponseHandler from './errorResponseHandler'\nimport showDialogHandler from './showDialogHandler'\n\nexport default {\n    errorResponseHandler,\n    showDialogHandler\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/services/index.js","import Vue from 'vue'\nimport Service from './services'\n\nconst DEFAULT_EVENT_NAME = 'freelogSystemService';\n\nexport default {\n    init(appUI) {\n        this.appUI = appUI\n        this.bus = new Vue()\n        //统一监听服务，根据action进行分发执行器\n        this.bus.$on(DEFAULT_EVENT_NAME, this.dispatchHandler.bind(this))\n    },\n    dispatchHandler(event) {\n        var detail = event.detail\n        var handlerName = detail.eventName\n        var opts = detail.opts || {}\n        var Handler\n        if ((Handler = Service[handlerName])) {\n            Handler.handle(opts.data, this.appUI, opts.callback)\n        } else {\n            console.warn('不存在对应的异常处理函数')\n        }\n    },\n    trigger(eventName, opts) {\n        this.bus.$emit(DEFAULT_EVENT_NAME, {\n            detail: {\n                eventName: eventName,\n                opts: opts\n            }\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/event-dispatcher.js","// Generated from policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n// This class defines a complete listener for a parse tree produced by policyParser.\r\nfunction policyListener() {\r\n\tantlr4.tree.ParseTreeListener.call(this);\r\n\treturn this;\r\n}\r\n\r\npolicyListener.prototype = Object.create(antlr4.tree.ParseTreeListener.prototype);\r\npolicyListener.prototype.constructor = policyListener;\r\n\r\n// Enter a parse tree produced by policyParser#p.\r\npolicyListener.prototype.enterP = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#p.\r\npolicyListener.prototype.exitP = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#segment.\r\npolicyListener.prototype.enterSegment = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#segment.\r\npolicyListener.prototype.exitSegment = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#audience_clause.\r\npolicyListener.prototype.enterAudience_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#audience_clause.\r\npolicyListener.prototype.exitAudience_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#athorize_token_clause.\r\npolicyListener.prototype.enterAthorize_token_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#athorize_token_clause.\r\npolicyListener.prototype.exitAthorize_token_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#audience_individuals_clause.\r\npolicyListener.prototype.enterAudience_individuals_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#audience_individuals_clause.\r\npolicyListener.prototype.exitAudience_individuals_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#audience_groups_clause.\r\npolicyListener.prototype.enterAudience_groups_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#audience_groups_clause.\r\npolicyListener.prototype.exitAudience_groups_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#state_clause.\r\npolicyListener.prototype.enterState_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#state_clause.\r\npolicyListener.prototype.exitState_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#current_state_clause.\r\npolicyListener.prototype.enterCurrent_state_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#current_state_clause.\r\npolicyListener.prototype.exitCurrent_state_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#target_clause.\r\npolicyListener.prototype.enterTarget_clause = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#target_clause.\r\npolicyListener.prototype.exitTarget_clause = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#accepting.\r\npolicyListener.prototype.enterAccepting = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#accepting.\r\npolicyListener.prototype.exitAccepting = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#event.\r\npolicyListener.prototype.enterEvent = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#event.\r\npolicyListener.prototype.exitEvent = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#and_event.\r\npolicyListener.prototype.enterAnd_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#and_event.\r\npolicyListener.prototype.exitAnd_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#period_event.\r\npolicyListener.prototype.enterPeriod_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#period_event.\r\npolicyListener.prototype.exitPeriod_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#specific_date_event.\r\npolicyListener.prototype.enterSpecific_date_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#specific_date_event.\r\npolicyListener.prototype.exitSpecific_date_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#relative_date_event.\r\npolicyListener.prototype.enterRelative_date_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#relative_date_event.\r\npolicyListener.prototype.exitRelative_date_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#pricing_agreement_event.\r\npolicyListener.prototype.enterPricing_agreement_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#pricing_agreement_event.\r\npolicyListener.prototype.exitPricing_agreement_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#transaction_event.\r\npolicyListener.prototype.enterTransaction_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#transaction_event.\r\npolicyListener.prototype.exitTransaction_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#guaranty_event.\r\npolicyListener.prototype.enterGuaranty_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#guaranty_event.\r\npolicyListener.prototype.exitGuaranty_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#contract_guaranty.\r\npolicyListener.prototype.enterContract_guaranty = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#contract_guaranty.\r\npolicyListener.prototype.exitContract_guaranty = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#platform_guaranty.\r\npolicyListener.prototype.enterPlatform_guaranty = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#platform_guaranty.\r\npolicyListener.prototype.exitPlatform_guaranty = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#signing_event.\r\npolicyListener.prototype.enterSigning_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#signing_event.\r\npolicyListener.prototype.exitSigning_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#access_count_event.\r\npolicyListener.prototype.enterAccess_count_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#access_count_event.\r\npolicyListener.prototype.exitAccess_count_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#visit_increment_event.\r\npolicyListener.prototype.enterVisit_increment_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#visit_increment_event.\r\npolicyListener.prototype.exitVisit_increment_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#visit_event.\r\npolicyListener.prototype.enterVisit_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#visit_event.\r\npolicyListener.prototype.exitVisit_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#balance_event.\r\npolicyListener.prototype.enterBalance_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#balance_event.\r\npolicyListener.prototype.exitBalance_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#balance_greater.\r\npolicyListener.prototype.enterBalance_greater = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#balance_greater.\r\npolicyListener.prototype.exitBalance_greater = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#balance_smaller.\r\npolicyListener.prototype.enterBalance_smaller = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#balance_smaller.\r\npolicyListener.prototype.exitBalance_smaller = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#settlement_event.\r\npolicyListener.prototype.enterSettlement_event = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#settlement_event.\r\npolicyListener.prototype.exitSettlement_event = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#license_resource_id.\r\npolicyListener.prototype.enterLicense_resource_id = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#license_resource_id.\r\npolicyListener.prototype.exitLicense_resource_id = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#account_id.\r\npolicyListener.prototype.enterAccount_id = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#account_id.\r\npolicyListener.prototype.exitAccount_id = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#users.\r\npolicyListener.prototype.enterUsers = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#users.\r\npolicyListener.prototype.exitUsers = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#user_groups.\r\npolicyListener.prototype.enterUser_groups = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#user_groups.\r\npolicyListener.prototype.exitUser_groups = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#and.\r\npolicyListener.prototype.enterAnd = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#and.\r\npolicyListener.prototype.exitAnd = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#view_unit.\r\npolicyListener.prototype.enterView_unit = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#view_unit.\r\npolicyListener.prototype.exitView_unit = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#time_unit.\r\npolicyListener.prototype.enterTime_unit = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#time_unit.\r\npolicyListener.prototype.exitTime_unit = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#start_hour.\r\npolicyListener.prototype.enterStart_hour = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#start_hour.\r\npolicyListener.prototype.exitStart_hour = function(ctx) {\r\n};\r\n\r\n\r\n// Enter a parse tree produced by policyParser#end_hour.\r\npolicyListener.prototype.enterEnd_hour = function(ctx) {\r\n};\r\n\r\n// Exit a parse tree produced by policyParser#end_hour.\r\npolicyListener.prototype.exitEnd_hour = function(ctx) {\r\n};\r\n\r\n\r\n\r\nexports.policyListener = policyListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/policy_lang/gen/policyListener.js\n// module id = Smw7\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n/*jslint smarttabs:true */\n\nvar Token = require('./Token').Token;\n\n/* stop is not included! */\nfunction Interval(start, stop) {\n\tthis.start = start;\n\tthis.stop = stop;\n\treturn this;\n}\n\nInterval.prototype.contains = function(item) {\n\treturn item >= this.start && item < this.stop;\n};\n\nInterval.prototype.toString = function() {\n\tif(this.start===this.stop-1) {\n\t\treturn this.start.toString();\n\t} else {\n\t\treturn this.start.toString() + \"..\" + (this.stop-1).toString();\n\t}\n};\n\n\nObject.defineProperty(Interval.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.stop - this.start;\n\t}\n});\n\nfunction IntervalSet() {\n\tthis.intervals = null;\n\tthis.readOnly = false;\n}\n\nIntervalSet.prototype.first = function(v) {\n\tif (this.intervals === null || this.intervals.length===0) {\n\t\treturn Token.INVALID_TYPE;\n\t} else {\n\t\treturn this.intervals[0].start;\n\t}\n};\n\nIntervalSet.prototype.addOne = function(v) {\n\tthis.addInterval(new Interval(v, v + 1));\n};\n\nIntervalSet.prototype.addRange = function(l, h) {\n\tthis.addInterval(new Interval(l, h + 1));\n};\n\nIntervalSet.prototype.addInterval = function(v) {\n\tif (this.intervals === null) {\n\t\tthis.intervals = [];\n\t\tthis.intervals.push(v);\n\t} else {\n\t\t// find insert pos\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tvar i = this.intervals[k];\n\t\t\t// distinct range -> insert\n\t\t\tif (v.stop < i.start) {\n\t\t\t\tthis.intervals.splice(k, 0, v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// contiguous range -> adjust\n\t\t\telse if (v.stop === i.start) {\n\t\t\t\tthis.intervals[k].start = v.start;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// overlapping range -> adjust and reduce\n\t\t\telse if (v.start <= i.stop) {\n\t\t\t\tthis.intervals[k] = new Interval(Math.min(i.start, v.start), Math.max(i.stop, v.stop));\n\t\t\t\tthis.reduce(k);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// greater than any existing\n\t\tthis.intervals.push(v);\n\t}\n};\n\nIntervalSet.prototype.addSet = function(other) {\n\tif (other.intervals !== null) {\n\t\tfor (var k = 0; k < other.intervals.length; k++) {\n\t\t\tvar i = other.intervals[k];\n\t\t\tthis.addInterval(new Interval(i.start, i.stop));\n\t\t}\n\t}\n\treturn this;\n};\n\nIntervalSet.prototype.reduce = function(k) {\n\t// only need to reduce if k is not the last\n\tif (k < this.intervalslength - 1) {\n\t\tvar l = this.intervals[k];\n\t\tvar r = this.intervals[k + 1];\n\t\t// if r contained in l\n\t\tif (l.stop >= r.stop) {\n\t\t\tthis.intervals.pop(k + 1);\n\t\t\tthis.reduce(k);\n\t\t} else if (l.stop >= r.start) {\n\t\t\tthis.intervals[k] = new Interval(l.start, r.stop);\n\t\t\tthis.intervals.pop(k + 1);\n\t\t}\n\t}\n};\n\nIntervalSet.prototype.complement = function(start, stop) {\n    var result = new IntervalSet();\n    result.addInterval(new Interval(start,stop+1));\n    for(var i=0; i<this.intervals.length; i++) {\n        result.removeRange(this.intervals[i]);\n    }\n    return result;\n};\n\nIntervalSet.prototype.contains = function(item) {\n\tif (this.intervals === null) {\n\t\treturn false;\n\t} else {\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tif(this.intervals[k].contains(item)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\n\nObject.defineProperty(IntervalSet.prototype, \"length\", {\n\tget : function() {\n\t\tvar len = 0;\n\t\tthis.intervals.map(function(i) {len += i.length;});\n\t\treturn len;\n\t}\n});\n\nIntervalSet.prototype.removeRange = function(v) {\n    if(v.start===v.stop-1) {\n        this.removeOne(v.start);\n    } else if (this.intervals!==null) {\n        var k = 0;\n        for(var n=0; n<this.intervals.length; n++) {\n            var i = this.intervals[k];\n            // intervals are ordered\n            if (v.stop<=i.start) {\n                return;\n            }\n            // check for including range, split it\n            else if(v.start>i.start && v.stop<i.stop) {\n                this.intervals[k] = new Interval(i.start, v.start);\n                var x = new Interval(v.stop, i.stop);\n                this.intervals.splice(k, 0, x);\n                return;\n            }\n            // check for included range, remove it\n            else if(v.start<=i.start && v.stop>=i.stop) {\n                this.intervals.splice(k, 1);\n                k = k - 1; // need another pass\n            }\n            // check for lower boundary\n            else if(v.start<i.stop) {\n                this.intervals[k] = new Interval(i.start, v.start);\n            }\n            // check for upper boundary\n            else if(v.stop<i.stop) {\n                this.intervals[k] = new Interval(v.stop, i.stop);\n            }\n            k += 1;\n        }\n    }\n};\n\nIntervalSet.prototype.removeOne = function(v) {\n\tif (this.intervals !== null) {\n\t\tfor (var k = 0; k < this.intervals.length; k++) {\n\t\t\tvar i = this.intervals[k];\n\t\t\t// intervals is ordered\n\t\t\tif (v < i.start) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for single value range\n\t\t\telse if (v === i.start && v === i.stop - 1) {\n\t\t\t\tthis.intervals.splice(k, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for lower boundary\n\t\t\telse if (v === i.start) {\n\t\t\t\tthis.intervals[k] = new Interval(i.start + 1, i.stop);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// check for upper boundary\n\t\t\telse if (v === i.stop - 1) {\n\t\t\t\tthis.intervals[k] = new Interval(i.start, i.stop - 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// split existing range\n\t\t\telse if (v < i.stop - 1) {\n\t\t\t\tvar x = new Interval(i.start, v);\n\t\t\t\ti.start = v + 1;\n\t\t\t\tthis.intervals.splice(k, 0, x);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n};\n\nIntervalSet.prototype.toString = function(literalNames, symbolicNames, elemsAreChar) {\n\tliteralNames = literalNames || null;\n\tsymbolicNames = symbolicNames || null;\n\telemsAreChar = elemsAreChar || false;\n\tif (this.intervals === null) {\n\t\treturn \"{}\";\n\t} else if(literalNames!==null || symbolicNames!==null) {\n\t\treturn this.toTokenString(literalNames, symbolicNames);\n\t} else if(elemsAreChar) {\n\t\treturn this.toCharString();\n\t} else {\n\t\treturn this.toIndexString();\n\t}\n};\n\nIntervalSet.prototype.toCharString = function() {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tif(v.stop===v.start+1) {\n\t\t\tif ( v.start===Token.EOF ) {\n\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t} else {\n\t\t\t\tnames.push(\"'\" + String.fromCharCode(v.start) + \"'\");\n\t\t\t}\n\t\t} else {\n\t\t\tnames.push(\"'\" + String.fromCharCode(v.start) + \"'..'\" + String.fromCharCode(v.stop-1) + \"'\");\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\n\nIntervalSet.prototype.toIndexString = function() {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tif(v.stop===v.start+1) {\n\t\t\tif ( v.start===Token.EOF ) {\n\t\t\t\tnames.push(\"<EOF>\");\n\t\t\t} else {\n\t\t\t\tnames.push(v.start.toString());\n\t\t\t}\n\t\t} else {\n\t\t\tnames.push(v.start.toString() + \"..\" + (v.stop-1).toString());\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\n\nIntervalSet.prototype.toTokenString = function(literalNames, symbolicNames) {\n\tvar names = [];\n\tfor (var i = 0; i < this.intervals.length; i++) {\n\t\tvar v = this.intervals[i];\n\t\tfor (var j = v.start; j < v.stop; j++) {\n\t\t\tnames.push(this.elementName(literalNames, symbolicNames, j));\n\t\t}\n\t}\n\tif (names.length > 1) {\n\t\treturn \"{\" + names.join(\", \") + \"}\";\n\t} else {\n\t\treturn names[0];\n\t}\n};\n\nIntervalSet.prototype.elementName = function(literalNames, symbolicNames, a) {\n\tif (a === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else if (a === Token.EPSILON) {\n\t\treturn \"<EPSILON>\";\n\t} else {\n\t\treturn literalNames[a] || symbolicNames[a];\n\t}\n};\n\nexports.Interval = Interval;\nexports.IntervalSet = IntervalSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/IntervalSet.js\n// module id = T+Yw\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n// This default implementation of {@link TokenFactory} creates\n// {@link CommonToken} objects.\n//\n\nvar CommonToken = require('./Token').CommonToken;\n\nfunction TokenFactory() {\n\treturn this;\n}\n\nfunction CommonTokenFactory(copyText) {\n\tTokenFactory.call(this);\n    // Indicates whether {@link CommonToken//setText} should be called after\n    // constructing tokens to explicitly set the text. This is useful for cases\n    // where the input stream might not be able to provide arbitrary substrings\n    // of text from the input after the lexer creates a token (e.g. the\n    // implementation of {@link CharStream//getText} in\n    // {@link UnbufferedCharStream} throws an\n    // {@link UnsupportedOperationException}). Explicitly setting the token text\n    // allows {@link Token//getText} to be called at any time regardless of the\n    // input stream implementation.\n    //\n    // <p>\n    // The default value is {@code false} to avoid the performance and memory\n    // overhead of copying text for every token unless explicitly requested.</p>\n    //\n    this.copyText = copyText===undefined ? false : copyText;\n\treturn this;\n}\n\nCommonTokenFactory.prototype = Object.create(TokenFactory.prototype);\nCommonTokenFactory.prototype.constructor = CommonTokenFactory;\n\n//\n// The default {@link CommonTokenFactory} instance.\n//\n// <p>\n// This token factory does not explicitly copy token text when constructing\n// tokens.</p>\n//\nCommonTokenFactory.DEFAULT = new CommonTokenFactory();\n\nCommonTokenFactory.prototype.create = function(source, type, text, channel, start, stop, line, column) {\n    var t = new CommonToken(source, type, channel, start, stop);\n    t.line = line;\n    t.column = column;\n    if (text !==null) {\n        t.text = text;\n    } else if (this.copyText && source[1] !==null) {\n        t.text = source[1].getText(start,stop);\n    }\n    return t;\n};\n\nCommonTokenFactory.prototype.createThin = function(type, text) {\n    var t = new CommonToken(null, type);\n    t.text = text;\n    return t;\n};\n\nexports.CommonTokenFactory = CommonTokenFactory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/CommonTokenFactory.js\n// module id = TEvv\n// module chunks = 0 1","// removed by extract-text-webpack-plugin\n    if(module.hot) {\n      // 1514363257813\n      var cssReload = require(\"../../../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-hot-loader!./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-9b6660fa\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/pagebuild/ui-lib/policy/index.vue\n// module id = TKW+\n// module chunks = 0 1","import Vue from '@/layout'\n\nimport AppView from '../app.vue'\n\nimport PageBuildeParser from '../parser'\nimport EventCode from '../event_code'\nimport EventDispatcher from '../event-dispatcher'\n\n//对外接口服务\nvar App = {\n    isValidResponse(res) {\n        return (res && (res.ret === 0 && res.errcode === 0))\n    },\n    trigger() {\n        EventDispatcher.trigger.apply(EventDispatcher, arguments)\n    },\n    EventCode\n}\n\nfunction main() {\n    window.QI = document.querySelector('.js-lib-qi');\n\n    //render app view\n    new Vue({\n        el: '#app',\n        template: '<app-view @ready=\"onReady\"/>',\n        components: {'app-view': AppView},\n        methods: {\n            onReady(appUI) {\n                //挂载UI\n                this.appUI = appUI\n                window.FreeLogApp = App;\n                EventDispatcher.init(appUI)\n                PageBuildeParser.start()\n                appUI.$on('close', function () {\n                    console.log('close app ui dialog')\n                })\n            }\n        }\n    });\n}\n\nmain()\n\nexport default App\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/demo/app.js","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Set = require(\"../Utils\").Set;\nvar DFAState = require('./DFAState').DFAState;\nvar StarLoopEntryState = require('../atn/ATNState').StarLoopEntryState;\nvar ATNConfigSet = require('./../atn/ATNConfigSet').ATNConfigSet;\nvar DFASerializer = require('./DFASerializer').DFASerializer;\nvar LexerDFASerializer = require('./DFASerializer').LexerDFASerializer;\n\n\n\nfunction DFA(atnStartState, decision) {\n\tif (decision === undefined) {\n\t\tdecision = 0;\n\t}\n\t// From which ATN state did we create this DFA?\n\tthis.atnStartState = atnStartState;\n\tthis.decision = decision;\n\t// A set of all DFA states. Use {@link Map} so we can get old state back\n\t// ({@link Set} only allows you to see if it's there).\n\tthis._states = new Set();\n\tthis.s0 = null;\n\t// {@code true} if this DFA is for a precedence decision; otherwise,\n\t// {@code false}. This is the backing field for {@link //isPrecedenceDfa},\n\t// {@link //setPrecedenceDfa}.\n\tthis.precedenceDfa = false;\n    if (atnStartState instanceof StarLoopEntryState)\n    {\n        if (atnStartState.isPrecedenceDecision) {\n            this.precedenceDfa = true;\n            var precedenceState = new DFAState(null, new ATNConfigSet());\n            precedenceState.edges = [];\n            precedenceState.isAcceptState = false;\n            precedenceState.requiresFullContext = false;\n            this.s0 = precedenceState;\n        }\n    }\n\treturn this;\n}\n\n// Get the start state for a specific precedence value.\n//\n// @param precedence The current precedence.\n// @return The start state corresponding to the specified precedence, or\n// {@code null} if no start state exists for the specified precedence.\n//\n// @throws IllegalStateException if this is not a precedence DFA.\n// @see //isPrecedenceDfa()\n\nDFA.prototype.getPrecedenceStartState = function(precedence) {\n\tif (!(this.precedenceDfa)) {\n\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t}\n\t// s0.edges is never null for a precedence DFA\n\tif (precedence < 0 || precedence >= this.s0.edges.length) {\n\t\treturn null;\n\t}\n\treturn this.s0.edges[precedence] || null;\n};\n\n// Set the start state for a specific precedence value.\n//\n// @param precedence The current precedence.\n// @param startState The start state corresponding to the specified\n// precedence.\n//\n// @throws IllegalStateException if this is not a precedence DFA.\n// @see //isPrecedenceDfa()\n//\nDFA.prototype.setPrecedenceStartState = function(precedence, startState) {\n\tif (!(this.precedenceDfa)) {\n\t\tthrow (\"Only precedence DFAs may contain a precedence start state.\");\n\t}\n\tif (precedence < 0) {\n\t\treturn;\n\t}\n\n\t// synchronization on s0 here is ok. when the DFA is turned into a\n\t// precedence DFA, s0 will be initialized once and not updated again\n\t// s0.edges is never null for a precedence DFA\n\tthis.s0.edges[precedence] = startState;\n};\n\n//\n// Sets whether this is a precedence DFA. If the specified value differs\n// from the current DFA configuration, the following actions are taken;\n// otherwise no changes are made to the current DFA.\n//\n// <ul>\n// <li>The {@link //states} map is cleared</li>\n// <li>If {@code precedenceDfa} is {@code false}, the initial state\n// {@link //s0} is set to {@code null}; otherwise, it is initialized to a new\n// {@link DFAState} with an empty outgoing {@link DFAState//edges} array to\n// store the start states for individual precedence values.</li>\n// <li>The {@link //precedenceDfa} field is updated</li>\n// </ul>\n//\n// @param precedenceDfa {@code true} if this is a precedence DFA; otherwise,\n// {@code false}\n\nDFA.prototype.setPrecedenceDfa = function(precedenceDfa) {\n\tif (this.precedenceDfa!==precedenceDfa) {\n\t\tthis._states = new DFAStatesSet();\n\t\tif (precedenceDfa) {\n\t\t\tvar precedenceState = new DFAState(null, new ATNConfigSet());\n\t\t\tprecedenceState.edges = [];\n\t\t\tprecedenceState.isAcceptState = false;\n\t\t\tprecedenceState.requiresFullContext = false;\n\t\t\tthis.s0 = precedenceState;\n\t\t} else {\n\t\t\tthis.s0 = null;\n\t\t}\n\t\tthis.precedenceDfa = precedenceDfa;\n\t}\n};\n\nObject.defineProperty(DFA.prototype, \"states\", {\n\tget : function() {\n\t\treturn this._states;\n\t}\n});\n\n// Return a list of all states in this DFA, ordered by state number.\nDFA.prototype.sortedStates = function() {\n\tvar list = this._states.values();\n\treturn list.sort(function(a, b) {\n\t\treturn a.stateNumber - b.stateNumber;\n\t});\n};\n\nDFA.prototype.toString = function(literalNames, symbolicNames) {\n\tliteralNames = literalNames || null;\n\tsymbolicNames = symbolicNames || null;\n\tif (this.s0 === null) {\n\t\treturn \"\";\n\t}\n\tvar serializer = new DFASerializer(this, literalNames, symbolicNames);\n\treturn serializer.toString();\n};\n\nDFA.prototype.toLexerString = function() {\n\tif (this.s0 === null) {\n\t\treturn \"\";\n\t}\n\tvar serializer = new LexerDFASerializer(this);\n\treturn serializer.toString();\n};\n\nexports.DFA = DFA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/dfa/DFA.js\n// module id = VIKC\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//  An ATN transition between any two ATN states.  Subclasses define\n//  atom, set, epsilon, action, predicate, rule transitions.\n//\n//  <p>This is a one way link.  It emanates from a state (usually via a list of\n//  transitions) and has a target state.</p>\n//\n//  <p>Since we never have to change the ATN transitions once we construct it,\n//  we can fix these transitions as specific classes. The DFA transitions\n//  on the other hand need to update the labels as it adds transitions to\n//  the states. We'll use the term Edge for the DFA to distinguish them from\n//  ATN transitions.</p>\n\nvar Token = require('./../Token').Token;\nvar Interval = require('./../IntervalSet').Interval;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\nvar Predicate = require('./SemanticContext').Predicate;\nvar PrecedencePredicate = require('./SemanticContext').PrecedencePredicate;\n\nfunction Transition (target) {\n    // The target of this transition.\n    if (target===undefined || target===null) {\n        throw \"target cannot be null.\";\n    }\n    this.target = target;\n    // Are we epsilon, action, sempred?\n    this.isEpsilon = false;\n    this.label = null;\n    return this;\n}\n    // constants for serialization\nTransition.EPSILON = 1;\nTransition.RANGE = 2;\nTransition.RULE = 3;\nTransition.PREDICATE = 4; // e.g., {isType(input.LT(1))}?\nTransition.ATOM = 5;\nTransition.ACTION = 6;\nTransition.SET = 7; // ~(A|B) or ~atom, wildcard, which convert to next 2\nTransition.NOT_SET = 8;\nTransition.WILDCARD = 9;\nTransition.PRECEDENCE = 10;\n\nTransition.serializationNames = [\n            \"INVALID\",\n            \"EPSILON\",\n            \"RANGE\",\n            \"RULE\",\n            \"PREDICATE\",\n            \"ATOM\",\n            \"ACTION\",\n            \"SET\",\n            \"NOT_SET\",\n            \"WILDCARD\",\n            \"PRECEDENCE\"\n        ];\n\nTransition.serializationTypes = {\n        EpsilonTransition: Transition.EPSILON,\n        RangeTransition: Transition.RANGE,\n        RuleTransition: Transition.RULE,\n        PredicateTransition: Transition.PREDICATE,\n        AtomTransition: Transition.ATOM,\n        ActionTransition: Transition.ACTION,\n        SetTransition: Transition.SET,\n        NotSetTransition: Transition.NOT_SET,\n        WildcardTransition: Transition.WILDCARD,\n        PrecedencePredicateTransition: Transition.PRECEDENCE\n    };\n\n\n// TODO: make all transitions sets? no, should remove set edges\nfunction AtomTransition(target, label) {\n\tTransition.call(this, target);\n\tthis.label_ = label; // The token type or character value; or, signifies special label.\n    this.label = this.makeLabel();\n    this.serializationType = Transition.ATOM;\n    return this;\n}\n\nAtomTransition.prototype = Object.create(Transition.prototype);\nAtomTransition.prototype.constructor = AtomTransition;\n\nAtomTransition.prototype.makeLabel = function() {\n\tvar s = new IntervalSet();\n    s.addOne(this.label_);\n    return s;\n};\n\nAtomTransition.prototype.matches = function( symbol, minVocabSymbol,  maxVocabSymbol) {\n    return this.label_ === symbol;\n};\n\nAtomTransition.prototype.toString = function() {\n\treturn this.label_;\n};\n\nfunction RuleTransition(ruleStart, ruleIndex, precedence, followState) {\n\tTransition.call(this, ruleStart);\n    this.ruleIndex = ruleIndex; // ptr to the rule definition object for this rule ref\n    this.precedence = precedence;\n    this.followState = followState; // what node to begin computations following ref to rule\n    this.serializationType = Transition.RULE;\n    this.isEpsilon = true;\n    return this;\n}\n\nRuleTransition.prototype = Object.create(Transition.prototype);\nRuleTransition.prototype.constructor = RuleTransition;\n\nRuleTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\n\nfunction EpsilonTransition(target, outermostPrecedenceReturn) {\n\tTransition.call(this, target);\n    this.serializationType = Transition.EPSILON;\n    this.isEpsilon = true;\n    this.outermostPrecedenceReturn = outermostPrecedenceReturn;\n    return this;\n}\n\nEpsilonTransition.prototype = Object.create(Transition.prototype);\nEpsilonTransition.prototype.constructor = EpsilonTransition;\n\nEpsilonTransition.prototype.matches = function( symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nEpsilonTransition.prototype.toString = function() {\n\treturn \"epsilon\";\n};\n\nfunction RangeTransition(target, start, stop) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.RANGE;\n    this.start = start;\n    this.stop = stop;\n    this.label = this.makeLabel();\n    return this;\n}\n\nRangeTransition.prototype = Object.create(Transition.prototype);\nRangeTransition.prototype.constructor = RangeTransition;\n\nRangeTransition.prototype.makeLabel = function() {\n    var s = new IntervalSet();\n    s.addRange(this.start, this.stop);\n    return s;\n};\n\nRangeTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= this.start && symbol <= this.stop;\n};\n\nRangeTransition.prototype.toString = function() {\n\treturn \"'\" + String.fromCharCode(this.start) + \"'..'\" + String.fromCharCode(this.stop) + \"'\";\n};\n\nfunction AbstractPredicateTransition(target) {\n\tTransition.call(this, target);\n\treturn this;\n}\n\nAbstractPredicateTransition.prototype = Object.create(Transition.prototype);\nAbstractPredicateTransition.prototype.constructor = AbstractPredicateTransition;\n\nfunction PredicateTransition(target, ruleIndex, predIndex, isCtxDependent) {\n\tAbstractPredicateTransition.call(this, target);\n    this.serializationType = Transition.PREDICATE;\n    this.ruleIndex = ruleIndex;\n    this.predIndex = predIndex;\n    this.isCtxDependent = isCtxDependent; // e.g., $i ref in pred\n    this.isEpsilon = true;\n    return this;\n}\n\nPredicateTransition.prototype = Object.create(AbstractPredicateTransition.prototype);\nPredicateTransition.prototype.constructor = PredicateTransition;\n\nPredicateTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nPredicateTransition.prototype.getPredicate = function() {\n\treturn new Predicate(this.ruleIndex, this.predIndex, this.isCtxDependent);\n};\n\nPredicateTransition.prototype.toString = function() {\n\treturn \"pred_\" + this.ruleIndex + \":\" + this.predIndex;\n};\n\nfunction ActionTransition(target, ruleIndex, actionIndex, isCtxDependent) {\n\tTransition.call(this, target);\n    this.serializationType = Transition.ACTION;\n    this.ruleIndex = ruleIndex;\n    this.actionIndex = actionIndex===undefined ? -1 : actionIndex;\n    this.isCtxDependent = isCtxDependent===undefined ? false : isCtxDependent; // e.g., $i ref in pred\n    this.isEpsilon = true;\n    return this;\n}\n\nActionTransition.prototype = Object.create(Transition.prototype);\nActionTransition.prototype.constructor = ActionTransition;\n\n\nActionTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nActionTransition.prototype.toString = function() {\n\treturn \"action_\" + this.ruleIndex + \":\" + this.actionIndex;\n};\n\n\n// A transition containing a set of values.\nfunction SetTransition(target, set) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.SET;\n    if (set !==undefined && set !==null) {\n        this.label = set;\n    } else {\n        this.label = new IntervalSet();\n        this.label.addOne(Token.INVALID_TYPE);\n    }\n    return this;\n}\n\nSetTransition.prototype = Object.create(Transition.prototype);\nSetTransition.prototype.constructor = SetTransition;\n\nSetTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn this.label.contains(symbol);\n};\n\n\nSetTransition.prototype.toString = function() {\n\treturn this.label.toString();\n};\n\nfunction NotSetTransition(target, set) {\n\tSetTransition.call(this, target, set);\n\tthis.serializationType = Transition.NOT_SET;\n\treturn this;\n}\n\nNotSetTransition.prototype = Object.create(SetTransition.prototype);\nNotSetTransition.prototype.constructor = NotSetTransition;\n\nNotSetTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= minVocabSymbol && symbol <= maxVocabSymbol &&\n\t\t\t!SetTransition.prototype.matches.call(this, symbol, minVocabSymbol, maxVocabSymbol);\n};\n\nNotSetTransition.prototype.toString = function() {\n\treturn '~' + SetTransition.prototype.toString.call(this);\n};\n\nfunction WildcardTransition(target) {\n\tTransition.call(this, target);\n\tthis.serializationType = Transition.WILDCARD;\n\treturn this;\n}\n\nWildcardTransition.prototype = Object.create(Transition.prototype);\nWildcardTransition.prototype.constructor = WildcardTransition;\n\n\nWildcardTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn symbol >= minVocabSymbol && symbol <= maxVocabSymbol;\n};\n\nWildcardTransition.prototype.toString = function() {\n\treturn \".\";\n};\n\nfunction PrecedencePredicateTransition(target, precedence) {\n\tAbstractPredicateTransition.call(this, target);\n    this.serializationType = Transition.PRECEDENCE;\n    this.precedence = precedence;\n    this.isEpsilon = true;\n    return this;\n}\n\nPrecedencePredicateTransition.prototype = Object.create(AbstractPredicateTransition.prototype);\nPrecedencePredicateTransition.prototype.constructor = PrecedencePredicateTransition;\n\nPrecedencePredicateTransition.prototype.matches = function(symbol, minVocabSymbol,  maxVocabSymbol) {\n\treturn false;\n};\n\nPrecedencePredicateTransition.prototype.getPredicate = function() {\n\treturn new PrecedencePredicate(this.precedence);\n};\n\nPrecedencePredicateTransition.prototype.toString = function() {\n\treturn this.precedence + \" >= _p\";\n};\n\nexports.Transition = Transition;\nexports.AtomTransition = AtomTransition;\nexports.SetTransition = SetTransition;\nexports.NotSetTransition = NotSetTransition;\nexports.RuleTransition = RuleTransition;\nexports.ActionTransition = ActionTransition;\nexports.EpsilonTransition = EpsilonTransition;\nexports.RangeTransition = RangeTransition;\nexports.WildcardTransition = WildcardTransition;\nexports.PredicateTransition = PredicateTransition;\nexports.PrecedencePredicateTransition = PrecedencePredicateTransition;\nexports.AbstractPredicateTransition = AbstractPredicateTransition;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/Transition.js\n// module id = VS1O\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Token = require('./Token').Token;\nvar ParseTreeListener = require('./tree/Tree').ParseTreeListener;\nvar Recognizer = require('./Recognizer').Recognizer;\nvar DefaultErrorStrategy = require('./error/ErrorStrategy').DefaultErrorStrategy;\nvar ATNDeserializer = require('./atn/ATNDeserializer').ATNDeserializer;\nvar ATNDeserializationOptions = require('./atn/ATNDeserializationOptions').ATNDeserializationOptions;\nvar TerminalNode = require('./tree/Tree').TerminalNode;\nvar ErrorNode = require('./tree/Tree').ErrorNode;\n\nfunction TraceListener(parser) {\n\tParseTreeListener.call(this);\n    this.parser = parser;\n\treturn this;\n}\n\nTraceListener.prototype = Object.create(ParseTreeListener.prototype);\nTraceListener.prototype.constructor = TraceListener;\n\nTraceListener.prototype.enterEveryRule = function(ctx) {\n\tconsole.log(\"enter   \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n};\n\nTraceListener.prototype.visitTerminal = function( node) {\n\tconsole.log(\"consume \" + node.symbol + \" rule \" + this.parser.ruleNames[this.parser._ctx.ruleIndex]);\n};\n\nTraceListener.prototype.exitEveryRule = function(ctx) {\n\tconsole.log(\"exit    \" + this.parser.ruleNames[ctx.ruleIndex] + \", LT(1)=\" + this.parser._input.LT(1).text);\n};\n\n// this is all the parsing support code essentially; most of it is error\n// recovery stuff.//\nfunction Parser(input) {\n\tRecognizer.call(this);\n\t// The input stream.\n\tthis._input = null;\n\t// The error handling strategy for the parser. The default value is a new\n\t// instance of {@link DefaultErrorStrategy}.\n\tthis._errHandler = new DefaultErrorStrategy();\n\tthis._precedenceStack = [];\n\tthis._precedenceStack.push(0);\n\t// The {@link ParserRuleContext} object for the currently executing rule.\n\t// this is always non-null during the parsing process.\n\tthis._ctx = null;\n\t// Specifies whether or not the parser should construct a parse tree during\n\t// the parsing process. The default value is {@code true}.\n\tthis.buildParseTrees = true;\n\t// When {@link //setTrace}{@code (true)} is called, a reference to the\n\t// {@link TraceListener} is stored here so it can be easily removed in a\n\t// later call to {@link //setTrace}{@code (false)}. The listener itself is\n\t// implemented as a parser listener so this field is not directly used by\n\t// other parser methods.\n\tthis._tracer = null;\n\t// The list of {@link ParseTreeListener} listeners registered to receive\n\t// events during the parse.\n\tthis._parseListeners = null;\n\t// The number of syntax errors reported during parsing. this value is\n\t// incremented each time {@link //notifyErrorListeners} is called.\n\tthis._syntaxErrors = 0;\n\tthis.setInputStream(input);\n\treturn this;\n}\n\nParser.prototype = Object.create(Recognizer.prototype);\nParser.prototype.contructor = Parser;\n\n// this field maps from the serialized ATN string to the deserialized {@link\n// ATN} with\n// bypass alternatives.\n//\n// @see ATNDeserializationOptions//isGenerateRuleBypassTransitions()\n//\nParser.bypassAltsAtnCache = {};\n\n// reset the parser's state//\nParser.prototype.reset = function() {\n\tif (this._input !== null) {\n\t\tthis._input.seek(0);\n\t}\n\tthis._errHandler.reset(this);\n\tthis._ctx = null;\n\tthis._syntaxErrors = 0;\n\tthis.setTrace(false);\n\tthis._precedenceStack = [];\n\tthis._precedenceStack.push(0);\n\tif (this._interp !== null) {\n\t\tthis._interp.reset();\n\t}\n};\n\n// Match current input symbol against {@code ttype}. If the symbol type\n// matches, {@link ANTLRErrorStrategy//reportMatch} and {@link //consume} are\n// called to complete the match process.\n//\n// <p>If the symbol type does not match,\n// {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n// strategy to attempt recovery. If {@link //getBuildParseTree} is\n// {@code true} and the token index of the symbol returned by\n// {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n// the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n//\n// @param ttype the token type to match\n// @return the matched symbol\n// @throws RecognitionException if the current input symbol did not match\n// {@code ttype} and the error strategy could not recover from the\n// mismatched symbol\n\nParser.prototype.match = function(ttype) {\n\tvar t = this.getCurrentToken();\n\tif (t.type === ttype) {\n\t\tthis._errHandler.reportMatch(this);\n\t\tthis.consume();\n\t} else {\n\t\tt = this._errHandler.recoverInline(this);\n\t\tif (this.buildParseTrees && t.tokenIndex === -1) {\n\t\t\t// we must have conjured up a new token during single token\n\t\t\t// insertion\n\t\t\t// if it's not the current symbol\n\t\t\tthis._ctx.addErrorNode(t);\n\t\t}\n\t}\n\treturn t;\n};\n// Match current input symbol as a wildcard. If the symbol type matches\n// (i.e. has a value greater than 0), {@link ANTLRErrorStrategy//reportMatch}\n// and {@link //consume} are called to complete the match process.\n//\n// <p>If the symbol type does not match,\n// {@link ANTLRErrorStrategy//recoverInline} is called on the current error\n// strategy to attempt recovery. If {@link //getBuildParseTree} is\n// {@code true} and the token index of the symbol returned by\n// {@link ANTLRErrorStrategy//recoverInline} is -1, the symbol is added to\n// the parse tree by calling {@link ParserRuleContext//addErrorNode}.</p>\n//\n// @return the matched symbol\n// @throws RecognitionException if the current input symbol did not match\n// a wildcard and the error strategy could not recover from the mismatched\n// symbol\n\nParser.prototype.matchWildcard = function() {\n\tvar t = this.getCurrentToken();\n\tif (t.type > 0) {\n\t\tthis._errHandler.reportMatch(this);\n\t\tthis.consume();\n\t} else {\n\t\tt = this._errHandler.recoverInline(this);\n\t\tif (this._buildParseTrees && t.tokenIndex === -1) {\n\t\t\t// we must have conjured up a new token during single token\n\t\t\t// insertion\n\t\t\t// if it's not the current symbol\n\t\t\tthis._ctx.addErrorNode(t);\n\t\t}\n\t}\n\treturn t;\n};\n\nParser.prototype.getParseListeners = function() {\n\treturn this._parseListeners || [];\n};\n\n// Registers {@code listener} to receive events during the parsing process.\n//\n// <p>To support output-preserving grammar transformations (including but not\n// limited to left-recursion removal, automated left-factoring, and\n// optimized code generation), calls to listener methods during the parse\n// may differ substantially from calls made by\n// {@link ParseTreeWalker//DEFAULT} used after the parse is complete. In\n// particular, rule entry and exit events may occur in a different order\n// during the parse than after the parser. In addition, calls to certain\n// rule entry methods may be omitted.</p>\n//\n// <p>With the following specific exceptions, calls to listener events are\n// <em>deterministic</em>, i.e. for identical input the calls to listener\n// methods will be the same.</p>\n//\n// <ul>\n// <li>Alterations to the grammar used to generate code may change the\n// behavior of the listener calls.</li>\n// <li>Alterations to the command line options passed to ANTLR 4 when\n// generating the parser may change the behavior of the listener calls.</li>\n// <li>Changing the version of the ANTLR Tool used to generate the parser\n// may change the behavior of the listener calls.</li>\n// </ul>\n//\n// @param listener the listener to add\n//\n// @throws NullPointerException if {@code} listener is {@code null}\n//\nParser.prototype.addParseListener = function(listener) {\n\tif (listener === null) {\n\t\tthrow \"listener\";\n\t}\n\tif (this._parseListeners === null) {\n\t\tthis._parseListeners = [];\n\t}\n\tthis._parseListeners.push(listener);\n};\n\n//\n// Remove {@code listener} from the list of parse listeners.\n//\n// <p>If {@code listener} is {@code null} or has not been added as a parse\n// listener, this method does nothing.</p>\n// @param listener the listener to remove\n//\nParser.prototype.removeParseListener = function(listener) {\n\tif (this._parseListeners !== null) {\n\t\tvar idx = this._parseListeners.indexOf(listener);\n\t\tif (idx >= 0) {\n\t\t\tthis._parseListeners.splice(idx, 1);\n\t\t}\n\t\tif (this._parseListeners.length === 0) {\n\t\t\tthis._parseListeners = null;\n\t\t}\n\t}\n};\n\n// Remove all parse listeners.\nParser.prototype.removeParseListeners = function() {\n\tthis._parseListeners = null;\n};\n\n// Notify any parse listeners of an enter rule event.\nParser.prototype.triggerEnterRuleEvent = function() {\n\tif (this._parseListeners !== null) {\n        var ctx = this._ctx;\n\t\tthis._parseListeners.map(function(listener) {\n\t\t\tlistener.enterEveryRule(ctx);\n\t\t\tctx.enterRule(listener);\n\t\t});\n\t}\n};\n\n//\n// Notify any parse listeners of an exit rule event.\n//\n// @see //addParseListener\n//\nParser.prototype.triggerExitRuleEvent = function() {\n\tif (this._parseListeners !== null) {\n\t\t// reverse order walk of listeners\n        var ctx = this._ctx;\n\t\tthis._parseListeners.slice(0).reverse().map(function(listener) {\n\t\t\tctx.exitRule(listener);\n\t\t\tlistener.exitEveryRule(ctx);\n\t\t});\n\t}\n};\n\nParser.prototype.getTokenFactory = function() {\n\treturn this._input.tokenSource._factory;\n};\n\n// Tell our token source and error strategy about a new way to create tokens.//\nParser.prototype.setTokenFactory = function(factory) {\n\tthis._input.tokenSource._factory = factory;\n};\n\n// The ATN with bypass alternatives is expensive to create so we create it\n// lazily.\n//\n// @throws UnsupportedOperationException if the current parser does not\n// implement the {@link //getSerializedATN()} method.\n//\nParser.prototype.getATNWithBypassAlts = function() {\n\tvar serializedAtn = this.getSerializedATN();\n\tif (serializedAtn === null) {\n\t\tthrow \"The current parser does not support an ATN with bypass alternatives.\";\n\t}\n\tvar result = this.bypassAltsAtnCache[serializedAtn];\n\tif (result === null) {\n\t\tvar deserializationOptions = new ATNDeserializationOptions();\n\t\tdeserializationOptions.generateRuleBypassTransitions = true;\n\t\tresult = new ATNDeserializer(deserializationOptions)\n\t\t\t\t.deserialize(serializedAtn);\n\t\tthis.bypassAltsAtnCache[serializedAtn] = result;\n\t}\n\treturn result;\n};\n\n// The preferred method of getting a tree pattern. For example, here's a\n// sample use:\n//\n// <pre>\n// ParseTree t = parser.expr();\n// ParseTreePattern p = parser.compileParseTreePattern(\"&lt;ID&gt;+0\",\n// MyParser.RULE_expr);\n// ParseTreeMatch m = p.match(t);\n// String id = m.get(\"ID\");\n// </pre>\n\nvar Lexer = require('./Lexer').Lexer;\n\nParser.prototype.compileParseTreePattern = function(pattern, patternRuleIndex, lexer) {\n\tlexer = lexer || null;\n\tif (lexer === null) {\n\t\tif (this.getTokenStream() !== null) {\n\t\t\tvar tokenSource = this.getTokenStream().tokenSource;\n\t\t\tif (tokenSource instanceof Lexer) {\n\t\t\t\tlexer = tokenSource;\n\t\t\t}\n\t\t}\n\t}\n\tif (lexer === null) {\n\t\tthrow \"Parser can't discover a lexer to use\";\n\t}\n\tvar m = new ParseTreePatternMatcher(lexer, this);\n\treturn m.compile(pattern, patternRuleIndex);\n};\n\nParser.prototype.getInputStream = function() {\n\treturn this.getTokenStream();\n};\n\nParser.prototype.setInputStream = function(input) {\n\tthis.setTokenStream(input);\n};\n\nParser.prototype.getTokenStream = function() {\n\treturn this._input;\n};\n\n// Set the token stream and reset the parser.//\nParser.prototype.setTokenStream = function(input) {\n\tthis._input = null;\n\tthis.reset();\n\tthis._input = input;\n};\n\n// Match needs to return the current input symbol, which gets put\n// into the label for the associated token ref; e.g., x=ID.\n//\nParser.prototype.getCurrentToken = function() {\n\treturn this._input.LT(1);\n};\n\nParser.prototype.notifyErrorListeners = function(msg, offendingToken, err) {\n\toffendingToken = offendingToken || null;\n\terr = err || null;\n\tif (offendingToken === null) {\n\t\toffendingToken = this.getCurrentToken();\n\t}\n\tthis._syntaxErrors += 1;\n\tvar line = offendingToken.line;\n\tvar column = offendingToken.column;\n\tvar listener = this.getErrorListenerDispatch();\n\tlistener.syntaxError(this, offendingToken, line, column, msg, err);\n};\n\n//\n// Consume and return the {@linkplain //getCurrentToken current symbol}.\n//\n// <p>E.g., given the following input with {@code A} being the current\n// lookahead symbol, this function moves the cursor to {@code B} and returns\n// {@code A}.</p>\n//\n// <pre>\n// A B\n// ^\n// </pre>\n//\n// If the parser is not in error recovery mode, the consumed symbol is added\n// to the parse tree using {@link ParserRuleContext//addChild(Token)}, and\n// {@link ParseTreeListener//visitTerminal} is called on any parse listeners.\n// If the parser <em>is</em> in error recovery mode, the consumed symbol is\n// added to the parse tree using\n// {@link ParserRuleContext//addErrorNode(Token)}, and\n// {@link ParseTreeListener//visitErrorNode} is called on any parse\n// listeners.\n//\nParser.prototype.consume = function() {\n\tvar o = this.getCurrentToken();\n\tif (o.type !== Token.EOF) {\n\t\tthis.getInputStream().consume();\n\t}\n\tvar hasListener = this._parseListeners !== null && this._parseListeners.length > 0;\n\tif (this.buildParseTrees || hasListener) {\n\t\tvar node;\n\t\tif (this._errHandler.inErrorRecoveryMode(this)) {\n\t\t\tnode = this._ctx.addErrorNode(o);\n\t\t} else {\n\t\t\tnode = this._ctx.addTokenNode(o);\n\t\t}\n        node.invokingState = this.state;\n\t\tif (hasListener) {\n\t\t\tthis._parseListeners.map(function(listener) {\n\t\t\t\tif (node instanceof ErrorNode || (node.isErrorNode !== undefined && node.isErrorNode())) {\n\t\t\t\t\tlistener.visitErrorNode(node);\n\t\t\t\t} else if (node instanceof TerminalNode) {\n\t\t\t\t\tlistener.visitTerminal(node);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn o;\n};\n\nParser.prototype.addContextToParseTree = function() {\n\t// add current context to parent if we have a parent\n\tif (this._ctx.parentCtx !== null) {\n\t\tthis._ctx.parentCtx.addChild(this._ctx);\n\t}\n};\n\n// Always called by generated parsers upon entry to a rule. Access field\n// {@link //_ctx} get the current context.\n\nParser.prototype.enterRule = function(localctx, state, ruleIndex) {\n\tthis.state = state;\n\tthis._ctx = localctx;\n\tthis._ctx.start = this._input.LT(1);\n\tif (this.buildParseTrees) {\n\t\tthis.addContextToParseTree();\n\t}\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent();\n\t}\n};\n\nParser.prototype.exitRule = function() {\n\tthis._ctx.stop = this._input.LT(-1);\n\t// trigger event on _ctx, before it reverts to parent\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerExitRuleEvent();\n\t}\n\tthis.state = this._ctx.invokingState;\n\tthis._ctx = this._ctx.parentCtx;\n};\n\nParser.prototype.enterOuterAlt = function(localctx, altNum) {\n   \tlocalctx.setAltNumber(altNum);\n\t// if we have new localctx, make sure we replace existing ctx\n\t// that is previous child of parse tree\n\tif (this.buildParseTrees && this._ctx !== localctx) {\n\t\tif (this._ctx.parentCtx !== null) {\n\t\t\tthis._ctx.parentCtx.removeLastChild();\n\t\t\tthis._ctx.parentCtx.addChild(localctx);\n\t\t}\n\t}\n\tthis._ctx = localctx;\n};\n\n// Get the precedence level for the top-most precedence rule.\n//\n// @return The precedence level for the top-most precedence rule, or -1 if\n// the parser context is not nested within a precedence rule.\n\nParser.prototype.getPrecedence = function() {\n\tif (this._precedenceStack.length === 0) {\n\t\treturn -1;\n\t} else {\n\t\treturn this._precedenceStack[this._precedenceStack.length-1];\n\t}\n};\n\nParser.prototype.enterRecursionRule = function(localctx, state, ruleIndex,\n\t\tprecedence) {\n\tthis.state = state;\n\tthis._precedenceStack.push(precedence);\n\tthis._ctx = localctx;\n\tthis._ctx.start = this._input.LT(1);\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for\n\t\t\t\t\t\t\t\t\t\t// left-recursive rules\n\t}\n};\n\n//\n// Like {@link //enterRule} but for recursive rules.\n\nParser.prototype.pushNewRecursionContext = function(localctx, state, ruleIndex) {\n\tvar previous = this._ctx;\n\tprevious.parentCtx = localctx;\n\tprevious.invokingState = state;\n\tprevious.stop = this._input.LT(-1);\n\n\tthis._ctx = localctx;\n\tthis._ctx.start = previous.start;\n\tif (this.buildParseTrees) {\n\t\tthis._ctx.addChild(previous);\n\t}\n\tif (this._parseListeners !== null) {\n\t\tthis.triggerEnterRuleEvent(); // simulates rule entry for\n\t\t\t\t\t\t\t\t\t\t// left-recursive rules\n\t}\n};\n\nParser.prototype.unrollRecursionContexts = function(parentCtx) {\n\tthis._precedenceStack.pop();\n\tthis._ctx.stop = this._input.LT(-1);\n\tvar retCtx = this._ctx; // save current ctx (return value)\n\t// unroll so _ctx is as it was before call to recursive method\n\tif (this._parseListeners !== null) {\n\t\twhile (this._ctx !== parentCtx) {\n\t\t\tthis.triggerExitRuleEvent();\n\t\t\tthis._ctx = this._ctx.parentCtx;\n\t\t}\n\t} else {\n\t\tthis._ctx = parentCtx;\n\t}\n\t// hook into tree\n\tretCtx.parentCtx = parentCtx;\n\tif (this.buildParseTrees && parentCtx !== null) {\n\t\t// add return ctx into invoking rule's tree\n\t\tparentCtx.addChild(retCtx);\n\t}\n};\n\nParser.prototype.getInvokingContext = function(ruleIndex) {\n\tvar ctx = this._ctx;\n\twhile (ctx !== null) {\n\t\tif (ctx.ruleIndex === ruleIndex) {\n\t\t\treturn ctx;\n\t\t}\n\t\tctx = ctx.parentCtx;\n\t}\n\treturn null;\n};\n\nParser.prototype.precpred = function(localctx, precedence) {\n\treturn precedence >= this._precedenceStack[this._precedenceStack.length-1];\n};\n\nParser.prototype.inContext = function(context) {\n\t// TODO: useful in parser?\n\treturn false;\n};\n\n//\n// Checks whether or not {@code symbol} can follow the current state in the\n// ATN. The behavior of this method is equivalent to the following, but is\n// implemented such that the complete context-sensitive follow set does not\n// need to be explicitly constructed.\n//\n// <pre>\n// return getExpectedTokens().contains(symbol);\n// </pre>\n//\n// @param symbol the symbol type to check\n// @return {@code true} if {@code symbol} can follow the current state in\n// the ATN, otherwise {@code false}.\n\nParser.prototype.isExpectedToken = function(symbol) {\n\tvar atn = this._interp.atn;\n\tvar ctx = this._ctx;\n\tvar s = atn.states[this.state];\n\tvar following = atn.nextTokens(s);\n\tif (following.contains(symbol)) {\n\t\treturn true;\n\t}\n\tif (!following.contains(Token.EPSILON)) {\n\t\treturn false;\n\t}\n\twhile (ctx !== null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {\n\t\tvar invokingState = atn.states[ctx.invokingState];\n\t\tvar rt = invokingState.transitions[0];\n\t\tfollowing = atn.nextTokens(rt.followState);\n\t\tif (following.contains(symbol)) {\n\t\t\treturn true;\n\t\t}\n\t\tctx = ctx.parentCtx;\n\t}\n\tif (following.contains(Token.EPSILON) && symbol === Token.EOF) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n// Computes the set of input symbols which could follow the current parser\n// state and context, as given by {@link //getState} and {@link //getContext},\n// respectively.\n//\n// @see ATN//getExpectedTokens(int, RuleContext)\n//\nParser.prototype.getExpectedTokens = function() {\n\treturn this._interp.atn.getExpectedTokens(this.state, this._ctx);\n};\n\nParser.prototype.getExpectedTokensWithinCurrentRule = function() {\n\tvar atn = this._interp.atn;\n\tvar s = atn.states[this.state];\n\treturn atn.nextTokens(s);\n};\n\n// Get a rule's index (i.e., {@code RULE_ruleName} field) or -1 if not found.//\nParser.prototype.getRuleIndex = function(ruleName) {\n\tvar ruleIndex = this.getRuleIndexMap()[ruleName];\n\tif (ruleIndex !== null) {\n\t\treturn ruleIndex;\n\t} else {\n\t\treturn -1;\n\t}\n};\n\n// Return List&lt;String&gt; of the rule names in your parser instance\n// leading up to a call to the current rule. You could override if\n// you want more details such as the file/line info of where\n// in the ATN a rule is invoked.\n//\n// this is very useful for error messages.\n//\nParser.prototype.getRuleInvocationStack = function(p) {\n\tp = p || null;\n\tif (p === null) {\n\t\tp = this._ctx;\n\t}\n\tvar stack = [];\n\twhile (p !== null) {\n\t\t// compute what follows who invoked us\n\t\tvar ruleIndex = p.ruleIndex;\n\t\tif (ruleIndex < 0) {\n\t\t\tstack.push(\"n/a\");\n\t\t} else {\n\t\t\tstack.push(this.ruleNames[ruleIndex]);\n\t\t}\n\t\tp = p.parentCtx;\n\t}\n\treturn stack;\n};\n\n// For debugging and other purposes.//\nParser.prototype.getDFAStrings = function() {\n\treturn this._interp.decisionToDFA.toString();\n};\n// For debugging and other purposes.//\nParser.prototype.dumpDFA = function() {\n\tvar seenOne = false;\n\tfor (var i = 0; i < this._interp.decisionToDFA.length; i++) {\n\t\tvar dfa = this._interp.decisionToDFA[i];\n\t\tif (dfa.states.length > 0) {\n\t\t\tif (seenOne) {\n\t\t\t\tconsole.log();\n\t\t\t}\n\t\t\tthis.printer.println(\"Decision \" + dfa.decision + \":\");\n\t\t\tthis.printer.print(dfa.toString(this.literalNames, this.symbolicNames));\n\t\t\tseenOne = true;\n\t\t}\n\t}\n};\n\n/*\n\"\t\t\tprinter = function() {\\r\\n\" +\n\"\t\t\t\tthis.println = function(s) { document.getElementById('output') += s + '\\\\n'; }\\r\\n\" +\n\"\t\t\t\tthis.print = function(s) { document.getElementById('output') += s; }\\r\\n\" +\n\"\t\t\t};\\r\\n\" +\n*/\n\nParser.prototype.getSourceName = function() {\n\treturn this._input.sourceName;\n};\n\n// During a parse is sometimes useful to listen in on the rule entry and exit\n// events as well as token matches. this is for quick and dirty debugging.\n//\nParser.prototype.setTrace = function(trace) {\n\tif (!trace) {\n\t\tthis.removeParseListener(this._tracer);\n\t\tthis._tracer = null;\n\t} else {\n\t\tif (this._tracer !== null) {\n\t\t\tthis.removeParseListener(this._tracer);\n\t\t}\n\t\tthis._tracer = new TraceListener(this);\n\t\tthis.addParseListener(this._tracer);\n\t}\n};\n\nexports.Parser = Parser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/Parser.js\n// module id = VgzD\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// The basic notion of a tree has a parent, a payload, and a list of children.\n//  It is the most abstract interface for all the trees used by ANTLR.\n///\n\nvar Token = require('./../Token').Token;\nvar Interval = require('./../IntervalSet').Interval;\nvar INVALID_INTERVAL = new Interval(-1, -2);\nvar Utils = require('../Utils.js');\n\n\nfunction Tree() {\n\treturn this;\n}\n\nfunction SyntaxTree() {\n\tTree.call(this);\n\treturn this;\n}\n\nSyntaxTree.prototype = Object.create(Tree.prototype);\nSyntaxTree.prototype.constructor = SyntaxTree;\n\nfunction ParseTree() {\n\tSyntaxTree.call(this);\n\treturn this;\n}\n\nParseTree.prototype = Object.create(SyntaxTree.prototype);\nParseTree.prototype.constructor = ParseTree;\n\nfunction RuleNode() {\n\tParseTree.call(this);\n\treturn this;\n}\n\nRuleNode.prototype = Object.create(ParseTree.prototype);\nRuleNode.prototype.constructor = RuleNode;\n\nfunction TerminalNode() {\n\tParseTree.call(this);\n\treturn this;\n}\n\nTerminalNode.prototype = Object.create(ParseTree.prototype);\nTerminalNode.prototype.constructor = TerminalNode;\n\nfunction ErrorNode() {\n\tTerminalNode.call(this);\n\treturn this;\n}\n\nErrorNode.prototype = Object.create(TerminalNode.prototype);\nErrorNode.prototype.constructor = ErrorNode;\n\nfunction ParseTreeVisitor() {\n\treturn this;\n}\n\nParseTreeVisitor.prototype.visit = function(ctx) {\n \tif (Array.isArray(ctx)) {\n\t\treturn ctx.map(function(child) {\n            return child.accept(this);\n        }, this);\n\t} else {\n\t\treturn ctx.accept(this);\n\t}\n};\n\nParseTreeVisitor.prototype.visitChildren = function(ctx) {\n  return this.visit(ctx.children);\n}\n\nParseTreeVisitor.prototype.visitTerminal = function(node) {\n};\n\nParseTreeVisitor.prototype.visitErrorNode = function(node) {\n};\n\n\nfunction ParseTreeListener() {\n\treturn this;\n}\n\nParseTreeListener.prototype.visitTerminal = function(node) {\n};\n\nParseTreeListener.prototype.visitErrorNode = function(node) {\n};\n\nParseTreeListener.prototype.enterEveryRule = function(node) {\n};\n\nParseTreeListener.prototype.exitEveryRule = function(node) {\n};\n\nfunction TerminalNodeImpl(symbol) {\n\tTerminalNode.call(this);\n\tthis.parentCtx = null;\n\tthis.symbol = symbol;\n\treturn this;\n}\n\nTerminalNodeImpl.prototype = Object.create(TerminalNode.prototype);\nTerminalNodeImpl.prototype.constructor = TerminalNodeImpl;\n\nTerminalNodeImpl.prototype.getChild = function(i) {\n\treturn null;\n};\n\nTerminalNodeImpl.prototype.getSymbol = function() {\n\treturn this.symbol;\n};\n\nTerminalNodeImpl.prototype.getParent = function() {\n\treturn this.parentCtx;\n};\n\nTerminalNodeImpl.prototype.getPayload = function() {\n\treturn this.symbol;\n};\n\nTerminalNodeImpl.prototype.getSourceInterval = function() {\n\tif (this.symbol === null) {\n\t\treturn INVALID_INTERVAL;\n\t}\n\tvar tokenIndex = this.symbol.tokenIndex;\n\treturn new Interval(tokenIndex, tokenIndex);\n};\n\nTerminalNodeImpl.prototype.getChildCount = function() {\n\treturn 0;\n};\n\nTerminalNodeImpl.prototype.accept = function(visitor) {\n\treturn visitor.visitTerminal(this);\n};\n\nTerminalNodeImpl.prototype.getText = function() {\n\treturn this.symbol.text;\n};\n\nTerminalNodeImpl.prototype.toString = function() {\n\tif (this.symbol.type === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else {\n\t\treturn this.symbol.text;\n\t}\n};\n\n// Represents a token that was consumed during resynchronization\n// rather than during a valid match operation. For example,\n// we will create this kind of a node during single token insertion\n// and deletion as well as during \"consume until error recovery set\"\n// upon no viable alternative exceptions.\n\nfunction ErrorNodeImpl(token) {\n\tTerminalNodeImpl.call(this, token);\n\treturn this;\n}\n\nErrorNodeImpl.prototype = Object.create(TerminalNodeImpl.prototype);\nErrorNodeImpl.prototype.constructor = ErrorNodeImpl;\n\nErrorNodeImpl.prototype.isErrorNode = function() {\n\treturn true;\n};\n\nErrorNodeImpl.prototype.accept = function(visitor) {\n\treturn visitor.visitErrorNode(this);\n};\n\nfunction ParseTreeWalker() {\n\treturn this;\n}\n\nParseTreeWalker.prototype.walk = function(listener, t) {\n\tvar errorNode = t instanceof ErrorNode ||\n\t\t\t(t.isErrorNode !== undefined && t.isErrorNode());\n\tif (errorNode) {\n\t\tlistener.visitErrorNode(t);\n\t} else if (t instanceof TerminalNode) {\n\t\tlistener.visitTerminal(t);\n\t} else {\n\t\tthis.enterRule(listener, t);\n\t\tfor (var i = 0; i < t.getChildCount(); i++) {\n\t\t\tvar child = t.getChild(i);\n\t\t\tthis.walk(listener, child);\n\t\t}\n\t\tthis.exitRule(listener, t);\n\t}\n};\n//\n// The discovery of a rule node, involves sending two events: the generic\n// {@link ParseTreeListener//enterEveryRule} and a\n// {@link RuleContext}-specific event. First we trigger the generic and then\n// the rule specific. We to them in reverse order upon finishing the node.\n//\nParseTreeWalker.prototype.enterRule = function(listener, r) {\n\tvar ctx = r.getRuleContext();\n\tlistener.enterEveryRule(ctx);\n\tctx.enterRule(listener);\n};\n\nParseTreeWalker.prototype.exitRule = function(listener, r) {\n\tvar ctx = r.getRuleContext();\n\tctx.exitRule(listener);\n\tlistener.exitEveryRule(ctx);\n};\n\nParseTreeWalker.DEFAULT = new ParseTreeWalker();\n\nexports.RuleNode = RuleNode;\nexports.ErrorNode = ErrorNode;\nexports.TerminalNode = TerminalNode;\nexports.ErrorNodeImpl = ErrorNodeImpl;\nexports.TerminalNodeImpl = TerminalNodeImpl;\nexports.ParseTreeListener = ParseTreeListener;\nexports.ParseTreeVisitor = ParseTreeVisitor;\nexports.ParseTreeWalker = ParseTreeWalker;\nexports.INVALID_INTERVAL = INVALID_INTERVAL;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/tree/Tree.js\n// module id = VnEu\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// When we hit an accept state in either the DFA or the ATN, we\n//  have to notify the character stream to start buffering characters\n//  via {@link IntStream//mark} and record the current state. The current sim state\n//  includes the current index into the input, the current line,\n//  and current character position in that line. Note that the Lexer is\n//  tracking the starting line and characterization of the token. These\n//  variables track the \"state\" of the simulator when it hits an accept state.\n//\n//  <p>We track these variables separately for the DFA and ATN simulation\n//  because the DFA simulation often has to fail over to the ATN\n//  simulation. If the ATN simulation fails, we need the DFA to fall\n//  back to its previously accepted state, if any. If the ATN succeeds,\n//  then the ATN does the accept and the DFA simulator that invoked it\n//  can simply return the predicted token type.</p>\n///\n\nvar Token = require('./../Token').Token;\nvar Lexer = require('./../Lexer').Lexer;\nvar ATN = require('./ATN').ATN;\nvar ATNSimulator = require('./ATNSimulator').ATNSimulator;\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar OrderedATNConfigSet = require('./ATNConfigSet').OrderedATNConfigSet;\nvar PredictionContext = require('./../PredictionContext').PredictionContext;\nvar SingletonPredictionContext = require('./../PredictionContext').SingletonPredictionContext;\nvar RuleStopState = require('./ATNState').RuleStopState;\nvar LexerATNConfig = require('./ATNConfig').LexerATNConfig;\nvar Transition = require('./Transition').Transition;\nvar LexerActionExecutor = require('./LexerActionExecutor').LexerActionExecutor;\nvar LexerNoViableAltException = require('./../error/Errors').LexerNoViableAltException;\n\nfunction resetSimState(sim) {\n\tsim.index = -1;\n\tsim.line = 0;\n\tsim.column = -1;\n\tsim.dfaState = null;\n}\n\nfunction SimState() {\n\tresetSimState(this);\n\treturn this;\n}\n\nSimState.prototype.reset = function() {\n\tresetSimState(this);\n};\n\nfunction LexerATNSimulator(recog, atn, decisionToDFA, sharedContextCache) {\n\tATNSimulator.call(this, atn, sharedContextCache);\n\tthis.decisionToDFA = decisionToDFA;\n\tthis.recog = recog;\n\t// The current token's starting index into the character stream.\n\t// Shared across DFA to ATN simulation in case the ATN fails and the\n\t// DFA did not have a previous accept state. In this case, we use the\n\t// ATN-generated exception object.\n\tthis.startIndex = -1;\n\t// line number 1..n within the input///\n\tthis.line = 1;\n\t// The index of the character relative to the beginning of the line\n\t// 0..n-1///\n\tthis.column = 0;\n\tthis.mode = Lexer.DEFAULT_MODE;\n\t// Used during DFA/ATN exec to record the most recent accept configuration\n\t// info\n\tthis.prevAccept = new SimState();\n\t// done\n\treturn this;\n}\n\nLexerATNSimulator.prototype = Object.create(ATNSimulator.prototype);\nLexerATNSimulator.prototype.constructor = LexerATNSimulator;\n\nLexerATNSimulator.debug = false;\nLexerATNSimulator.dfa_debug = false;\n\nLexerATNSimulator.MIN_DFA_EDGE = 0;\nLexerATNSimulator.MAX_DFA_EDGE = 127; // forces unicode to stay in ATN\n\nLexerATNSimulator.match_calls = 0;\n\nLexerATNSimulator.prototype.copyState = function(simulator) {\n\tthis.column = simulator.column;\n\tthis.line = simulator.line;\n\tthis.mode = simulator.mode;\n\tthis.startIndex = simulator.startIndex;\n};\n\nLexerATNSimulator.prototype.match = function(input, mode) {\n\tthis.match_calls += 1;\n\tthis.mode = mode;\n\tvar mark = input.mark();\n\ttry {\n\t\tthis.startIndex = input.index;\n\t\tthis.prevAccept.reset();\n\t\tvar dfa = this.decisionToDFA[mode];\n\t\tif (dfa.s0 === null) {\n\t\t\treturn this.matchATN(input);\n\t\t} else {\n\t\t\treturn this.execATN(input, dfa.s0);\n\t\t}\n\t} finally {\n\t\tinput.release(mark);\n\t}\n};\n\nLexerATNSimulator.prototype.reset = function() {\n\tthis.prevAccept.reset();\n\tthis.startIndex = -1;\n\tthis.line = 1;\n\tthis.column = 0;\n\tthis.mode = Lexer.DEFAULT_MODE;\n};\n\nLexerATNSimulator.prototype.matchATN = function(input) {\n\tvar startState = this.atn.modeToStartState[this.mode];\n\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"matchATN mode \" + this.mode + \" start: \" + startState);\n\t}\n\tvar old_mode = this.mode;\n\tvar s0_closure = this.computeStartState(input, startState);\n\tvar suppressEdge = s0_closure.hasSemanticContext;\n\ts0_closure.hasSemanticContext = false;\n\n\tvar next = this.addDFAState(s0_closure);\n\tif (!suppressEdge) {\n\t\tthis.decisionToDFA[this.mode].s0 = next;\n\t}\n\n\tvar predict = this.execATN(input, next);\n\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"DFA after matchATN: \" + this.decisionToDFA[old_mode].toLexerString());\n\t}\n\treturn predict;\n};\n\nLexerATNSimulator.prototype.execATN = function(input, ds0) {\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"start state closure=\" + ds0.configs);\n\t}\n\tif (ds0.isAcceptState) {\n\t\t// allow zero-length tokens\n\t\tthis.captureSimState(this.prevAccept, input, ds0);\n\t}\n\tvar t = input.LA(1);\n\tvar s = ds0; // s is current/from DFA state\n\n\twhile (true) { // while more work\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"execATN loop starting closure: \" + s.configs);\n\t\t}\n\n\t\t// As we move src->trg, src->trg, we keep track of the previous trg to\n\t\t// avoid looking up the DFA state again, which is expensive.\n\t\t// If the previous target was already part of the DFA, we might\n\t\t// be able to avoid doing a reach operation upon t. If s!=null,\n\t\t// it means that semantic predicates didn't prevent us from\n\t\t// creating a DFA state. Once we know s!=null, we check to see if\n\t\t// the DFA state has an edge already for t. If so, we can just reuse\n\t\t// it's configuration set; there's no point in re-computing it.\n\t\t// This is kind of like doing DFA simulation within the ATN\n\t\t// simulation because DFA simulation is really just a way to avoid\n\t\t// computing reach/closure sets. Technically, once we know that\n\t\t// we have a previously added DFA state, we could jump over to\n\t\t// the DFA simulator. But, that would mean popping back and forth\n\t\t// a lot and making things more complicated algorithmically.\n\t\t// This optimization makes a lot of sense for loops within DFA.\n\t\t// A character will take us back to an existing DFA state\n\t\t// that already has lots of edges out of it. e.g., .* in comments.\n\t\t// print(\"Target for:\" + str(s) + \" and:\" + str(t))\n\t\tvar target = this.getExistingTargetState(s, t);\n\t\t// print(\"Existing:\" + str(target))\n\t\tif (target === null) {\n\t\t\ttarget = this.computeTargetState(input, s, t);\n\t\t\t// print(\"Computed:\" + str(target))\n\t\t}\n\t\tif (target === ATNSimulator.ERROR) {\n\t\t\tbreak;\n\t\t}\n\t\t// If this is a consumable input element, make sure to consume before\n\t\t// capturing the accept state so the input index, line, and char\n\t\t// position accurately reflect the state of the interpreter at the\n\t\t// end of the token.\n\t\tif (t !== Token.EOF) {\n\t\t\tthis.consume(input);\n\t\t}\n\t\tif (target.isAcceptState) {\n\t\t\tthis.captureSimState(this.prevAccept, input, target);\n\t\t\tif (t === Token.EOF) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tt = input.LA(1);\n\t\ts = target; // flip; current DFA target becomes new src/from state\n\t}\n\treturn this.failOrAccept(this.prevAccept, input, s.configs, t);\n};\n\n// Get an existing target state for an edge in the DFA. If the target state\n// for the edge has not yet been computed or is otherwise not available,\n// this method returns {@code null}.\n//\n// @param s The current DFA state\n// @param t The next input symbol\n// @return The existing target DFA state for the given input symbol\n// {@code t}, or {@code null} if the target state for this edge is not\n// already cached\nLexerATNSimulator.prototype.getExistingTargetState = function(s, t) {\n\tif (s.edges === null || t < LexerATNSimulator.MIN_DFA_EDGE || t > LexerATNSimulator.MAX_DFA_EDGE) {\n\t\treturn null;\n\t}\n\n\tvar target = s.edges[t - LexerATNSimulator.MIN_DFA_EDGE];\n\tif(target===undefined) {\n\t\ttarget = null;\n\t}\n\tif (LexerATNSimulator.debug && target !== null) {\n\t\tconsole.log(\"reuse state \" + s.stateNumber + \" edge to \" + target.stateNumber);\n\t}\n\treturn target;\n};\n\n// Compute a target state for an edge in the DFA, and attempt to add the\n// computed state and corresponding edge to the DFA.\n//\n// @param input The input stream\n// @param s The current DFA state\n// @param t The next input symbol\n//\n// @return The computed target DFA state for the given input symbol\n// {@code t}. If {@code t} does not lead to a valid DFA state, this method\n// returns {@link //ERROR}.\nLexerATNSimulator.prototype.computeTargetState = function(input, s, t) {\n\tvar reach = new OrderedATNConfigSet();\n\t// if we don't find an existing DFA state\n\t// Fill reach starting from closure, following t transitions\n\tthis.getReachableConfigSet(input, s.configs, reach, t);\n\n\tif (reach.items.length === 0) { // we got nowhere on t from s\n\t\tif (!reach.hasSemanticContext) {\n\t\t\t// we got nowhere on t, don't throw out this knowledge; it'd\n\t\t\t// cause a failover from DFA later.\n\t\t\tthis.addDFAEdge(s, t, ATNSimulator.ERROR);\n\t\t}\n\t\t// stop when we can't match any more char\n\t\treturn ATNSimulator.ERROR;\n\t}\n\t// Add an edge from s to target DFA found/created for reach\n\treturn this.addDFAEdge(s, t, null, reach);\n};\n\nLexerATNSimulator.prototype.failOrAccept = function(prevAccept, input, reach, t) {\n\tif (this.prevAccept.dfaState !== null) {\n\t\tvar lexerActionExecutor = prevAccept.dfaState.lexerActionExecutor;\n\t\tthis.accept(input, lexerActionExecutor, this.startIndex,\n\t\t\t\tprevAccept.index, prevAccept.line, prevAccept.column);\n\t\treturn prevAccept.dfaState.prediction;\n\t} else {\n\t\t// if no accept and EOF is first char, return EOF\n\t\tif (t === Token.EOF && input.index === this.startIndex) {\n\t\t\treturn Token.EOF;\n\t\t}\n\t\tthrow new LexerNoViableAltException(this.recog, input, this.startIndex, reach);\n\t}\n};\n\n// Given a starting configuration set, figure out all ATN configurations\n// we can reach upon input {@code t}. Parameter {@code reach} is a return\n// parameter.\nLexerATNSimulator.prototype.getReachableConfigSet = function(input, closure,\n\t\treach, t) {\n\t// this is used to skip processing for configs which have a lower priority\n\t// than a config that already reached an accept state for the same rule\n\tvar skipAlt = ATN.INVALID_ALT_NUMBER;\n\tfor (var i = 0; i < closure.items.length; i++) {\n\t\tvar cfg = closure.items[i];\n\t\tvar currentAltReachedAcceptState = (cfg.alt === skipAlt);\n\t\tif (currentAltReachedAcceptState && cfg.passedThroughNonGreedyDecision) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"testing %s at %s\\n\", this.getTokenName(t), cfg\n\t\t\t\t\t.toString(this.recog, true));\n\t\t}\n\t\tfor (var j = 0; j < cfg.state.transitions.length; j++) {\n\t\t\tvar trans = cfg.state.transitions[j]; // for each transition\n\t\t\tvar target = this.getReachableTarget(trans, t);\n\t\t\tif (target !== null) {\n\t\t\t\tvar lexerActionExecutor = cfg.lexerActionExecutor;\n\t\t\t\tif (lexerActionExecutor !== null) {\n\t\t\t\t\tlexerActionExecutor = lexerActionExecutor.fixOffsetBeforeMatch(input.index - this.startIndex);\n\t\t\t\t}\n\t\t\t\tvar treatEofAsEpsilon = (t === Token.EOF);\n\t\t\t\tvar config = new LexerATNConfig({state:target, lexerActionExecutor:lexerActionExecutor}, cfg);\n\t\t\t\tif (this.closure(input, config, reach,\n\t\t\t\t\t\tcurrentAltReachedAcceptState, true, treatEofAsEpsilon)) {\n\t\t\t\t\t// any remaining configs for this alt have a lower priority\n\t\t\t\t\t// than the one that just reached an accept state.\n\t\t\t\t\tskipAlt = cfg.alt;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nLexerATNSimulator.prototype.accept = function(input, lexerActionExecutor,\n\t\tstartIndex, index, line, charPos) {\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"ACTION %s\\n\", lexerActionExecutor);\n\t}\n\t// seek to after last char in token\n\tinput.seek(index);\n\tthis.line = line;\n\tthis.column = charPos;\n\tif (lexerActionExecutor !== null && this.recog !== null) {\n\t\tlexerActionExecutor.execute(this.recog, input, startIndex);\n\t}\n};\n\nLexerATNSimulator.prototype.getReachableTarget = function(trans, t) {\n\tif (trans.matches(t, 0, Lexer.MAX_CHAR_VALUE)) {\n\t\treturn trans.target;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nLexerATNSimulator.prototype.computeStartState = function(input, p) {\n\tvar initialContext = PredictionContext.EMPTY;\n\tvar configs = new OrderedATNConfigSet();\n\tfor (var i = 0; i < p.transitions.length; i++) {\n\t\tvar target = p.transitions[i].target;\n        var cfg = new LexerATNConfig({state:target, alt:i+1, context:initialContext}, null);\n\t\tthis.closure(input, cfg, configs, false, false, false);\n\t}\n\treturn configs;\n};\n\n// Since the alternatives within any lexer decision are ordered by\n// preference, this method stops pursuing the closure as soon as an accept\n// state is reached. After the first accept state is reached by depth-first\n// search from {@code config}, all other (potentially reachable) states for\n// this rule would have a lower priority.\n//\n// @return {@code true} if an accept state is reached, otherwise\n// {@code false}.\nLexerATNSimulator.prototype.closure = function(input, config, configs,\n\t\tcurrentAltReachedAcceptState, speculative, treatEofAsEpsilon) {\n\tvar cfg = null;\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"closure(\" + config.toString(this.recog, true) + \")\");\n\t}\n\tif (config.state instanceof RuleStopState) {\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tif (this.recog !== null) {\n\t\t\t\tconsole.log(\"closure at %s rule stop %s\\n\", this.recog.ruleNames[config.state.ruleIndex], config);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"closure at rule stop %s\\n\", config);\n\t\t\t}\n\t\t}\n\t\tif (config.context === null || config.context.hasEmptyPath()) {\n\t\t\tif (config.context === null || config.context.isEmpty()) {\n\t\t\t\tconfigs.add(config);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconfigs.add(new LexerATNConfig({ state:config.state, context:PredictionContext.EMPTY}, config));\n\t\t\t\tcurrentAltReachedAcceptState = true;\n\t\t\t}\n\t\t}\n\t\tif (config.context !== null && !config.context.isEmpty()) {\n\t\t\tfor (var i = 0; i < config.context.length; i++) {\n\t\t\t\tif (config.context.getReturnState(i) !== PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\t\t\tvar newContext = config.context.getParent(i); // \"pop\" return state\n\t\t\t\t\tvar returnState = this.atn.states[config.context.getReturnState(i)];\n\t\t\t\t\tcfg = new LexerATNConfig({ state:returnState, context:newContext }, config);\n\t\t\t\t\tcurrentAltReachedAcceptState = this.closure(input, cfg,\n\t\t\t\t\t\t\tconfigs, currentAltReachedAcceptState, speculative,\n\t\t\t\t\t\t\ttreatEofAsEpsilon);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn currentAltReachedAcceptState;\n\t}\n\t// optimization\n\tif (!config.state.epsilonOnlyTransitions) {\n\t\tif (!currentAltReachedAcceptState || !config.passedThroughNonGreedyDecision) {\n\t\t\tconfigs.add(config);\n\t\t}\n\t}\n\tfor (var j = 0; j < config.state.transitions.length; j++) {\n\t\tvar trans = config.state.transitions[j];\n\t\tcfg = this.getEpsilonTarget(input, config, trans, configs, speculative, treatEofAsEpsilon);\n\t\tif (cfg !== null) {\n\t\t\tcurrentAltReachedAcceptState = this.closure(input, cfg, configs,\n\t\t\t\t\tcurrentAltReachedAcceptState, speculative, treatEofAsEpsilon);\n\t\t}\n\t}\n\treturn currentAltReachedAcceptState;\n};\n\n// side-effect: can alter configs.hasSemanticContext\nLexerATNSimulator.prototype.getEpsilonTarget = function(input, config, trans,\n\t\tconfigs, speculative, treatEofAsEpsilon) {\n\tvar cfg = null;\n\tif (trans.serializationType === Transition.RULE) {\n\t\tvar newContext = SingletonPredictionContext.create(config.context, trans.followState.stateNumber);\n\t\tcfg = new LexerATNConfig( { state:trans.target, context:newContext}, config);\n\t} else if (trans.serializationType === Transition.PRECEDENCE) {\n\t\tthrow \"Precedence predicates are not supported in lexers.\";\n\t} else if (trans.serializationType === Transition.PREDICATE) {\n\t\t// Track traversing semantic predicates. If we traverse,\n\t\t// we cannot add a DFA state for this \"reach\" computation\n\t\t// because the DFA would not test the predicate again in the\n\t\t// future. Rather than creating collections of semantic predicates\n\t\t// like v3 and testing them on prediction, v4 will test them on the\n\t\t// fly all the time using the ATN not the DFA. This is slower but\n\t\t// semantically it's not used that often. One of the key elements to\n\t\t// this predicate mechanism is not adding DFA states that see\n\t\t// predicates immediately afterwards in the ATN. For example,\n\n\t\t// a : ID {p1}? | ID {p2}? ;\n\n\t\t// should create the start state for rule 'a' (to save start state\n\t\t// competition), but should not create target of ID state. The\n\t\t// collection of ATN states the following ID references includes\n\t\t// states reached by traversing predicates. Since this is when we\n\t\t// test them, we cannot cash the DFA state target of ID.\n\n\t\tif (LexerATNSimulator.debug) {\n\t\t\tconsole.log(\"EVAL rule \" + trans.ruleIndex + \":\" + trans.predIndex);\n\t\t}\n\t\tconfigs.hasSemanticContext = true;\n\t\tif (this.evaluatePredicate(input, trans.ruleIndex, trans.predIndex, speculative)) {\n\t\t\tcfg = new LexerATNConfig({ state:trans.target}, config);\n\t\t}\n\t} else if (trans.serializationType === Transition.ACTION) {\n\t\tif (config.context === null || config.context.hasEmptyPath()) {\n\t\t\t// execute actions anywhere in the start rule for a token.\n\t\t\t//\n\t\t\t// TODO: if the entry rule is invoked recursively, some\n\t\t\t// actions may be executed during the recursive call. The\n\t\t\t// problem can appear when hasEmptyPath() is true but\n\t\t\t// isEmpty() is false. In this case, the config needs to be\n\t\t\t// split into two contexts - one with just the empty path\n\t\t\t// and another with everything but the empty path.\n\t\t\t// Unfortunately, the current algorithm does not allow\n\t\t\t// getEpsilonTarget to return two configurations, so\n\t\t\t// additional modifications are needed before we can support\n\t\t\t// the split operation.\n\t\t\tvar lexerActionExecutor = LexerActionExecutor.append(config.lexerActionExecutor,\n\t\t\t\t\tthis.atn.lexerActions[trans.actionIndex]);\n\t\t\tcfg = new LexerATNConfig({ state:trans.target, lexerActionExecutor:lexerActionExecutor }, config);\n\t\t} else {\n\t\t\t// ignore actions in referenced rules\n\t\t\tcfg = new LexerATNConfig( { state:trans.target}, config);\n\t\t}\n\t} else if (trans.serializationType === Transition.EPSILON) {\n\t\tcfg = new LexerATNConfig({ state:trans.target}, config);\n\t} else if (trans.serializationType === Transition.ATOM ||\n\t\t\t\ttrans.serializationType === Transition.RANGE ||\n\t\t\t\ttrans.serializationType === Transition.SET) {\n\t\tif (treatEofAsEpsilon) {\n\t\t\tif (trans.matches(Token.EOF, 0, Lexer.MAX_CHAR_VALUE)) {\n\t\t\t\tcfg = new LexerATNConfig( { state:trans.target }, config);\n\t\t\t}\n\t\t}\n\t}\n\treturn cfg;\n};\n\n// Evaluate a predicate specified in the lexer.\n//\n// <p>If {@code speculative} is {@code true}, this method was called before\n// {@link //consume} for the matched character. This method should call\n// {@link //consume} before evaluating the predicate to ensure position\n// sensitive values, including {@link Lexer//getText}, {@link Lexer//getLine},\n// and {@link Lexer//getcolumn}, properly reflect the current\n// lexer state. This method should restore {@code input} and the simulator\n// to the original state before returning (i.e. undo the actions made by the\n// call to {@link //consume}.</p>\n//\n// @param input The input stream.\n// @param ruleIndex The rule containing the predicate.\n// @param predIndex The index of the predicate within the rule.\n// @param speculative {@code true} if the current index in {@code input} is\n// one character before the predicate's location.\n//\n// @return {@code true} if the specified predicate evaluates to\n// {@code true}.\n// /\nLexerATNSimulator.prototype.evaluatePredicate = function(input, ruleIndex,\n\t\tpredIndex, speculative) {\n\t// assume true if no recognizer was provided\n\tif (this.recog === null) {\n\t\treturn true;\n\t}\n\tif (!speculative) {\n\t\treturn this.recog.sempred(null, ruleIndex, predIndex);\n\t}\n\tvar savedcolumn = this.column;\n\tvar savedLine = this.line;\n\tvar index = input.index;\n\tvar marker = input.mark();\n\ttry {\n\t\tthis.consume(input);\n\t\treturn this.recog.sempred(null, ruleIndex, predIndex);\n\t} finally {\n\t\tthis.column = savedcolumn;\n\t\tthis.line = savedLine;\n\t\tinput.seek(index);\n\t\tinput.release(marker);\n\t}\n};\n\nLexerATNSimulator.prototype.captureSimState = function(settings, input, dfaState) {\n\tsettings.index = input.index;\n\tsettings.line = this.line;\n\tsettings.column = this.column;\n\tsettings.dfaState = dfaState;\n};\n\nLexerATNSimulator.prototype.addDFAEdge = function(from_, tk, to, cfgs) {\n\tif (to === undefined) {\n\t\tto = null;\n\t}\n\tif (cfgs === undefined) {\n\t\tcfgs = null;\n\t}\n\tif (to === null && cfgs !== null) {\n\t\t// leading to this call, ATNConfigSet.hasSemanticContext is used as a\n\t\t// marker indicating dynamic predicate evaluation makes this edge\n\t\t// dependent on the specific input sequence, so the static edge in the\n\t\t// DFA should be omitted. The target DFAState is still created since\n\t\t// execATN has the ability to resynchronize with the DFA state cache\n\t\t// following the predicate evaluation step.\n\t\t//\n\t\t// TJP notes: next time through the DFA, we see a pred again and eval.\n\t\t// If that gets us to a previously created (but dangling) DFA\n\t\t// state, we can continue in pure DFA mode from there.\n\t\t// /\n\t\tvar suppressEdge = cfgs.hasSemanticContext;\n\t\tcfgs.hasSemanticContext = false;\n\n\t\tto = this.addDFAState(cfgs);\n\n\t\tif (suppressEdge) {\n\t\t\treturn to;\n\t\t}\n\t}\n\t// add the edge\n\tif (tk < LexerATNSimulator.MIN_DFA_EDGE || tk > LexerATNSimulator.MAX_DFA_EDGE) {\n\t\t// Only track edges within the DFA bounds\n\t\treturn to;\n\t}\n\tif (LexerATNSimulator.debug) {\n\t\tconsole.log(\"EDGE \" + from_ + \" -> \" + to + \" upon \" + tk);\n\t}\n\tif (from_.edges === null) {\n\t\t// make room for tokens 1..n and -1 masquerading as index 0\n\t\tfrom_.edges = [];\n\t}\n\tfrom_.edges[tk - LexerATNSimulator.MIN_DFA_EDGE] = to; // connect\n\n\treturn to;\n};\n\n// Add a new DFA state if there isn't one with this set of\n// configurations already. This method also detects the first\n// configuration containing an ATN rule stop state. Later, when\n// traversing the DFA, we will know which rule to accept.\nLexerATNSimulator.prototype.addDFAState = function(configs) {\n\tvar proposed = new DFAState(null, configs);\n\tvar firstConfigWithRuleStopState = null;\n\tfor (var i = 0; i < configs.items.length; i++) {\n\t\tvar cfg = configs.items[i];\n\t\tif (cfg.state instanceof RuleStopState) {\n\t\t\tfirstConfigWithRuleStopState = cfg;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (firstConfigWithRuleStopState !== null) {\n\t\tproposed.isAcceptState = true;\n\t\tproposed.lexerActionExecutor = firstConfigWithRuleStopState.lexerActionExecutor;\n\t\tproposed.prediction = this.atn.ruleToTokenType[firstConfigWithRuleStopState.state.ruleIndex];\n\t}\n\tvar dfa = this.decisionToDFA[this.mode];\n\tvar existing = dfa.states.get(proposed);\n\tif (existing!==null) {\n\t\treturn existing;\n\t}\n\tvar newState = proposed;\n\tnewState.stateNumber = dfa.states.length;\n\tconfigs.setReadonly(true);\n\tnewState.configs = configs;\n\tdfa.states.add(newState);\n\treturn newState;\n};\n\nLexerATNSimulator.prototype.getDFA = function(mode) {\n\treturn this.decisionToDFA[mode];\n};\n\n// Get the text matched so far for the current token.\nLexerATNSimulator.prototype.getText = function(input) {\n\t// index is first lookahead char, don't include.\n\treturn input.getText(this.startIndex, input.index - 1);\n};\n\nLexerATNSimulator.prototype.consume = function(input) {\n\tvar curChar = input.LA(1);\n\tif (curChar === \"\\n\".charCodeAt(0)) {\n\t\tthis.line += 1;\n\t\tthis.column = 0;\n\t} else {\n\t\tthis.column += 1;\n\t}\n\tinput.consume();\n};\n\nLexerATNSimulator.prototype.getTokenName = function(tt) {\n\tif (tt === -1) {\n\t\treturn \"EOF\";\n\t} else {\n\t\treturn \"'\" + String.fromCharCode(tt) + \"'\";\n\t}\n};\n\nexports.LexerATNSimulator = LexerATNSimulator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/LexerATNSimulator.js\n// module id = WcIR\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nvar Utils = require('./../Utils');\nvar Token = require('./../Token').Token;\nvar RuleNode = require('./Tree').RuleNode;\nvar ErrorNode = require('./Tree').ErrorNode;\nvar TerminalNode = require('./Tree').TerminalNode;\nvar ParserRuleContext = require('./../ParserRuleContext').ParserRuleContext;\nvar RuleContext = require('./../RuleContext').RuleContext;\nvar INVALID_ALT_NUMBER = require('./../atn/ATN').INVALID_ALT_NUMBER;\n\n\n/** A set of utility routines useful for all kinds of ANTLR trees. */\nfunction Trees() {\n}\n\n// Print out a whole tree in LISP form. {@link //getNodeText} is used on the\n//  node payloads to get the text for the nodes.  Detect\n//  parse trees and extract data appropriately.\nTrees.toStringTree = function(tree, ruleNames, recog) {\n\truleNames = ruleNames || null;\n\trecog = recog || null;\n    if(recog!==null) {\n       ruleNames = recog.ruleNames;\n    }\n    var s = Trees.getNodeText(tree, ruleNames);\n    s = Utils.escapeWhitespace(s, false);\n    var c = tree.getChildCount();\n    if(c===0) {\n        return s;\n    }\n    var res = \"(\" + s + ' ';\n    if(c>0) {\n        s = Trees.toStringTree(tree.getChild(0), ruleNames);\n        res = res.concat(s);\n    }\n    for(var i=1;i<c;i++) {\n        s = Trees.toStringTree(tree.getChild(i), ruleNames);\n        res = res.concat(' ' + s);\n    }\n    res = res.concat(\")\");\n    return res;\n};\n\nTrees.getNodeText = function(t, ruleNames, recog) {\n\truleNames = ruleNames || null;\n\trecog = recog || null;\n    if(recog!==null) {\n        ruleNames = recog.ruleNames;\n    }\n    if(ruleNames!==null) {\n       if (t instanceof RuleContext) {\n           var altNumber = t.getAltNumber();\n           if ( altNumber!=INVALID_ALT_NUMBER ) {\n               return ruleNames[t.ruleIndex]+\":\"+altNumber;\n           }\n           return ruleNames[t.ruleIndex];\n       } else if ( t instanceof ErrorNode) {\n           return t.toString();\n       } else if(t instanceof TerminalNode) {\n           if(t.symbol!==null) {\n               return t.symbol.text;\n           }\n       }\n    }\n    // no recog for rule names\n    var payload = t.getPayload();\n    if (payload instanceof Token ) {\n       return payload.text;\n    }\n    return t.getPayload().toString();\n};\n\n\n// Return ordered list of all children of this node\nTrees.getChildren = function(t) {\n\tvar list = [];\n\tfor(var i=0;i<t.getChildCount();i++) {\n\t\tlist.push(t.getChild(i));\n\t}\n\treturn list;\n};\n\n// Return a list of all ancestors of this node.  The first node of\n//  list is the root and the last is the parent of this node.\n//\nTrees.getAncestors = function(t) {\n    var ancestors = [];\n    t = t.getParent();\n    while(t!==null) {\n        ancestors = [t].concat(ancestors);\n        t = t.getParent();\n    }\n    return ancestors;\n};\n\nTrees.findAllTokenNodes = function(t, ttype) {\n    return Trees.findAllNodes(t, ttype, true);\n};\n\nTrees.findAllRuleNodes = function(t, ruleIndex) {\n\treturn Trees.findAllNodes(t, ruleIndex, false);\n};\n\nTrees.findAllNodes = function(t, index, findTokens) {\n\tvar nodes = [];\n\tTrees._findAllNodes(t, index, findTokens, nodes);\n\treturn nodes;\n};\n\nTrees._findAllNodes = function(t, index, findTokens, nodes) {\n\t// check this node (the root) first\n\tif(findTokens && (t instanceof TerminalNode)) {\n\t\tif(t.symbol.type===index) {\n\t\t\tnodes.push(t);\n\t\t}\n\t} else if(!findTokens && (t instanceof ParserRuleContext)) {\n\t\tif(t.ruleIndex===index) {\n\t\t\tnodes.push(t);\n\t\t}\n\t}\n\t// check children\n\tfor(var i=0;i<t.getChildCount();i++) {\n\t\tTrees._findAllNodes(t.getChild(i), index, findTokens, nodes);\n\t}\n};\n\nTrees.descendants = function(t) {\n\tvar nodes = [t];\n    for(var i=0;i<t.getChildCount();i++) {\n        nodes = nodes.concat(Trees.descendants(t.getChild(i)));\n    }\n    return nodes;\n};\n\n\nexports.Trees = Trees;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/tree/Trees.js\n// module id = WmJ1\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar RuleContext = require('./RuleContext').RuleContext;\nvar Hash = require('./Utils').Hash;\n\nfunction PredictionContext(cachedHashCode) {\n\tthis.cachedHashCode = cachedHashCode;\n}\n\n// Represents {@code $} in local context prediction, which means wildcard.\n// {@code//+x =//}.\n// /\nPredictionContext.EMPTY = null;\n\n// Represents {@code $} in an array in full context mode, when {@code $}\n// doesn't mean wildcard: {@code $ + x = [$,x]}. Here,\n// {@code $} = {@link //EMPTY_RETURN_STATE}.\n// /\nPredictionContext.EMPTY_RETURN_STATE = 0x7FFFFFFF;\n\nPredictionContext.globalNodeCount = 1;\nPredictionContext.id = PredictionContext.globalNodeCount;\n\n// Stores the computed hash code of this {@link PredictionContext}. The hash\n// code is computed in parts to match the following reference algorithm.\n//\n// <pre>\n// private int referenceHashCode() {\n// int hash = {@link MurmurHash//initialize MurmurHash.initialize}({@link\n// //INITIAL_HASH});\n//\n// for (int i = 0; i &lt; {@link //size()}; i++) {\n// hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link //getParent\n// getParent}(i));\n// }\n//\n// for (int i = 0; i &lt; {@link //size()}; i++) {\n// hash = {@link MurmurHash//update MurmurHash.update}(hash, {@link\n// //getReturnState getReturnState}(i));\n// }\n//\n// hash = {@link MurmurHash//finish MurmurHash.finish}(hash, 2// {@link\n// //size()});\n// return hash;\n// }\n// </pre>\n// /\n\n// This means only the {@link //EMPTY} context is in set.\nPredictionContext.prototype.isEmpty = function() {\n\treturn this === PredictionContext.EMPTY;\n};\n\nPredictionContext.prototype.hasEmptyPath = function() {\n\treturn this.getReturnState(this.length - 1) === PredictionContext.EMPTY_RETURN_STATE;\n};\n\nPredictionContext.prototype.hashCode = function() {\n\treturn this.cachedHashCode;\n};\n\n\nPredictionContext.prototype.updateHashCode = function(hash) {\n    hash.update(this.cachedHashCode);\n};\n/*\nfunction calculateHashString(parent, returnState) {\n\treturn \"\" + parent + returnState;\n}\n*/\n\n// Used to cache {@link PredictionContext} objects. Its used for the shared\n// context cash associated with contexts in DFA states. This cache\n// can be used for both lexers and parsers.\n\nfunction PredictionContextCache() {\n\tthis.cache = {};\n\treturn this;\n}\n\n// Add a context to the cache and return it. If the context already exists,\n// return that one instead and do not add a new context to the cache.\n// Protect shared cache from unsafe thread access.\n//\nPredictionContextCache.prototype.add = function(ctx) {\n\tif (ctx === PredictionContext.EMPTY) {\n\t\treturn PredictionContext.EMPTY;\n\t}\n\tvar existing = this.cache[ctx] || null;\n\tif (existing !== null) {\n\t\treturn existing;\n\t}\n\tthis.cache[ctx] = ctx;\n\treturn ctx;\n};\n\nPredictionContextCache.prototype.get = function(ctx) {\n\treturn this.cache[ctx] || null;\n};\n\nObject.defineProperty(PredictionContextCache.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.cache.length;\n\t}\n});\n\nfunction SingletonPredictionContext(parent, returnState) {\n\tvar hashCode = 0;\n\tif(parent !== null) {\n\t\tvar hash = new Hash();\n\t\thash.update(parent, returnState);\n        hashCode = hash.finish();\n\t}\n\tPredictionContext.call(this, hashCode);\n\tthis.parentCtx = parent;\n\tthis.returnState = returnState;\n}\n\nSingletonPredictionContext.prototype = Object.create(PredictionContext.prototype);\nSingletonPredictionContext.prototype.contructor = SingletonPredictionContext;\n\nSingletonPredictionContext.create = function(parent, returnState) {\n\tif (returnState === PredictionContext.EMPTY_RETURN_STATE && parent === null) {\n\t\t// someone can pass in the bits of an array ctx that mean $\n\t\treturn PredictionContext.EMPTY;\n\t} else {\n\t\treturn new SingletonPredictionContext(parent, returnState);\n\t}\n};\n\nObject.defineProperty(SingletonPredictionContext.prototype, \"length\", {\n\tget : function() {\n\t\treturn 1;\n\t}\n});\n\nSingletonPredictionContext.prototype.getParent = function(index) {\n\treturn this.parentCtx;\n};\n\nSingletonPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnState;\n};\n\nSingletonPredictionContext.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof SingletonPredictionContext)) {\n\t\treturn false;\n\t} else if (this.hashCode() !== other.hashCode()) {\n\t\treturn false; // can't be same if hash is different\n\t} else {\n\t\tif(this.returnState !== other.returnState)\n            return false;\n        else if(this.parentCtx==null)\n            return other.parentCtx==null\n\t\telse\n            return this.parentCtx.equals(other.parentCtx);\n\t}\n};\n\nSingletonPredictionContext.prototype.toString = function() {\n\tvar up = this.parentCtx === null ? \"\" : this.parentCtx.toString();\n\tif (up.length === 0) {\n\t\tif (this.returnState === PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\treturn \"$\";\n\t\t} else {\n\t\t\treturn \"\" + this.returnState;\n\t\t}\n\t} else {\n\t\treturn \"\" + this.returnState + \" \" + up;\n\t}\n};\n\nfunction EmptyPredictionContext() {\n\tSingletonPredictionContext.call(this, null, PredictionContext.EMPTY_RETURN_STATE);\n\treturn this;\n}\n\nEmptyPredictionContext.prototype = Object.create(SingletonPredictionContext.prototype);\nEmptyPredictionContext.prototype.constructor = EmptyPredictionContext;\n\nEmptyPredictionContext.prototype.isEmpty = function() {\n\treturn true;\n};\n\nEmptyPredictionContext.prototype.getParent = function(index) {\n\treturn null;\n};\n\nEmptyPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnState;\n};\n\nEmptyPredictionContext.prototype.equals = function(other) {\n\treturn this === other;\n};\n\nEmptyPredictionContext.prototype.toString = function() {\n\treturn \"$\";\n};\n\nPredictionContext.EMPTY = new EmptyPredictionContext();\n\nfunction ArrayPredictionContext(parents, returnStates) {\n\t// Parent can be null only if full ctx mode and we make an array\n\t// from {@link //EMPTY} and non-empty. We merge {@link //EMPTY} by using\n\t// null parent and\n\t// returnState == {@link //EMPTY_RETURN_STATE}.\n\tvar h = new Hash();\n\th.update(parents, returnStates);\n\tvar hashCode = h.finish();\n\tPredictionContext.call(this, hashCode);\n\tthis.parents = parents;\n\tthis.returnStates = returnStates;\n\treturn this;\n}\n\nArrayPredictionContext.prototype = Object.create(PredictionContext.prototype);\nArrayPredictionContext.prototype.constructor = ArrayPredictionContext;\n\nArrayPredictionContext.prototype.isEmpty = function() {\n\t// since EMPTY_RETURN_STATE can only appear in the last position, we\n\t// don't need to verify that size==1\n\treturn this.returnStates[0] === PredictionContext.EMPTY_RETURN_STATE;\n};\n\nObject.defineProperty(ArrayPredictionContext.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.returnStates.length;\n\t}\n});\n\nArrayPredictionContext.prototype.getParent = function(index) {\n\treturn this.parents[index];\n};\n\nArrayPredictionContext.prototype.getReturnState = function(index) {\n\treturn this.returnStates[index];\n};\n\nArrayPredictionContext.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof ArrayPredictionContext)) {\n\t\treturn false;\n\t} else if (this.hashCode() !== other.hashCode()) {\n\t\treturn false; // can't be same if hash is different\n\t} else {\n\t\treturn this.returnStates === other.returnStates &&\n\t\t\t\tthis.parents === other.parents;\n\t}\n};\n\nArrayPredictionContext.prototype.toString = function() {\n\tif (this.isEmpty()) {\n\t\treturn \"[]\";\n\t} else {\n\t\tvar s = \"[\";\n\t\tfor (var i = 0; i < this.returnStates.length; i++) {\n\t\t\tif (i > 0) {\n\t\t\t\ts = s + \", \";\n\t\t\t}\n\t\t\tif (this.returnStates[i] === PredictionContext.EMPTY_RETURN_STATE) {\n\t\t\t\ts = s + \"$\";\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ts = s + this.returnStates[i];\n\t\t\tif (this.parents[i] !== null) {\n\t\t\t\ts = s + \" \" + this.parents[i];\n\t\t\t} else {\n\t\t\t\ts = s + \"null\";\n\t\t\t}\n\t\t}\n\t\treturn s + \"]\";\n\t}\n};\n\n// Convert a {@link RuleContext} tree to a {@link PredictionContext} graph.\n// Return {@link //EMPTY} if {@code outerContext} is empty or null.\n// /\nfunction predictionContextFromRuleContext(atn, outerContext) {\n\tif (outerContext === undefined || outerContext === null) {\n\t\touterContext = RuleContext.EMPTY;\n\t}\n\t// if we are in RuleContext of start rule, s, then PredictionContext\n\t// is EMPTY. Nobody called us. (if we are empty, return empty)\n\tif (outerContext.parentCtx === null || outerContext === RuleContext.EMPTY) {\n\t\treturn PredictionContext.EMPTY;\n\t}\n\t// If we have a parent, convert it to a PredictionContext graph\n\tvar parent = predictionContextFromRuleContext(atn, outerContext.parentCtx);\n\tvar state = atn.states[outerContext.invokingState];\n\tvar transition = state.transitions[0];\n\treturn SingletonPredictionContext.create(parent, transition.followState.stateNumber);\n}\n/*\nfunction calculateListsHashString(parents, returnStates) {\n\tvar s = \"\";\n\tparents.map(function(p) {\n\t\ts = s + p;\n\t});\n\treturnStates.map(function(r) {\n\t\ts = s + r;\n\t});\n\treturn s;\n}\n*/\nfunction merge(a, b, rootIsWildcard, mergeCache) {\n\t// share same graph if both same\n\tif (a === b) {\n\t\treturn a;\n\t}\n\tif (a instanceof SingletonPredictionContext && b instanceof SingletonPredictionContext) {\n\t\treturn mergeSingletons(a, b, rootIsWildcard, mergeCache);\n\t}\n\t// At least one of a or b is array\n\t// If one is $ and rootIsWildcard, return $ as// wildcard\n\tif (rootIsWildcard) {\n\t\tif (a instanceof EmptyPredictionContext) {\n\t\t\treturn a;\n\t\t}\n\t\tif (b instanceof EmptyPredictionContext) {\n\t\t\treturn b;\n\t\t}\n\t}\n\t// convert singleton so both are arrays to normalize\n\tif (a instanceof SingletonPredictionContext) {\n\t\ta = new ArrayPredictionContext([a.getParent()], [a.returnState]);\n\t}\n\tif (b instanceof SingletonPredictionContext) {\n\t\tb = new ArrayPredictionContext([b.getParent()], [b.returnState]);\n\t}\n\treturn mergeArrays(a, b, rootIsWildcard, mergeCache);\n}\n\n//\n// Merge two {@link SingletonPredictionContext} instances.\n//\n// <p>Stack tops equal, parents merge is same; return left graph.<br>\n// <embed src=\"images/SingletonMerge_SameRootSamePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Same stack top, parents differ; merge parents giving array node, then\n// remainders of those graphs. A new root node is created to point to the\n// merged parents.<br>\n// <embed src=\"images/SingletonMerge_SameRootDiffPar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Different stack tops pointing to same parent. Make array node for the\n// root where both element in the root point to the same (original)\n// parent.<br>\n// <embed src=\"images/SingletonMerge_DiffRootSamePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Different stack tops pointing to different parents. Make array node for\n// the root where each element points to the corresponding original\n// parent.<br>\n// <embed src=\"images/SingletonMerge_DiffRootDiffPar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// @param a the first {@link SingletonPredictionContext}\n// @param b the second {@link SingletonPredictionContext}\n// @param rootIsWildcard {@code true} if this is a local-context merge,\n// otherwise false to indicate a full-context merge\n// @param mergeCache\n// /\nfunction mergeSingletons(a, b, rootIsWildcard, mergeCache) {\n\tif (mergeCache !== null) {\n\t\tvar previous = mergeCache.get(a, b);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t\tprevious = mergeCache.get(b, a);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t}\n\n\tvar rootMerge = mergeRoot(a, b, rootIsWildcard);\n\tif (rootMerge !== null) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, rootMerge);\n\t\t}\n\t\treturn rootMerge;\n\t}\n\tif (a.returnState === b.returnState) {\n\t\tvar parent = merge(a.parentCtx, b.parentCtx, rootIsWildcard, mergeCache);\n\t\t// if parent is same as existing a or b parent or reduced to a parent,\n\t\t// return it\n\t\tif (parent === a.parentCtx) {\n\t\t\treturn a; // ax + bx = ax, if a=b\n\t\t}\n\t\tif (parent === b.parentCtx) {\n\t\t\treturn b; // ax + bx = bx, if a=b\n\t\t}\n\t\t// else: ax + ay = a'[x,y]\n\t\t// merge parents x and y, giving array node with x,y then remainders\n\t\t// of those graphs. dup a, a' points at merged array\n\t\t// new joined parent so create new singleton pointing to it, a'\n\t\tvar spc = SingletonPredictionContext.create(parent, a.returnState);\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, spc);\n\t\t}\n\t\treturn spc;\n\t} else { // a != b payloads differ\n\t\t// see if we can collapse parents due to $+x parents if local ctx\n\t\tvar singleParent = null;\n\t\tif (a === b || (a.parentCtx !== null && a.parentCtx === b.parentCtx)) { // ax +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// bx =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// [a,b]x\n\t\t\tsingleParent = a.parentCtx;\n\t\t}\n\t\tif (singleParent !== null) { // parents are same\n\t\t\t// sort payloads and use same parent\n\t\t\tvar payloads = [ a.returnState, b.returnState ];\n\t\t\tif (a.returnState > b.returnState) {\n\t\t\t\tpayloads[0] = b.returnState;\n\t\t\t\tpayloads[1] = a.returnState;\n\t\t\t}\n\t\t\tvar parents = [ singleParent, singleParent ];\n\t\t\tvar apc = new ArrayPredictionContext(parents, payloads);\n\t\t\tif (mergeCache !== null) {\n\t\t\t\tmergeCache.set(a, b, apc);\n\t\t\t}\n\t\t\treturn apc;\n\t\t}\n\t\t// parents differ and can't merge them. Just pack together\n\t\t// into array; can't merge.\n\t\t// ax + by = [ax,by]\n\t\tvar payloads = [ a.returnState, b.returnState ];\n\t\tvar parents = [ a.parentCtx, b.parentCtx ];\n\t\tif (a.returnState > b.returnState) { // sort by payload\n\t\t\tpayloads[0] = b.returnState;\n\t\t\tpayloads[1] = a.returnState;\n\t\t\tparents = [ b.parentCtx, a.parentCtx ];\n\t\t}\n\t\tvar a_ = new ArrayPredictionContext(parents, payloads);\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, a_);\n\t\t}\n\t\treturn a_;\n\t}\n}\n\n//\n// Handle case where at least one of {@code a} or {@code b} is\n// {@link //EMPTY}. In the following diagrams, the symbol {@code $} is used\n// to represent {@link //EMPTY}.\n//\n// <h2>Local-Context Merges</h2>\n//\n// <p>These local-context merge operations are used when {@code rootIsWildcard}\n// is true.</p>\n//\n// <p>{@link //EMPTY} is superset of any graph; return {@link //EMPTY}.<br>\n// <embed src=\"images/LocalMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>{@link //EMPTY} and anything is {@code //EMPTY}, so merged parent is\n// {@code //EMPTY}; return left graph.<br>\n// <embed src=\"images/LocalMerge_EmptyParent.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Special case of last merge if local context.<br>\n// <embed src=\"images/LocalMerge_DiffRoots.svg\" type=\"image/svg+xml\"/></p>\n//\n// <h2>Full-Context Merges</h2>\n//\n// <p>These full-context merge operations are used when {@code rootIsWildcard}\n// is false.</p>\n//\n// <p><embed src=\"images/FullMerge_EmptyRoots.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Must keep all contexts; {@link //EMPTY} in array is a special value (and\n// null parent).<br>\n// <embed src=\"images/FullMerge_EmptyRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p><embed src=\"images/FullMerge_SameRoot.svg\" type=\"image/svg+xml\"/></p>\n//\n// @param a the first {@link SingletonPredictionContext}\n// @param b the second {@link SingletonPredictionContext}\n// @param rootIsWildcard {@code true} if this is a local-context merge,\n// otherwise false to indicate a full-context merge\n// /\nfunction mergeRoot(a, b, rootIsWildcard) {\n\tif (rootIsWildcard) {\n\t\tif (a === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // // + b =//\n\t\t}\n\t\tif (b === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // a +// =//\n\t\t}\n\t} else {\n\t\tif (a === PredictionContext.EMPTY && b === PredictionContext.EMPTY) {\n\t\t\treturn PredictionContext.EMPTY; // $ + $ = $\n\t\t} else if (a === PredictionContext.EMPTY) { // $ + x = [$,x]\n\t\t\tvar payloads = [ b.returnState,\n\t\t\t\t\tPredictionContext.EMPTY_RETURN_STATE ];\n\t\t\tvar parents = [ b.parentCtx, null ];\n\t\t\treturn new ArrayPredictionContext(parents, payloads);\n\t\t} else if (b === PredictionContext.EMPTY) { // x + $ = [$,x] ($ is always first if present)\n\t\t\tvar payloads = [ a.returnState, PredictionContext.EMPTY_RETURN_STATE ];\n\t\t\tvar parents = [ a.parentCtx, null ];\n\t\t\treturn new ArrayPredictionContext(parents, payloads);\n\t\t}\n\t}\n\treturn null;\n}\n\n//\n// Merge two {@link ArrayPredictionContext} instances.\n//\n// <p>Different tops, different parents.<br>\n// <embed src=\"images/ArrayMerge_DiffTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, same parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopSamePar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, different parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopDiffPar.svg\" type=\"image/svg+xml\"/></p>\n//\n// <p>Shared top, all shared parents.<br>\n// <embed src=\"images/ArrayMerge_ShareTopSharePar.svg\"\n// type=\"image/svg+xml\"/></p>\n//\n// <p>Equal tops, merge parents and reduce top to\n// {@link SingletonPredictionContext}.<br>\n// <embed src=\"images/ArrayMerge_EqualTop.svg\" type=\"image/svg+xml\"/></p>\n// /\nfunction mergeArrays(a, b, rootIsWildcard, mergeCache) {\n\tif (mergeCache !== null) {\n\t\tvar previous = mergeCache.get(a, b);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t\tprevious = mergeCache.get(b, a);\n\t\tif (previous !== null) {\n\t\t\treturn previous;\n\t\t}\n\t}\n\t// merge sorted payloads a + b => M\n\tvar i = 0; // walks a\n\tvar j = 0; // walks b\n\tvar k = 0; // walks target M array\n\n\tvar mergedReturnStates = [];\n\tvar mergedParents = [];\n\t// walk and merge to yield mergedParents, mergedReturnStates\n\twhile (i < a.returnStates.length && j < b.returnStates.length) {\n\t\tvar a_parent = a.parents[i];\n\t\tvar b_parent = b.parents[j];\n\t\tif (a.returnStates[i] === b.returnStates[j]) {\n\t\t\t// same payload (stack tops are equal), must yield merged singleton\n\t\t\tvar payload = a.returnStates[i];\n\t\t\t// $+$ = $\n\t\t\tvar bothDollars = payload === PredictionContext.EMPTY_RETURN_STATE &&\n\t\t\t\t\ta_parent === null && b_parent === null;\n\t\t\tvar ax_ax = (a_parent !== null && b_parent !== null && a_parent === b_parent); // ax+ax\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ax\n\t\t\tif (bothDollars || ax_ax) {\n\t\t\t\tmergedParents[k] = a_parent; // choose left\n\t\t\t\tmergedReturnStates[k] = payload;\n\t\t\t} else { // ax+ay -> a'[x,y]\n\t\t\t\tvar mergedParent = merge(a_parent, b_parent, rootIsWildcard, mergeCache);\n\t\t\t\tmergedParents[k] = mergedParent;\n\t\t\t\tmergedReturnStates[k] = payload;\n\t\t\t}\n\t\t\ti += 1; // hop over left one as usual\n\t\t\tj += 1; // but also skip one in right side since we merge\n\t\t} else if (a.returnStates[i] < b.returnStates[j]) { // copy a[i] to M\n\t\t\tmergedParents[k] = a_parent;\n\t\t\tmergedReturnStates[k] = a.returnStates[i];\n\t\t\ti += 1;\n\t\t} else { // b > a, copy b[j] to M\n\t\t\tmergedParents[k] = b_parent;\n\t\t\tmergedReturnStates[k] = b.returnStates[j];\n\t\t\tj += 1;\n\t\t}\n\t\tk += 1;\n\t}\n\t// copy over any payloads remaining in either array\n\tif (i < a.returnStates.length) {\n\t\tfor (var p = i; p < a.returnStates.length; p++) {\n\t\t\tmergedParents[k] = a.parents[p];\n\t\t\tmergedReturnStates[k] = a.returnStates[p];\n\t\t\tk += 1;\n\t\t}\n\t} else {\n\t\tfor (var p = j; p < b.returnStates.length; p++) {\n\t\t\tmergedParents[k] = b.parents[p];\n\t\t\tmergedReturnStates[k] = b.returnStates[p];\n\t\t\tk += 1;\n\t\t}\n\t}\n\t// trim merged if we combined a few that had same stack tops\n\tif (k < mergedParents.length) { // write index < last position; trim\n\t\tif (k === 1) { // for just one merged element, return singleton top\n\t\t\tvar a_ = SingletonPredictionContext.create(mergedParents[0],\n\t\t\t\t\tmergedReturnStates[0]);\n\t\t\tif (mergeCache !== null) {\n\t\t\t\tmergeCache.set(a, b, a_);\n\t\t\t}\n\t\t\treturn a_;\n\t\t}\n\t\tmergedParents = mergedParents.slice(0, k);\n\t\tmergedReturnStates = mergedReturnStates.slice(0, k);\n\t}\n\n\tvar M = new ArrayPredictionContext(mergedParents, mergedReturnStates);\n\n\t// if we created same array as a or b, return that instead\n\t// TODO: track whether this is possible above during merge sort for speed\n\tif (M === a) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, a);\n\t\t}\n\t\treturn a;\n\t}\n\tif (M === b) {\n\t\tif (mergeCache !== null) {\n\t\t\tmergeCache.set(a, b, b);\n\t\t}\n\t\treturn b;\n\t}\n\tcombineCommonParents(mergedParents);\n\n\tif (mergeCache !== null) {\n\t\tmergeCache.set(a, b, M);\n\t}\n\treturn M;\n}\n\n//\n// Make pass over all <em>M</em> {@code parents}; merge any {@code equals()}\n// ones.\n// /\nfunction combineCommonParents(parents) {\n\tvar uniqueParents = {};\n\n\tfor (var p = 0; p < parents.length; p++) {\n\t\tvar parent = parents[p];\n\t\tif (!(parent in uniqueParents)) {\n\t\t\tuniqueParents[parent] = parent;\n\t\t}\n\t}\n\tfor (var q = 0; q < parents.length; q++) {\n\t\tparents[q] = uniqueParents[parents[q]];\n\t}\n}\n\nfunction getCachedPredictionContext(context, contextCache, visited) {\n\tif (context.isEmpty()) {\n\t\treturn context;\n\t}\n\tvar existing = visited[context] || null;\n\tif (existing !== null) {\n\t\treturn existing;\n\t}\n\texisting = contextCache.get(context);\n\tif (existing !== null) {\n\t\tvisited[context] = existing;\n\t\treturn existing;\n\t}\n\tvar changed = false;\n\tvar parents = [];\n\tfor (var i = 0; i < parents.length; i++) {\n\t\tvar parent = getCachedPredictionContext(context.getParent(i), contextCache, visited);\n\t\tif (changed || parent !== context.getParent(i)) {\n\t\t\tif (!changed) {\n\t\t\t\tparents = [];\n\t\t\t\tfor (var j = 0; j < context.length; j++) {\n\t\t\t\t\tparents[j] = context.getParent(j);\n\t\t\t\t}\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tparents[i] = parent;\n\t\t}\n\t}\n\tif (!changed) {\n\t\tcontextCache.add(context);\n\t\tvisited[context] = context;\n\t\treturn context;\n\t}\n\tvar updated = null;\n\tif (parents.length === 0) {\n\t\tupdated = PredictionContext.EMPTY;\n\t} else if (parents.length === 1) {\n\t\tupdated = SingletonPredictionContext.create(parents[0], context\n\t\t\t\t.getReturnState(0));\n\t} else {\n\t\tupdated = new ArrayPredictionContext(parents, context.returnStates);\n\t}\n\tcontextCache.add(updated);\n\tvisited[updated] = updated;\n\tvisited[context] = updated;\n\n\treturn updated;\n}\n\n// ter's recursive version of Sam's getAllNodes()\nfunction getAllContextNodes(context, nodes, visited) {\n\tif (nodes === null) {\n\t\tnodes = [];\n\t\treturn getAllContextNodes(context, nodes, visited);\n\t} else if (visited === null) {\n\t\tvisited = {};\n\t\treturn getAllContextNodes(context, nodes, visited);\n\t} else {\n\t\tif (context === null || visited[context] !== null) {\n\t\t\treturn nodes;\n\t\t}\n\t\tvisited[context] = context;\n\t\tnodes.push(context);\n\t\tfor (var i = 0; i < context.length; i++) {\n\t\t\tgetAllContextNodes(context.getParent(i), nodes, visited);\n\t\t}\n\t\treturn nodes;\n\t}\n}\n\nexports.merge = merge;\nexports.PredictionContext = PredictionContext;\nexports.PredictionContextCache = PredictionContextCache;\nexports.SingletonPredictionContext = SingletonPredictionContext;\nexports.predictionContextFromRuleContext = predictionContextFromRuleContext;\nexports.getCachedPredictionContext = getCachedPredictionContext;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/PredictionContext.js\n// module id = YFoD\n// module chunks = 0 1","// removed by extract-text-webpack-plugin\n    if(module.hot) {\n      // 1514363257814\n      var cssReload = require(\"../../../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-hot-loader!./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-f646cf76\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/pagebuild/ui-lib/contract/index.vue\n// module id = avw7\n// module chunks = 0 1","// removed by extract-text-webpack-plugin\n    if(module.hot) {\n      // 1514363258495\n      var cssReload = require(\"../../../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-hot-loader!./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-f6f6185a\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/pagebuild/ui-lib/presentable-detail/index.vue\n// module id = b8+l\n// module chunks = 0 1","export default {\n    name: 'tool-bar',\n    data() {\n        return {\n            hidden: true\n        }\n    },\n    mounted() {\n        this.initHotKeyEvent()\n    },\n    methods: {\n        //ctrl+T唤起工具栏\n        initHotKeyEvent() {\n            var keyCodes = {\n                ctrl: 17,\n                T: 84\n            };\n            var keydown = {}\n            var self = this;\n            var isCtrlT = (keyCode) => (keyCodes.ctrl === keyCode || keyCodes.T === keyCode)\n            window.addEventListener('keydown', function (ev) {\n                if (isCtrlT(ev.keyCode)) {\n                    keydown[ev.keyCode] = true\n                    if (keydown[keyCodes.ctrl] && keydown[keyCodes.T]) {\n                        self.toggleToolBar()\n                        keydown = {}\n                    }\n                }\n            })\n\n            window.addEventListener('keyup', function (ev) {\n                if (isCtrlT(ev.keyCode)) {\n                    keydown[ev.keyCode] = false\n                }\n            })\n        },\n        showAuthDialog() {\n            window.FreeLogApp.trigger(window.FreeLogApp.EventCode.showSystemDialog, {\n                callback: function () {\n                    console.log('close dialog@toolbar')\n                }\n            })\n        },\n        toggleToolBar() {\n            this.hidden = !this.hidden\n        },\n        show() {\n            this.hidden = false\n        },\n        hide() {\n            this.hidden = true\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/toolbar/index.js","<template>\n    <ul class=\"tool-bar-wrap\" v-show=\"!hidden\" @keyup.ctrl.84=\"toggleToolBar\">\n        <li class=\"user-tab\" title=\"个人中心\"><a href=\"/pages/user/index.html\" target=\"_blank\"><i class=\"el-icon-fa-user\" aria-hidden=\"true\"></i></a></li>\n        <li class=\"contract-tab\" @click=\"showAuthDialog\" title=\"合同管理\"><i class=\"el-icon-document\"></i></li>\n    </ul>\n</template>\n\n<script>\n    import ToolBar from './index'\n    export default ToolBar\n</script>\n\n<style lang=\"less\" scoped>\n@import \"index.less\";\n\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/toolbar/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.hidden),expression:\"!hidden\"}],staticClass:\"tool-bar-wrap\",on:{\"keyup\":function($event){if(!('button' in $event)&&$event.keyCode!==84){ return null; }if(!$event.ctrlKey){ return null; }_vm.toggleToolBar($event)}}},[_vm._m(0,false,false),_vm._v(\" \"),_c('li',{staticClass:\"contract-tab\",attrs:{\"title\":\"合同管理\"},on:{\"click\":_vm.showAuthDialog}},[_c('i',{staticClass:\"el-icon-document\"})])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"user-tab\",attrs:{\"title\":\"个人中心\"}},[_c('a',{attrs:{\"href\":\"/pages/user/index.html\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"el-icon-fa-user\",attrs:{\"aria-hidden\":\"true\"}})])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1bb67677\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/toolbar/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!css-hot-loader!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!style-loader!css-loader!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1bb67677\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!postcss-loader!less-loader!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1bb67677\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1bb67677\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/toolbar/index.vue\n// module id = null\n// module chunks = ","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\nvar DFAState = require('./../dfa/DFAState').DFAState;\nvar ATNConfigSet = require('./ATNConfigSet').ATNConfigSet;\nvar getCachedPredictionContext = require('./../PredictionContext').getCachedPredictionContext;\n\nfunction ATNSimulator(atn, sharedContextCache) {\n\n    // The context cache maps all PredictionContext objects that are ==\n    //  to a single cached copy. This cache is shared across all contexts\n    //  in all ATNConfigs in all DFA states.  We rebuild each ATNConfigSet\n    //  to use only cached nodes/graphs in addDFAState(). We don't want to\n    //  fill this during closure() since there are lots of contexts that\n    //  pop up but are not used ever again. It also greatly slows down closure().\n    //\n    //  <p>This cache makes a huge difference in memory and a little bit in speed.\n    //  For the Java grammar on java.*, it dropped the memory requirements\n    //  at the end from 25M to 16M. We don't store any of the full context\n    //  graphs in the DFA because they are limited to local context only,\n    //  but apparently there's a lot of repetition there as well. We optimize\n    //  the config contexts before storing the config set in the DFA states\n    //  by literally rebuilding them with cached subgraphs only.</p>\n    //\n    //  <p>I tried a cache for use during closure operations, that was\n    //  whacked after each adaptivePredict(). It cost a little bit\n    //  more time I think and doesn't save on the overall footprint\n    //  so it's not worth the complexity.</p>\n    ///\n    this.atn = atn;\n    this.sharedContextCache = sharedContextCache;\n    return this;\n}\n\n// Must distinguish between missing edge and edge we know leads nowhere///\nATNSimulator.ERROR = new DFAState(0x7FFFFFFF, new ATNConfigSet());\n\n\nATNSimulator.prototype.getCachedContext = function(context) {\n    if (this.sharedContextCache ===null) {\n        return context;\n    }\n    var visited = {};\n    return getCachedPredictionContext(context, this.sharedContextCache, visited);\n};\n\nexports.ATNSimulator = ATNSimulator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNSimulator.js\n// module id = bcvg\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nfunction arrayToString(a) {\n    return \"[\" + a.join(\", \") + \"]\";\n}\n\nString.prototype.seed = String.prototype.seed || Math.round(Math.random() * Math.pow(2, 32));\n\nString.prototype.hashCode = function () {\n    var remainder, bytes, h1, h1b, c1, c1b, c2, c2b, k1, i,\n        key = this.toString();\n\n    remainder = key.length & 3; // key.length % 4\n    bytes = key.length - remainder;\n    h1 = String.prototype.seed;\n    c1 = 0xcc9e2d51;\n    c2 = 0x1b873593;\n    i = 0;\n\n    while (i < bytes) {\n        k1 =\n            ((key.charCodeAt(i) & 0xff)) |\n            ((key.charCodeAt(++i) & 0xff) << 8) |\n            ((key.charCodeAt(++i) & 0xff) << 16) |\n            ((key.charCodeAt(++i) & 0xff) << 24);\n        ++i;\n\n        k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n        h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n    }\n\n    k1 = 0;\n\n    switch (remainder) {\n        case 3:\n            k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n        case 2:\n            k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n        case 1:\n            k1 ^= (key.charCodeAt(i) & 0xff);\n\n            k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n            h1 ^= k1;\n    }\n\n    h1 ^= key.length;\n\n    h1 ^= h1 >>> 16;\n    h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n    h1 ^= h1 >>> 13;\n    h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n    h1 ^= h1 >>> 16;\n\n    return h1 >>> 0;\n};\n\nfunction standardEqualsFunction(a, b) {\n    return a.equals(b);\n}\n\nfunction standardHashCodeFunction(a) {\n    return a.hashCode();\n}\n\nfunction Set(hashFunction, equalsFunction) {\n    this.data = {};\n    this.hashFunction = hashFunction || standardHashCodeFunction;\n    this.equalsFunction = equalsFunction || standardEqualsFunction;\n    return this;\n}\n\nObject.defineProperty(Set.prototype, \"length\", {\n    get: function () {\n        var l = 0;\n        for (var key in this.data) {\n            if (key.indexOf(\"hash_\") === 0) {\n                l = l + this.data[key].length;\n            }\n        }\n        return l;\n    }\n});\n\nSet.prototype.add = function (value) {\n    var hash = this.hashFunction(value);\n    var key = \"hash_\" + hash;\n    if (key in this.data) {\n        var values = this.data[key];\n        for (var i = 0; i < values.length; i++) {\n            if (this.equalsFunction(value, values[i])) {\n                return values[i];\n            }\n        }\n        values.push(value);\n        return value;\n    } else {\n        this.data[key] = [value];\n        return value;\n    }\n};\n\nSet.prototype.contains = function (value) {\n    return this.get(value) != null;\n};\n\nSet.prototype.get = function (value) {\n    var hash = this.hashFunction(value);\n    var key = \"hash_\" + hash;\n    if (key in this.data) {\n        var values = this.data[key];\n        for (var i = 0; i < values.length; i++) {\n            if (this.equalsFunction(value, values[i])) {\n                return values[i];\n            }\n        }\n    }\n    return null;\n};\n\nSet.prototype.values = function () {\n    var l = [];\n    for (var key in this.data) {\n        if (key.indexOf(\"hash_\") === 0) {\n            l = l.concat(this.data[key]);\n        }\n    }\n    return l;\n};\n\nSet.prototype.toString = function () {\n    return arrayToString(this.values());\n};\n\nfunction BitSet() {\n    this.data = [];\n    return this;\n}\n\nBitSet.prototype.add = function (value) {\n    this.data[value] = true;\n};\n\nBitSet.prototype.or = function (set) {\n    var bits = this;\n    Object.keys(set.data).map(function (alt) {\n        bits.add(alt);\n    });\n};\n\nBitSet.prototype.remove = function (value) {\n    delete this.data[value];\n};\n\nBitSet.prototype.contains = function (value) {\n    return this.data[value] === true;\n};\n\nBitSet.prototype.values = function () {\n    return Object.keys(this.data);\n};\n\nBitSet.prototype.minValue = function () {\n    return Math.min.apply(null, this.values());\n};\n\nBitSet.prototype.hashCode = function () {\n    var hash = new Hash();\n    hash.update(this.values());\n    return hash.finish();\n};\n\nBitSet.prototype.equals = function (other) {\n    if (!(other instanceof BitSet)) {\n        return false;\n    }\n    return this.hashCode() === other.hashCode();\n};\n\nObject.defineProperty(BitSet.prototype, \"length\", {\n    get: function () {\n        return this.values().length;\n    }\n});\n\nBitSet.prototype.toString = function () {\n    return \"{\" + this.values().join(\", \") + \"}\";\n};\n\nfunction Map(hashFunction, equalsFunction) {\n    this.data = {};\n    this.hashFunction = hashFunction || standardHashCodeFunction;\n    this.equalsFunction = equalsFunction || standardEqualsFunction;\n    return this;\n}\n\nObject.defineProperty(Map.prototype, \"length\", {\n    get: function () {\n        var l = 0;\n        for (var hashKey in this.data) {\n            if (hashKey.indexOf(\"hash_\") === 0) {\n                l = l + this.data[hashKey].length;\n            }\n        }\n        return l;\n    }\n});\n\nMap.prototype.put = function (key, value) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if (hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key)) {\n                var oldValue = entry.value;\n                entry.value = value;\n                return oldValue;\n            }\n        }\n        entries.push({key:key, value:value});\n        return value;\n    } else {\n        this.data[hashKey] = [{key:key, value:value}];\n        return value;\n    }\n};\n\nMap.prototype.containsKey = function (key) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if(hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key))\n                return true;\n        }\n    }\n    return false;\n};\n\nMap.prototype.get = function (key) {\n    var hashKey = \"hash_\" + this.hashFunction(key);\n    if(hashKey in this.data) {\n        var entries = this.data[hashKey];\n        for (var i = 0; i < entries.length; i++) {\n            var entry = entries[i];\n            if (this.equalsFunction(key, entry.key))\n                return entry.value;\n        }\n    }\n    return null;\n};\n\nMap.prototype.entries = function () {\n    var l = [];\n    for (var key in this.data) {\n        if (key.indexOf(\"hash_\") === 0) {\n            l = l.concat(this.data[key]);\n        }\n    }\n    return l;\n};\n\n\nMap.prototype.getKeys = function () {\n    return this.entries().map(function(e) {\n        return e.key;\n    });\n};\n\n\nMap.prototype.getValues = function () {\n    return this.entries().map(function(e) {\n            return e.value;\n    });\n};\n\n\nMap.prototype.toString = function () {\n    var ss = this.entries().map(function(entry) {\n        return '{' + entry.key + ':' + entry.value + '}';\n    });\n    return '[' + ss.join(\", \") + ']';\n};\n\n\nfunction AltDict() {\n    this.data = {};\n    return this;\n}\n\n\nAltDict.prototype.get = function (key) {\n    key = \"k-\" + key;\n    if (key in this.data) {\n        return this.data[key];\n    } else {\n        return null;\n    }\n};\n\nAltDict.prototype.put = function (key, value) {\n    key = \"k-\" + key;\n    this.data[key] = value;\n};\n\nAltDict.prototype.values = function () {\n    var data = this.data;\n    var keys = Object.keys(this.data);\n    return keys.map(function (key) {\n        return data[key];\n    });\n};\n\nfunction DoubleDict() {\n    return this;\n}\n\nfunction Hash() {\n    this.count = 0;\n    this.hash = 0;\n    return this;\n}\n\nHash.prototype.update = function () {\n    for(var i=0;i<arguments.length;i++) {\n        var value = arguments[i];\n        if (value == null)\n            continue;\n        if(Array.isArray(value))\n            this.update.apply(value);\n        else {\n            var k = 0;\n            switch (typeof(value)) {\n                case 'undefined':\n                case 'function':\n                    continue;\n                case 'number':\n                case 'boolean':\n                    k = value;\n                    break;\n                case 'string':\n                    k = value.hashCode();\n                    break;\n                default:\n                    value.updateHashCode(this);\n                    continue;\n            }\n            k = k * 0xCC9E2D51;\n            k = (k << 15) | (k >>> (32 - 15));\n            k = k * 0x1B873593;\n            this.count = this.count + 1;\n            var hash = this.hash ^ k;\n            hash = (hash << 13) | (hash >>> (32 - 13));\n            hash = hash * 5 + 0xE6546B64;\n            this.hash = hash;\n        }\n    }\n}\n\nHash.prototype.finish = function () {\n    var hash = this.hash ^ (this.count * 4);\n    hash = hash ^ (hash >>> 16);\n    hash = hash * 0x85EBCA6B;\n    hash = hash ^ (hash >>> 13);\n    hash = hash * 0xC2B2AE35;\n    hash = hash ^ (hash >>> 16);\n    return hash;\n}\n\nfunction hashStuff() {\n    var hash = new Hash();\n    hash.update.apply(arguments);\n    return hash.finish();\n}\n\nDoubleDict.prototype.get = function (a, b) {\n    var d = this[a] || null;\n    return d === null ? null : (d[b] || null);\n};\n\nDoubleDict.prototype.set = function (a, b, o) {\n    var d = this[a] || null;\n    if (d === null) {\n        d = {};\n        this[a] = d;\n    }\n    d[b] = o;\n};\n\n\nfunction escapeWhitespace(s, escapeSpaces) {\n    s = s.replace(/\\t/g, \"\\\\t\")\n         .replace(/\\n/g, \"\\\\n\")\n         .replace(/\\r/g, \"\\\\r\");\n    if (escapeSpaces) {\n        s = s.replace(/ /g, \"\\u00B7\");\n    }\n    return s;\n}\n\nfunction titleCase(str) {\n    return str.replace(/\\w\\S*/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1);\n    });\n};\n\nfunction equalArrays(a, b)\n{\n    if (!Array.isArray(a) || !Array.isArray(b))\n        return false;\n    if (a == b)\n        return true;\n    if (a.length != b.length)\n        return false;\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] == b[i])\n            continue;\n        if (!a[i].equals(b[i]))\n            return false;\n    }\n    return true;\n};\n\nexports.Hash = Hash;\nexports.Set = Set;\nexports.Map = Map;\nexports.BitSet = BitSet;\nexports.AltDict = AltDict;\nexports.DoubleDict = DoubleDict;\nexports.hashStuff = hashStuff;\nexports.escapeWhitespace = escapeWhitespace;\nexports.arrayToString = arrayToString;\nexports.titleCase = titleCase;\nexports.equalArrays = equalArrays;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/Utils.js\n// module id = bz+k\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// A lexer is recognizer that draws input symbols from a character stream.\n//  lexer grammars result in a subclass of this object. A Lexer object\n//  uses simplified match() and error recovery mechanisms in the interest of speed.\n\nvar Token = require('./Token').Token;\nvar Recognizer = require('./Recognizer').Recognizer;\nvar CommonTokenFactory = require('./CommonTokenFactory').CommonTokenFactory;\nvar RecognitionException  = require('./error/Errors').RecognitionException;\nvar LexerNoViableAltException = require('./error/Errors').LexerNoViableAltException;\n\nfunction TokenSource() {\n\treturn this;\n}\n\nfunction Lexer(input) {\n\tRecognizer.call(this);\n\tthis._input = input;\n\tthis._factory = CommonTokenFactory.DEFAULT;\n\tthis._tokenFactorySourcePair = [ this, input ];\n\n\tthis._interp = null; // child classes must populate this\n\n\t// The goal of all lexer rules/methods is to create a token object.\n\t// this is an instance variable as multiple rules may collaborate to\n\t// create a single token. nextToken will return this object after\n\t// matching lexer rule(s). If you subclass to allow multiple token\n\t// emissions, then set this to the last token to be matched or\n\t// something nonnull so that the auto token emit mechanism will not\n\t// emit another token.\n\tthis._token = null;\n\n\t// What character index in the stream did the current token start at?\n\t// Needed, for example, to get the text for current token. Set at\n\t// the start of nextToken.\n\tthis._tokenStartCharIndex = -1;\n\n\t// The line on which the first character of the token resides///\n\tthis._tokenStartLine = -1;\n\n\t// The character position of first character within the line///\n\tthis._tokenStartColumn = -1;\n\n\t// Once we see EOF on char stream, next token will be EOF.\n\t// If you have DONE : EOF ; then you see DONE EOF.\n\tthis._hitEOF = false;\n\n\t// The channel number for the current token///\n\tthis._channel = Token.DEFAULT_CHANNEL;\n\n\t// The token type for the current token///\n\tthis._type = Token.INVALID_TYPE;\n\n\tthis._modeStack = [];\n\tthis._mode = Lexer.DEFAULT_MODE;\n\n\t// You can set the text for the current token to override what is in\n\t// the input char buffer. Use setText() or can set this instance var.\n\t// /\n\tthis._text = null;\n\n\treturn this;\n}\n\nLexer.prototype = Object.create(Recognizer.prototype);\nLexer.prototype.constructor = Lexer;\n\nLexer.DEFAULT_MODE = 0;\nLexer.MORE = -2;\nLexer.SKIP = -3;\n\nLexer.DEFAULT_TOKEN_CHANNEL = Token.DEFAULT_CHANNEL;\nLexer.HIDDEN = Token.HIDDEN_CHANNEL;\nLexer.MIN_CHAR_VALUE = 0x0000;\nLexer.MAX_CHAR_VALUE = 0x10FFFF;\n\nLexer.prototype.reset = function() {\n\t// wack Lexer state variables\n\tif (this._input !== null) {\n\t\tthis._input.seek(0); // rewind the input\n\t}\n\tthis._token = null;\n\tthis._type = Token.INVALID_TYPE;\n\tthis._channel = Token.DEFAULT_CHANNEL;\n\tthis._tokenStartCharIndex = -1;\n\tthis._tokenStartColumn = -1;\n\tthis._tokenStartLine = -1;\n\tthis._text = null;\n\n\tthis._hitEOF = false;\n\tthis._mode = Lexer.DEFAULT_MODE;\n\tthis._modeStack = [];\n\n\tthis._interp.reset();\n};\n\n// Return a token from this source; i.e., match a token on the char stream.\nLexer.prototype.nextToken = function() {\n\tif (this._input === null) {\n\t\tthrow \"nextToken requires a non-null input stream.\";\n\t}\n\n\t// Mark start location in char stream so unbuffered streams are\n\t// guaranteed at least have text of current token\n\tvar tokenStartMarker = this._input.mark();\n\ttry {\n\t\twhile (true) {\n\t\t\tif (this._hitEOF) {\n\t\t\t\tthis.emitEOF();\n\t\t\t\treturn this._token;\n\t\t\t}\n\t\t\tthis._token = null;\n\t\t\tthis._channel = Token.DEFAULT_CHANNEL;\n\t\t\tthis._tokenStartCharIndex = this._input.index;\n\t\t\tthis._tokenStartColumn = this._interp.column;\n\t\t\tthis._tokenStartLine = this._interp.line;\n\t\t\tthis._text = null;\n\t\t\tvar continueOuter = false;\n\t\t\twhile (true) {\n\t\t\t\tthis._type = Token.INVALID_TYPE;\n\t\t\t\tvar ttype = Lexer.SKIP;\n\t\t\t\ttry {\n\t\t\t\t\tttype = this._interp.match(this._input, this._mode);\n\t\t\t\t} catch (e) {\n\t\t\t\t    if(e instanceof RecognitionException) {\n                        this.notifyListeners(e); // report error\n                        this.recover(e);\n                    } else {\n                        console.log(e.stack);\n                        throw e;\n                    }\n\t\t\t\t}\n\t\t\t\tif (this._input.LA(1) === Token.EOF) {\n\t\t\t\t\tthis._hitEOF = true;\n\t\t\t\t}\n\t\t\t\tif (this._type === Token.INVALID_TYPE) {\n\t\t\t\t\tthis._type = ttype;\n\t\t\t\t}\n\t\t\t\tif (this._type === Lexer.SKIP) {\n\t\t\t\t\tcontinueOuter = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (this._type !== Lexer.MORE) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (continueOuter) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._token === null) {\n\t\t\t\tthis.emit();\n\t\t\t}\n\t\t\treturn this._token;\n\t\t}\n\t} finally {\n\t\t// make sure we release marker after match or\n\t\t// unbuffered char stream will keep buffering\n\t\tthis._input.release(tokenStartMarker);\n\t}\n};\n\n// Instruct the lexer to skip creating a token for current lexer rule\n// and look for another token. nextToken() knows to keep looking when\n// a lexer rule finishes with token set to SKIP_TOKEN. Recall that\n// if token==null at end of any token rule, it creates one for you\n// and emits it.\n// /\nLexer.prototype.skip = function() {\n\tthis._type = Lexer.SKIP;\n};\n\nLexer.prototype.more = function() {\n\tthis._type = Lexer.MORE;\n};\n\nLexer.prototype.mode = function(m) {\n\tthis._mode = m;\n};\n\nLexer.prototype.pushMode = function(m) {\n\tif (this._interp.debug) {\n\t\tconsole.log(\"pushMode \" + m);\n\t}\n\tthis._modeStack.push(this._mode);\n\tthis.mode(m);\n};\n\nLexer.prototype.popMode = function() {\n\tif (this._modeStack.length === 0) {\n\t\tthrow \"Empty Stack\";\n\t}\n\tif (this._interp.debug) {\n\t\tconsole.log(\"popMode back to \" + this._modeStack.slice(0, -1));\n\t}\n\tthis.mode(this._modeStack.pop());\n\treturn this._mode;\n};\n\n// Set the char stream and reset the lexer\nObject.defineProperty(Lexer.prototype, \"inputStream\", {\n\tget : function() {\n\t\treturn this._input;\n\t},\n\tset : function(input) {\n\t\tthis._input = null;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t\tthis.reset();\n\t\tthis._input = input;\n\t\tthis._tokenFactorySourcePair = [ this, this._input ];\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"sourceName\", {\n\tget : function sourceName() {\n\t\treturn this._input.sourceName;\n\t}\n});\n\n// By default does not support multiple emits per nextToken invocation\n// for efficiency reasons. Subclass and override this method, nextToken,\n// and getToken (to push tokens into a list and pull from that list\n// rather than a single variable as this implementation does).\n// /\nLexer.prototype.emitToken = function(token) {\n\tthis._token = token;\n};\n\n// The standard method called to automatically emit a token at the\n// outermost lexical rule. The token object should point into the\n// char buffer start..stop. If there is a text override in 'text',\n// use that to set the token's text. Override this method to emit\n// custom Token objects or provide a new factory.\n// /\nLexer.prototype.emit = function() {\n\tvar t = this._factory.create(this._tokenFactorySourcePair, this._type,\n\t\t\tthis._text, this._channel, this._tokenStartCharIndex, this\n\t\t\t\t\t.getCharIndex() - 1, this._tokenStartLine,\n\t\t\tthis._tokenStartColumn);\n\tthis.emitToken(t);\n\treturn t;\n};\n\nLexer.prototype.emitEOF = function() {\n\tvar cpos = this.column;\n\tvar lpos = this.line;\n\tvar eof = this._factory.create(this._tokenFactorySourcePair, Token.EOF,\n\t\t\tnull, Token.DEFAULT_CHANNEL, this._input.index,\n\t\t\tthis._input.index - 1, lpos, cpos);\n\tthis.emitToken(eof);\n\treturn eof;\n};\n\nObject.defineProperty(Lexer.prototype, \"type\", {\n\tget : function() {\n\t\treturn this.type;\n\t},\n\tset : function(type) {\n\t\tthis._type = type;\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"line\", {\n\tget : function() {\n\t\treturn this._interp.line;\n\t},\n\tset : function(line) {\n\t\tthis._interp.line = line;\n\t}\n});\n\nObject.defineProperty(Lexer.prototype, \"column\", {\n\tget : function() {\n\t\treturn this._interp.column;\n\t},\n\tset : function(column) {\n\t\tthis._interp.column = column;\n\t}\n});\n\n\n// What is the index of the current character of lookahead?///\nLexer.prototype.getCharIndex = function() {\n\treturn this._input.index;\n};\n\n// Return the text matched so far for the current token or any text override.\n//Set the complete text of this token; it wipes any previous changes to the text.\nObject.defineProperty(Lexer.prototype, \"text\", {\n\tget : function() {\n\t\tif (this._text !== null) {\n\t\t\treturn this._text;\n\t\t} else {\n\t\t\treturn this._interp.getText(this._input);\n\t\t}\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n// Return a list of all Token objects in input char stream.\n// Forces load of all tokens. Does not include EOF token.\n// /\nLexer.prototype.getAllTokens = function() {\n\tvar tokens = [];\n\tvar t = this.nextToken();\n\twhile (t.type !== Token.EOF) {\n\t\ttokens.push(t);\n\t\tt = this.nextToken();\n\t}\n\treturn tokens;\n};\n\nLexer.prototype.notifyListeners = function(e) {\n\tvar start = this._tokenStartCharIndex;\n\tvar stop = this._input.index;\n\tvar text = this._input.getText(start, stop);\n\tvar msg = \"token recognition error at: '\" + this.getErrorDisplay(text) + \"'\";\n\tvar listener = this.getErrorListenerDispatch();\n\tlistener.syntaxError(this, null, this._tokenStartLine,\n\t\t\tthis._tokenStartColumn, msg, e);\n};\n\nLexer.prototype.getErrorDisplay = function(s) {\n\tvar d = [];\n\tfor (var i = 0; i < s.length; i++) {\n\t\td.push(s[i]);\n\t}\n\treturn d.join('');\n};\n\nLexer.prototype.getErrorDisplayForChar = function(c) {\n\tif (c.charCodeAt(0) === Token.EOF) {\n\t\treturn \"<EOF>\";\n\t} else if (c === '\\n') {\n\t\treturn \"\\\\n\";\n\t} else if (c === '\\t') {\n\t\treturn \"\\\\t\";\n\t} else if (c === '\\r') {\n\t\treturn \"\\\\r\";\n\t} else {\n\t\treturn c;\n\t}\n};\n\nLexer.prototype.getCharErrorDisplay = function(c) {\n\treturn \"'\" + this.getErrorDisplayForChar(c) + \"'\";\n};\n\n// Lexers can normally match any char in it's vocabulary after matching\n// a token, so do the easy thing and just kill a character and hope\n// it all works out. You can instead use the rule invocation stack\n// to do sophisticated error recovery if you are in a fragment rule.\n// /\nLexer.prototype.recover = function(re) {\n\tif (this._input.LA(1) !== Token.EOF) {\n\t\tif (re instanceof LexerNoViableAltException) {\n\t\t\t// skip a char and try again\n\t\t\tthis._interp.consume(this._input);\n\t\t} else {\n\t\t\t// TODO: Do we lose character or line position information?\n\t\t\tthis._input.consume();\n\t\t}\n\t}\n};\n\nexports.Lexer = Lexer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/Lexer.js\n// module id = h0lj\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// A DFA walker that knows how to dump them to serialized strings.#/\n\n\nfunction DFASerializer(dfa, literalNames, symbolicNames) {\n\tthis.dfa = dfa;\n\tthis.literalNames = literalNames || [];\n\tthis.symbolicNames = symbolicNames || [];\n\treturn this;\n}\n\nDFASerializer.prototype.toString = function() {\n   if(this.dfa.s0 === null) {\n       return null;\n   }\n   var buf = \"\";\n   var states = this.dfa.sortedStates();\n   for(var i=0;i<states.length;i++) {\n       var s = states[i];\n       if(s.edges!==null) {\n            var n = s.edges.length;\n            for(var j=0;j<n;j++) {\n                var t = s.edges[j] || null;\n                if(t!==null && t.stateNumber !== 0x7FFFFFFF) {\n                    buf = buf.concat(this.getStateString(s));\n                    buf = buf.concat(\"-\");\n                    buf = buf.concat(this.getEdgeLabel(j));\n                    buf = buf.concat(\"->\");\n                    buf = buf.concat(this.getStateString(t));\n                    buf = buf.concat('\\n');\n                }\n            }\n       }\n   }\n   return buf.length===0 ? null : buf;\n};\n\nDFASerializer.prototype.getEdgeLabel = function(i) {\n    if (i===0) {\n        return \"EOF\";\n    } else if(this.literalNames !==null || this.symbolicNames!==null) {\n        return this.literalNames[i-1] || this.symbolicNames[i-1];\n    } else {\n        return String.fromCharCode(i-1);\n    }\n};\n\nDFASerializer.prototype.getStateString = function(s) {\n    var baseStateStr = ( s.isAcceptState ? \":\" : \"\") + \"s\" + s.stateNumber + ( s.requiresFullContext ? \"^\" : \"\");\n    if(s.isAcceptState) {\n        if (s.predicates !== null) {\n            return baseStateStr + \"=>\" + s.predicates.toString();\n        } else {\n            return baseStateStr + \"=>\" + s.prediction.toString();\n        }\n    } else {\n        return baseStateStr;\n    }\n};\n\nfunction LexerDFASerializer(dfa) {\n\tDFASerializer.call(this, dfa, null);\n\treturn this;\n}\n\nLexerDFASerializer.prototype = Object.create(DFASerializer.prototype);\nLexerDFASerializer.prototype.constructor = LexerDFASerializer;\n\nLexerDFASerializer.prototype.getEdgeLabel = function(i) {\n\treturn \"'\" + String.fromCharCode(i) + \"'\";\n};\n\nexports.DFASerializer = DFASerializer;\nexports.LexerDFASerializer = LexerDFASerializer;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/dfa/DFASerializer.js\n// module id = hL6x\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nfunction ATNDeserializationOptions(copyFrom) {\n\tif(copyFrom===undefined) {\n\t\tcopyFrom = null;\n\t}\n\tthis.readOnly = false;\n    this.verifyATN = copyFrom===null ? true : copyFrom.verifyATN;\n    this.generateRuleBypassTransitions = copyFrom===null ? false : copyFrom.generateRuleBypassTransitions;\n\n    return this;\n}\n\nATNDeserializationOptions.defaultOptions = new ATNDeserializationOptions();\nATNDeserializationOptions.defaultOptions.readOnly = true;\n\n//    def __setattr__(self, key, value):\n//        if key!=\"readOnly\" and self.readOnly:\n//            raise Exception(\"The object is read only.\")\n//        super(type(self), self).__setattr__(key,value)\n\nexports.ATNDeserializationOptions = ATNDeserializationOptions;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNDeserializationOptions.js\n// module id = hs4g\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// A token has properties: text, type, line, character position in the line\n// (so we can ignore tabs), token channel, index, and source from which\n// we obtained this token.\n\nfunction Token() {\n\tthis.source = null;\n\tthis.type = null; // token type of the token\n\tthis.channel = null; // The parser ignores everything not on DEFAULT_CHANNEL\n\tthis.start = null; // optional; return -1 if not implemented.\n\tthis.stop = null; // optional; return -1 if not implemented.\n\tthis.tokenIndex = null; // from 0..n-1 of the token object in the input stream\n\tthis.line = null; // line=1..n of the 1st character\n\tthis.column = null; // beginning of the line at which it occurs, 0..n-1\n\tthis._text = null; // text of the token.\n\treturn this;\n}\n\nToken.INVALID_TYPE = 0;\n\n// During lookahead operations, this \"token\" signifies we hit rule end ATN state\n// and did not follow it despite needing to.\nToken.EPSILON = -2;\n\nToken.MIN_USER_TOKEN_TYPE = 1;\n\nToken.EOF = -1;\n\n// All tokens go to the parser (unless skip() is called in that rule)\n// on a particular \"channel\". The parser tunes to a particular channel\n// so that whitespace etc... can go to the parser on a \"hidden\" channel.\n\nToken.DEFAULT_CHANNEL = 0;\n\n// Anything on different channel than DEFAULT_CHANNEL is not parsed\n// by parser.\n\nToken.HIDDEN_CHANNEL = 1;\n\n// Explicitly set the text for this token. If {code text} is not\n// {@code null}, then {@link //getText} will return this value rather than\n// extracting the text from the input.\n//\n// @param text The explicit text of the token, or {@code null} if the text\n// should be obtained from the input along with the start and stop indexes\n// of the token.\n\nObject.defineProperty(Token.prototype, \"text\", {\n\tget : function() {\n\t\treturn this._text;\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n\nToken.prototype.getTokenSource = function() {\n\treturn this.source[0];\n};\n\nToken.prototype.getInputStream = function() {\n\treturn this.source[1];\n};\n\nfunction CommonToken(source, type, channel, start, stop) {\n\tToken.call(this);\n\tthis.source = source !== undefined ? source : CommonToken.EMPTY_SOURCE;\n\tthis.type = type !== undefined ? type : null;\n\tthis.channel = channel !== undefined ? channel : Token.DEFAULT_CHANNEL;\n\tthis.start = start !== undefined ? start : -1;\n\tthis.stop = stop !== undefined ? stop : -1;\n\tthis.tokenIndex = -1;\n\tif (this.source[0] !== null) {\n\t\tthis.line = source[0].line;\n\t\tthis.column = source[0].column;\n\t} else {\n\t\tthis.column = -1;\n\t}\n\treturn this;\n}\n\nCommonToken.prototype = Object.create(Token.prototype);\nCommonToken.prototype.constructor = CommonToken;\n\n// An empty {@link Pair} which is used as the default value of\n// {@link //source} for tokens that do not have a source.\nCommonToken.EMPTY_SOURCE = [ null, null ];\n\n// Constructs a new {@link CommonToken} as a copy of another {@link Token}.\n//\n// <p>\n// If {@code oldToken} is also a {@link CommonToken} instance, the newly\n// constructed token will share a reference to the {@link //text} field and\n// the {@link Pair} stored in {@link //source}. Otherwise, {@link //text} will\n// be assigned the result of calling {@link //getText}, and {@link //source}\n// will be constructed from the result of {@link Token//getTokenSource} and\n// {@link Token//getInputStream}.</p>\n//\n// @param oldToken The token to copy.\n//\nCommonToken.prototype.clone = function() {\n\tvar t = new CommonToken(this.source, this.type, this.channel, this.start,\n\t\t\tthis.stop);\n\tt.tokenIndex = this.tokenIndex;\n\tt.line = this.line;\n\tt.column = this.column;\n\tt.text = this.text;\n\treturn t;\n};\n\nObject.defineProperty(CommonToken.prototype, \"text\", {\n\tget : function() {\n\t\tif (this._text !== null) {\n\t\t\treturn this._text;\n\t\t}\n\t\tvar input = this.getInputStream();\n\t\tif (input === null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar n = input.size;\n\t\tif (this.start < n && this.stop < n) {\n\t\t\treturn input.getText(this.start, this.stop);\n\t\t} else {\n\t\t\treturn \"<EOF>\";\n\t\t}\n\t},\n\tset : function(text) {\n\t\tthis._text = text;\n\t}\n});\n\nCommonToken.prototype.toString = function() {\n\tvar txt = this.text;\n\tif (txt !== null) {\n\t\ttxt = txt.replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/\\t/g, \"\\\\t\");\n\t} else {\n\t\ttxt = \"<no text>\";\n\t}\n\treturn \"[@\" + this.tokenIndex + \",\" + this.start + \":\" + this.stop + \"='\" +\n\t\t\ttxt + \"',<\" + this.type + \">\" +\n\t\t\t(this.channel > 0 ? \",channel=\" + this.channel : \"\") + \",\" +\n\t\t\tthis.line + \":\" + this.column + \"]\";\n};\n\nexports.Token = Token;\nexports.CommonToken = CommonToken;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/Token.js\n// module id = j/5l\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// The following images show the relation of states and\n// {@link ATNState//transitions} for various grammar constructs.\n//\n// <ul>\n//\n// <li>Solid edges marked with an &//0949; indicate a required\n// {@link EpsilonTransition}.</li>\n//\n// <li>Dashed edges indicate locations where any transition derived from\n// {@link Transition} might appear.</li>\n//\n// <li>Dashed nodes are place holders for either a sequence of linked\n// {@link BasicState} states or the inclusion of a block representing a nested\n// construct in one of the forms below.</li>\n//\n// <li>Nodes showing multiple outgoing alternatives with a {@code ...} support\n// any number of alternatives (one or more). Nodes without the {@code ...} only\n// support the exact number of alternatives shown in the diagram.</li>\n//\n// </ul>\n//\n// <h2>Basic Blocks</h2>\n//\n// <h3>Rule</h3>\n//\n// <embed src=\"images/Rule.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Block of 1 or more alternatives</h3>\n//\n// <embed src=\"images/Block.svg\" type=\"image/svg+xml\"/>\n//\n// <h2>Greedy Loops</h2>\n//\n// <h3>Greedy Closure: {@code (...)*}</h3>\n//\n// <embed src=\"images/ClosureGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Greedy Positive Closure: {@code (...)+}</h3>\n//\n// <embed src=\"images/PositiveClosureGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Greedy Optional: {@code (...)?}</h3>\n//\n// <embed src=\"images/OptionalGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h2>Non-Greedy Loops</h2>\n//\n// <h3>Non-Greedy Closure: {@code (...)*?}</h3>\n//\n// <embed src=\"images/ClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Non-Greedy Positive Closure: {@code (...)+?}</h3>\n//\n// <embed src=\"images/PositiveClosureNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n// <h3>Non-Greedy Optional: {@code (...)??}</h3>\n//\n// <embed src=\"images/OptionalNonGreedy.svg\" type=\"image/svg+xml\"/>\n//\n\nvar INITIAL_NUM_TRANSITIONS = 4;\n\nfunction ATNState() {\n    // Which ATN are we in?\n    this.atn = null;\n    this.stateNumber = ATNState.INVALID_STATE_NUMBER;\n    this.stateType = null;\n    this.ruleIndex = 0; // at runtime, we don't have Rule objects\n    this.epsilonOnlyTransitions = false;\n    // Track the transitions emanating from this ATN state.\n    this.transitions = [];\n    // Used to cache lookahead during parsing, not used during construction\n    this.nextTokenWithinRule = null;\n    return this;\n}\n\n// constants for serialization\nATNState.INVALID_TYPE = 0;\nATNState.BASIC = 1;\nATNState.RULE_START = 2;\nATNState.BLOCK_START = 3;\nATNState.PLUS_BLOCK_START = 4;\nATNState.STAR_BLOCK_START = 5;\nATNState.TOKEN_START = 6;\nATNState.RULE_STOP = 7;\nATNState.BLOCK_END = 8;\nATNState.STAR_LOOP_BACK = 9;\nATNState.STAR_LOOP_ENTRY = 10;\nATNState.PLUS_LOOP_BACK = 11;\nATNState.LOOP_END = 12;\n\nATNState.serializationNames = [\n            \"INVALID\",\n            \"BASIC\",\n            \"RULE_START\",\n            \"BLOCK_START\",\n            \"PLUS_BLOCK_START\",\n            \"STAR_BLOCK_START\",\n            \"TOKEN_START\",\n            \"RULE_STOP\",\n            \"BLOCK_END\",\n            \"STAR_LOOP_BACK\",\n            \"STAR_LOOP_ENTRY\",\n            \"PLUS_LOOP_BACK\",\n            \"LOOP_END\" ];\n\nATNState.INVALID_STATE_NUMBER = -1;\n\nATNState.prototype.toString = function() {\n\treturn this.stateNumber;\n};\n\nATNState.prototype.equals = function(other) {\n    if (other instanceof ATNState) {\n        return this.stateNumber===other.stateNumber;\n    } else {\n        return false;\n    }\n};\n\nATNState.prototype.isNonGreedyExitState = function() {\n    return false;\n};\n\n\nATNState.prototype.addTransition = function(trans, index) {\n\tif(index===undefined) {\n\t\tindex = -1;\n\t}\n    if (this.transitions.length===0) {\n        this.epsilonOnlyTransitions = trans.isEpsilon;\n    } else if(this.epsilonOnlyTransitions !== trans.isEpsilon) {\n        this.epsilonOnlyTransitions = false;\n    }\n    if (index===-1) {\n        this.transitions.push(trans);\n    } else {\n        this.transitions.splice(index, 1, trans);\n    }\n};\n\nfunction BasicState() {\n\tATNState.call(this);\n    this.stateType = ATNState.BASIC;\n    return this;\n}\n\nBasicState.prototype = Object.create(ATNState.prototype);\nBasicState.prototype.constructor = BasicState;\n\n\nfunction DecisionState() {\n\tATNState.call(this);\n    this.decision = -1;\n    this.nonGreedy = false;\n    return this;\n}\n\nDecisionState.prototype = Object.create(ATNState.prototype);\nDecisionState.prototype.constructor = DecisionState;\n\n\n//  The start of a regular {@code (...)} block.\nfunction BlockStartState() {\n\tDecisionState.call(this);\n\tthis.endState = null;\n\treturn this;\n}\n\nBlockStartState.prototype = Object.create(DecisionState.prototype);\nBlockStartState.prototype.constructor = BlockStartState;\n\n\nfunction BasicBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.BLOCK_START;\n\treturn this;\n}\n\nBasicBlockStartState.prototype = Object.create(BlockStartState.prototype);\nBasicBlockStartState.prototype.constructor = BasicBlockStartState;\n\n\n// Terminal node of a simple {@code (a|b|c)} block.\nfunction BlockEndState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.BLOCK_END;\n    this.startState = null;\n    return this;\n}\n\nBlockEndState.prototype = Object.create(ATNState.prototype);\nBlockEndState.prototype.constructor = BlockEndState;\n\n\n// The last node in the ATN for a rule, unless that rule is the start symbol.\n//  In that case, there is one transition to EOF. Later, we might encode\n//  references to all calls to this rule to compute FOLLOW sets for\n//  error handling.\n//\nfunction RuleStopState() {\n\tATNState.call(this);\n    this.stateType = ATNState.RULE_STOP;\n    return this;\n}\n\nRuleStopState.prototype = Object.create(ATNState.prototype);\nRuleStopState.prototype.constructor = RuleStopState;\n\nfunction RuleStartState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.RULE_START;\n\tthis.stopState = null;\n\tthis.isPrecedenceRule = false;\n\treturn this;\n}\n\nRuleStartState.prototype = Object.create(ATNState.prototype);\nRuleStartState.prototype.constructor = RuleStartState;\n\n// Decision state for {@code A+} and {@code (A|B)+}.  It has two transitions:\n//  one to the loop back to start of the block and one to exit.\n//\nfunction PlusLoopbackState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.PLUS_LOOP_BACK;\n\treturn this;\n}\n\nPlusLoopbackState.prototype = Object.create(DecisionState.prototype);\nPlusLoopbackState.prototype.constructor = PlusLoopbackState;\n\n\n// Start of {@code (A|B|...)+} loop. Technically a decision state, but\n//  we don't use for code generation; somebody might need it, so I'm defining\n//  it for completeness. In reality, the {@link PlusLoopbackState} node is the\n//  real decision-making note for {@code A+}.\n//\nfunction PlusBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.PLUS_BLOCK_START;\n    this.loopBackState = null;\n    return this;\n}\n\nPlusBlockStartState.prototype = Object.create(BlockStartState.prototype);\nPlusBlockStartState.prototype.constructor = PlusBlockStartState;\n\n// The block that begins a closure loop.\nfunction StarBlockStartState() {\n\tBlockStartState.call(this);\n\tthis.stateType = ATNState.STAR_BLOCK_START;\n\treturn this;\n}\n\nStarBlockStartState.prototype = Object.create(BlockStartState.prototype);\nStarBlockStartState.prototype.constructor = StarBlockStartState;\n\n\nfunction StarLoopbackState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.STAR_LOOP_BACK;\n\treturn this;\n}\n\nStarLoopbackState.prototype = Object.create(ATNState.prototype);\nStarLoopbackState.prototype.constructor = StarLoopbackState;\n\n\nfunction StarLoopEntryState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.STAR_LOOP_ENTRY;\n    this.loopBackState = null;\n    // Indicates whether this state can benefit from a precedence DFA during SLL decision making.\n    this.isPrecedenceDecision = null;\n    return this;\n}\n\nStarLoopEntryState.prototype = Object.create(DecisionState.prototype);\nStarLoopEntryState.prototype.constructor = StarLoopEntryState;\n\n\n// Mark the end of a * or + loop.\nfunction LoopEndState() {\n\tATNState.call(this);\n\tthis.stateType = ATNState.LOOP_END;\n\tthis.loopBackState = null;\n\treturn this;\n}\n\nLoopEndState.prototype = Object.create(ATNState.prototype);\nLoopEndState.prototype.constructor = LoopEndState;\n\n\n// The Tokens rule start state linking to each lexer rule start state */\nfunction TokensStartState() {\n\tDecisionState.call(this);\n\tthis.stateType = ATNState.TOKEN_START;\n\treturn this;\n}\n\nTokensStartState.prototype = Object.create(DecisionState.prototype);\nTokensStartState.prototype.constructor = TokensStartState;\n\nexports.ATNState = ATNState;\nexports.BasicState = BasicState;\nexports.DecisionState = DecisionState;\nexports.BlockStartState = BlockStartState;\nexports.BlockEndState = BlockEndState;\nexports.LoopEndState = LoopEndState;\nexports.RuleStartState = RuleStartState;\nexports.RuleStopState = RuleStopState;\nexports.TokensStartState = TokensStartState;\nexports.PlusLoopbackState = PlusLoopbackState;\nexports.StarLoopbackState = StarLoopbackState;\nexports.StarLoopEntryState = StarLoopEntryState;\nexports.PlusBlockStartState = PlusBlockStartState;\nexports.StarBlockStartState = StarBlockStartState;\nexports.BasicBlockStartState = BasicBlockStartState;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNState.js\n// module id = j0Qz\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nvar Token = require('./../Token').Token;\nvar Errors = require('./Errors');\nvar NoViableAltException = Errors.NoViableAltException;\nvar InputMismatchException = Errors.InputMismatchException;\nvar FailedPredicateException = Errors.FailedPredicateException;\nvar ParseCancellationException = Errors.ParseCancellationException;\nvar ATNState = require('./../atn/ATNState').ATNState;\nvar Interval = require('./../IntervalSet').Interval;\nvar IntervalSet = require('./../IntervalSet').IntervalSet;\n\nfunction ErrorStrategy() {\n\n}\n\nErrorStrategy.prototype.reset = function(recognizer){\n};\n\nErrorStrategy.prototype.recoverInline = function(recognizer){\n};\n\nErrorStrategy.prototype.recover = function(recognizer, e){\n};\n\nErrorStrategy.prototype.sync = function(recognizer){\n};\n\nErrorStrategy.prototype.inErrorRecoveryMode = function(recognizer){\n};\n\nErrorStrategy.prototype.reportError = function(recognizer){\n};\n\n\n\n// This is the default implementation of {@link ANTLRErrorStrategy} used for\n// error reporting and recovery in ANTLR parsers.\n//\nfunction DefaultErrorStrategy() {\n\tErrorStrategy.call(this);\n    // Indicates whether the error strategy is currently \"recovering from an\n    // error\". This is used to suppress reporting multiple error messages while\n    // attempting to recover from a detected syntax error.\n    //\n    // @see //inErrorRecoveryMode\n    //\n    this.errorRecoveryMode = false;\n\n    // The index into the input stream where the last error occurred.\n    // This is used to prevent infinite loops where an error is found\n    // but no token is consumed during recovery...another error is found,\n    // ad nauseum. This is a failsafe mechanism to guarantee that at least\n    // one token/tree node is consumed for two errors.\n    //\n    this.lastErrorIndex = -1;\n    this.lastErrorStates = null;\n    return this;\n}\n\nDefaultErrorStrategy.prototype = Object.create(ErrorStrategy.prototype);\nDefaultErrorStrategy.prototype.constructor = DefaultErrorStrategy;\n\n// <p>The default implementation simply calls {@link //endErrorCondition} to\n// ensure that the handler is not in error recovery mode.</p>\nDefaultErrorStrategy.prototype.reset = function(recognizer) {\n    this.endErrorCondition(recognizer);\n};\n\n//\n// This method is called to enter error recovery mode when a recognition\n// exception is reported.\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.beginErrorCondition = function(recognizer) {\n    this.errorRecoveryMode = true;\n};\n\nDefaultErrorStrategy.prototype.inErrorRecoveryMode = function(recognizer) {\n    return this.errorRecoveryMode;\n};\n\n//\n// This method is called to leave error recovery mode after recovering from\n// a recognition exception.\n//\n// @param recognizer\n//\nDefaultErrorStrategy.prototype.endErrorCondition = function(recognizer) {\n    this.errorRecoveryMode = false;\n    this.lastErrorStates = null;\n    this.lastErrorIndex = -1;\n};\n\n//\n// {@inheritDoc}\n//\n// <p>The default implementation simply calls {@link //endErrorCondition}.</p>\n//\nDefaultErrorStrategy.prototype.reportMatch = function(recognizer) {\n    this.endErrorCondition(recognizer);\n};\n\n//\n// {@inheritDoc}\n//\n// <p>The default implementation returns immediately if the handler is already\n// in error recovery mode. Otherwise, it calls {@link //beginErrorCondition}\n// and dispatches the reporting task based on the runtime type of {@code e}\n// according to the following table.</p>\n//\n// <ul>\n// <li>{@link NoViableAltException}: Dispatches the call to\n// {@link //reportNoViableAlternative}</li>\n// <li>{@link InputMismatchException}: Dispatches the call to\n// {@link //reportInputMismatch}</li>\n// <li>{@link FailedPredicateException}: Dispatches the call to\n// {@link //reportFailedPredicate}</li>\n// <li>All other types: calls {@link Parser//notifyErrorListeners} to report\n// the exception</li>\n// </ul>\n//\nDefaultErrorStrategy.prototype.reportError = function(recognizer, e) {\n   // if we've already reported an error and have not matched a token\n   // yet successfully, don't report any errors.\n    if(this.inErrorRecoveryMode(recognizer)) {\n        return; // don't report spurious errors\n    }\n    this.beginErrorCondition(recognizer);\n    if ( e instanceof NoViableAltException ) {\n        this.reportNoViableAlternative(recognizer, e);\n    } else if ( e instanceof InputMismatchException ) {\n        this.reportInputMismatch(recognizer, e);\n    } else if ( e instanceof FailedPredicateException ) {\n        this.reportFailedPredicate(recognizer, e);\n    } else {\n        console.log(\"unknown recognition error type: \" + e.constructor.name);\n        console.log(e.stack);\n        recognizer.notifyErrorListeners(e.getOffendingToken(), e.getMessage(), e);\n    }\n};\n//\n// {@inheritDoc}\n//\n// <p>The default implementation resynchronizes the parser by consuming tokens\n// until we find one in the resynchronization set--loosely the set of tokens\n// that can follow the current rule.</p>\n//\nDefaultErrorStrategy.prototype.recover = function(recognizer, e) {\n    if (this.lastErrorIndex===recognizer.getInputStream().index &&\n        this.lastErrorStates !== null && this.lastErrorStates.indexOf(recognizer.state)>=0) {\n\t\t// uh oh, another error at same token index and previously-visited\n\t\t// state in ATN; must be a case where LT(1) is in the recovery\n\t\t// token set so nothing got consumed. Consume a single token\n\t\t// at least to prevent an infinite loop; this is a failsafe.\n\t\trecognizer.consume();\n    }\n    this.lastErrorIndex = recognizer._input.index;\n    if (this.lastErrorStates === null) {\n        this.lastErrorStates = [];\n    }\n    this.lastErrorStates.push(recognizer.state);\n    var followSet = this.getErrorRecoverySet(recognizer);\n    this.consumeUntil(recognizer, followSet);\n};\n\n// The default implementation of {@link ANTLRErrorStrategy//sync} makes sure\n// that the current lookahead symbol is consistent with what were expecting\n// at this point in the ATN. You can call this anytime but ANTLR only\n// generates code to check before subrules/loops and each iteration.\n//\n// <p>Implements Jim Idle's magic sync mechanism in closures and optional\n// subrules. E.g.,</p>\n//\n// <pre>\n// a : sync ( stuff sync )* ;\n// sync : {consume to what can follow sync} ;\n// </pre>\n//\n// At the start of a sub rule upon error, {@link //sync} performs single\n// token deletion, if possible. If it can't do that, it bails on the current\n// rule and uses the default error recovery, which consumes until the\n// resynchronization set of the current rule.\n//\n// <p>If the sub rule is optional ({@code (...)?}, {@code (...)*}, or block\n// with an empty alternative), then the expected set includes what follows\n// the subrule.</p>\n//\n// <p>During loop iteration, it consumes until it sees a token that can start a\n// sub rule or what follows loop. Yes, that is pretty aggressive. We opt to\n// stay in the loop as long as possible.</p>\n//\n// <p><strong>ORIGINS</strong></p>\n//\n// <p>Previous versions of ANTLR did a poor job of their recovery within loops.\n// A single mismatch token or missing token would force the parser to bail\n// out of the entire rules surrounding the loop. So, for rule</p>\n//\n// <pre>\n// classDef : 'class' ID '{' member* '}'\n// </pre>\n//\n// input with an extra token between members would force the parser to\n// consume until it found the next class definition rather than the next\n// member definition of the current class.\n//\n// <p>This functionality cost a little bit of effort because the parser has to\n// compare token set at the start of the loop and at each iteration. If for\n// some reason speed is suffering for you, you can turn off this\n// functionality by simply overriding this method as a blank { }.</p>\n//\nDefaultErrorStrategy.prototype.sync = function(recognizer) {\n    // If already recovering, don't try to sync\n    if (this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    var s = recognizer._interp.atn.states[recognizer.state];\n    var la = recognizer.getTokenStream().LA(1);\n    // try cheaper subset first; might get lucky. seems to shave a wee bit off\n    var nextTokens = recognizer.atn.nextTokens(s);\n    if (nextTokens.contains(Token.EPSILON) || nextTokens.contains(la)) {\n        return;\n    }\n    switch (s.stateType) {\n    case ATNState.BLOCK_START:\n    case ATNState.STAR_BLOCK_START:\n    case ATNState.PLUS_BLOCK_START:\n    case ATNState.STAR_LOOP_ENTRY:\n       // report error and recover if possible\n        if( this.singleTokenDeletion(recognizer) !== null) {\n            return;\n        } else {\n            throw new InputMismatchException(recognizer);\n        }\n        break;\n    case ATNState.PLUS_LOOP_BACK:\n    case ATNState.STAR_LOOP_BACK:\n        this.reportUnwantedToken(recognizer);\n        var expecting = new IntervalSet();\n        expecting.addSet(recognizer.getExpectedTokens());\n        var whatFollowsLoopIterationOrRule = expecting.addSet(this.getErrorRecoverySet(recognizer));\n        this.consumeUntil(recognizer, whatFollowsLoopIterationOrRule);\n        break;\n    default:\n        // do nothing if we can't identify the exact kind of ATN state\n    }\n};\n\n// This is called by {@link //reportError} when the exception is a\n// {@link NoViableAltException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportNoViableAlternative = function(recognizer, e) {\n    var tokens = recognizer.getTokenStream();\n    var input;\n    if(tokens !== null) {\n        if (e.startToken.type===Token.EOF) {\n            input = \"<EOF>\";\n        } else {\n            input = tokens.getText(new Interval(e.startToken.tokenIndex, e.offendingToken.tokenIndex));\n        }\n    } else {\n        input = \"<unknown input>\";\n    }\n    var msg = \"no viable alternative at input \" + this.escapeWSAndQuote(input);\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n//\n// This is called by {@link //reportError} when the exception is an\n// {@link InputMismatchException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportInputMismatch = function(recognizer, e) {\n    var msg = \"mismatched input \" + this.getTokenErrorDisplay(e.offendingToken) +\n          \" expecting \" + e.getExpectedTokens().toString(recognizer.literalNames, recognizer.symbolicNames);\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n//\n// This is called by {@link //reportError} when the exception is a\n// {@link FailedPredicateException}.\n//\n// @see //reportError\n//\n// @param recognizer the parser instance\n// @param e the recognition exception\n//\nDefaultErrorStrategy.prototype.reportFailedPredicate = function(recognizer, e) {\n    var ruleName = recognizer.ruleNames[recognizer._ctx.ruleIndex];\n    var msg = \"rule \" + ruleName + \" \" + e.message;\n    recognizer.notifyErrorListeners(msg, e.offendingToken, e);\n};\n\n// This method is called to report a syntax error which requires the removal\n// of a token from the input stream. At the time this method is called, the\n// erroneous symbol is current {@code LT(1)} symbol and has not yet been\n// removed from the input stream. When this method returns,\n// {@code recognizer} is in error recovery mode.\n//\n// <p>This method is called when {@link //singleTokenDeletion} identifies\n// single-token deletion as a viable recovery strategy for a mismatched\n// input error.</p>\n//\n// <p>The default implementation simply returns if the handler is already in\n// error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n// enter error recovery mode, followed by calling\n// {@link Parser//notifyErrorListeners}.</p>\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.reportUnwantedToken = function(recognizer) {\n    if (this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    this.beginErrorCondition(recognizer);\n    var t = recognizer.getCurrentToken();\n    var tokenName = this.getTokenErrorDisplay(t);\n    var expecting = this.getExpectedTokens(recognizer);\n    var msg = \"extraneous input \" + tokenName + \" expecting \" +\n        expecting.toString(recognizer.literalNames, recognizer.symbolicNames);\n    recognizer.notifyErrorListeners(msg, t, null);\n};\n// This method is called to report a syntax error which requires the\n// insertion of a missing token into the input stream. At the time this\n// method is called, the missing token has not yet been inserted. When this\n// method returns, {@code recognizer} is in error recovery mode.\n//\n// <p>This method is called when {@link //singleTokenInsertion} identifies\n// single-token insertion as a viable recovery strategy for a mismatched\n// input error.</p>\n//\n// <p>The default implementation simply returns if the handler is already in\n// error recovery mode. Otherwise, it calls {@link //beginErrorCondition} to\n// enter error recovery mode, followed by calling\n// {@link Parser//notifyErrorListeners}.</p>\n//\n// @param recognizer the parser instance\n//\nDefaultErrorStrategy.prototype.reportMissingToken = function(recognizer) {\n    if ( this.inErrorRecoveryMode(recognizer)) {\n        return;\n    }\n    this.beginErrorCondition(recognizer);\n    var t = recognizer.getCurrentToken();\n    var expecting = this.getExpectedTokens(recognizer);\n    var msg = \"missing \" + expecting.toString(recognizer.literalNames, recognizer.symbolicNames) +\n          \" at \" + this.getTokenErrorDisplay(t);\n    recognizer.notifyErrorListeners(msg, t, null);\n};\n\n// <p>The default implementation attempts to recover from the mismatched input\n// by using single token insertion and deletion as described below. If the\n// recovery attempt fails, this method throws an\n// {@link InputMismatchException}.</p>\n//\n// <p><strong>EXTRA TOKEN</strong> (single token deletion)</p>\n//\n// <p>{@code LA(1)} is not what we are looking for. If {@code LA(2)} has the\n// right token, however, then assume {@code LA(1)} is some extra spurious\n// token and delete it. Then consume and return the next token (which was\n// the {@code LA(2)} token) as the successful result of the match operation.</p>\n//\n// <p>This recovery strategy is implemented by {@link\n// //singleTokenDeletion}.</p>\n//\n// <p><strong>MISSING TOKEN</strong> (single token insertion)</p>\n//\n// <p>If current token (at {@code LA(1)}) is consistent with what could come\n// after the expected {@code LA(1)} token, then assume the token is missing\n// and use the parser's {@link TokenFactory} to create it on the fly. The\n// \"insertion\" is performed by returning the created token as the successful\n// result of the match operation.</p>\n//\n// <p>This recovery strategy is implemented by {@link\n// //singleTokenInsertion}.</p>\n//\n// <p><strong>EXAMPLE</strong></p>\n//\n// <p>For example, Input {@code i=(3;} is clearly missing the {@code ')'}. When\n// the parser returns from the nested call to {@code expr}, it will have\n// call chain:</p>\n//\n// <pre>\n// stat &rarr; expr &rarr; atom\n// </pre>\n//\n// and it will be trying to match the {@code ')'} at this point in the\n// derivation:\n//\n// <pre>\n// =&gt; ID '=' '(' INT ')' ('+' atom)* ';'\n// ^\n// </pre>\n//\n// The attempt to match {@code ')'} will fail when it sees {@code ';'} and\n// call {@link //recoverInline}. To recover, it sees that {@code LA(1)==';'}\n// is in the set of tokens that can follow the {@code ')'} token reference\n// in rule {@code atom}. It can assume that you forgot the {@code ')'}.\n//\nDefaultErrorStrategy.prototype.recoverInline = function(recognizer) {\n    // SINGLE TOKEN DELETION\n    var matchedSymbol = this.singleTokenDeletion(recognizer);\n    if (matchedSymbol !== null) {\n        // we have deleted the extra token.\n        // now, move past ttype token as if all were ok\n        recognizer.consume();\n        return matchedSymbol;\n    }\n    // SINGLE TOKEN INSERTION\n    if (this.singleTokenInsertion(recognizer)) {\n        return this.getMissingSymbol(recognizer);\n    }\n    // even that didn't work; must throw the exception\n    throw new InputMismatchException(recognizer);\n};\n\n//\n// This method implements the single-token insertion inline error recovery\n// strategy. It is called by {@link //recoverInline} if the single-token\n// deletion strategy fails to recover from the mismatched input. If this\n// method returns {@code true}, {@code recognizer} will be in error recovery\n// mode.\n//\n// <p>This method determines whether or not single-token insertion is viable by\n// checking if the {@code LA(1)} input symbol could be successfully matched\n// if it were instead the {@code LA(2)} symbol. If this method returns\n// {@code true}, the caller is responsible for creating and inserting a\n// token with the correct type to produce this behavior.</p>\n//\n// @param recognizer the parser instance\n// @return {@code true} if single-token insertion is a viable recovery\n// strategy for the current mismatched input, otherwise {@code false}\n//\nDefaultErrorStrategy.prototype.singleTokenInsertion = function(recognizer) {\n    var currentSymbolType = recognizer.getTokenStream().LA(1);\n    // if current token is consistent with what could come after current\n    // ATN state, then we know we're missing a token; error recovery\n    // is free to conjure up and insert the missing token\n    var atn = recognizer._interp.atn;\n    var currentState = atn.states[recognizer.state];\n    var next = currentState.transitions[0].target;\n    var expectingAtLL2 = atn.nextTokens(next, recognizer._ctx);\n    if (expectingAtLL2.contains(currentSymbolType) ){\n        this.reportMissingToken(recognizer);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// This method implements the single-token deletion inline error recovery\n// strategy. It is called by {@link //recoverInline} to attempt to recover\n// from mismatched input. If this method returns null, the parser and error\n// handler state will not have changed. If this method returns non-null,\n// {@code recognizer} will <em>not</em> be in error recovery mode since the\n// returned token was a successful match.\n//\n// <p>If the single-token deletion is successful, this method calls\n// {@link //reportUnwantedToken} to report the error, followed by\n// {@link Parser//consume} to actually \"delete\" the extraneous token. Then,\n// before returning {@link //reportMatch} is called to signal a successful\n// match.</p>\n//\n// @param recognizer the parser instance\n// @return the successfully matched {@link Token} instance if single-token\n// deletion successfully recovers from the mismatched input, otherwise\n// {@code null}\n//\nDefaultErrorStrategy.prototype.singleTokenDeletion = function(recognizer) {\n    var nextTokenType = recognizer.getTokenStream().LA(2);\n    var expecting = this.getExpectedTokens(recognizer);\n    if (expecting.contains(nextTokenType)) {\n        this.reportUnwantedToken(recognizer);\n        // print(\"recoverFromMismatchedToken deleting \" \\\n        // + str(recognizer.getTokenStream().LT(1)) \\\n        // + \" since \" + str(recognizer.getTokenStream().LT(2)) \\\n        // + \" is what we want\", file=sys.stderr)\n        recognizer.consume(); // simply delete extra token\n        // we want to return the token we're actually matching\n        var matchedSymbol = recognizer.getCurrentToken();\n        this.reportMatch(recognizer); // we know current token is correct\n        return matchedSymbol;\n    } else {\n        return null;\n    }\n};\n\n// Conjure up a missing token during error recovery.\n//\n// The recognizer attempts to recover from single missing\n// symbols. But, actions might refer to that missing symbol.\n// For example, x=ID {f($x);}. The action clearly assumes\n// that there has been an identifier matched previously and that\n// $x points at that token. If that token is missing, but\n// the next token in the stream is what we want we assume that\n// this token is missing and we keep going. Because we\n// have to return some token to replace the missing token,\n// we have to conjure one up. This method gives the user control\n// over the tokens returned for missing tokens. Mostly,\n// you will want to create something special for identifier\n// tokens. For literals such as '{' and ',', the default\n// action in the parser or tree parser works. It simply creates\n// a CommonToken of the appropriate type. The text will be the token.\n// If you change what tokens must be created by the lexer,\n// override this method to create the appropriate tokens.\n//\nDefaultErrorStrategy.prototype.getMissingSymbol = function(recognizer) {\n    var currentSymbol = recognizer.getCurrentToken();\n    var expecting = this.getExpectedTokens(recognizer);\n    var expectedTokenType = expecting.first(); // get any element\n    var tokenText;\n    if (expectedTokenType===Token.EOF) {\n        tokenText = \"<missing EOF>\";\n    } else {\n        tokenText = \"<missing \" + recognizer.literalNames[expectedTokenType] + \">\";\n    }\n    var current = currentSymbol;\n    var lookback = recognizer.getTokenStream().LT(-1);\n    if (current.type===Token.EOF && lookback !== null) {\n        current = lookback;\n    }\n    return recognizer.getTokenFactory().create(current.source,\n        expectedTokenType, tokenText, Token.DEFAULT_CHANNEL,\n        -1, -1, current.line, current.column);\n};\n\nDefaultErrorStrategy.prototype.getExpectedTokens = function(recognizer) {\n    return recognizer.getExpectedTokens();\n};\n\n// How should a token be displayed in an error message? The default\n// is to display just the text, but during development you might\n// want to have a lot of information spit out. Override in that case\n// to use t.toString() (which, for CommonToken, dumps everything about\n// the token). This is better than forcing you to override a method in\n// your token objects because you don't have to go modify your lexer\n// so that it creates a new Java type.\n//\nDefaultErrorStrategy.prototype.getTokenErrorDisplay = function(t) {\n    if (t === null) {\n        return \"<no token>\";\n    }\n    var s = t.text;\n    if (s === null) {\n        if (t.type===Token.EOF) {\n            s = \"<EOF>\";\n        } else {\n            s = \"<\" + t.type + \">\";\n        }\n    }\n    return this.escapeWSAndQuote(s);\n};\n\nDefaultErrorStrategy.prototype.escapeWSAndQuote = function(s) {\n    s = s.replace(/\\n/g,\"\\\\n\");\n    s = s.replace(/\\r/g,\"\\\\r\");\n    s = s.replace(/\\t/g,\"\\\\t\");\n    return \"'\" + s + \"'\";\n};\n\n// Compute the error recovery set for the current rule. During\n// rule invocation, the parser pushes the set of tokens that can\n// follow that rule reference on the stack; this amounts to\n// computing FIRST of what follows the rule reference in the\n// enclosing rule. See LinearApproximator.FIRST().\n// This local follow set only includes tokens\n// from within the rule; i.e., the FIRST computation done by\n// ANTLR stops at the end of a rule.\n//\n// EXAMPLE\n//\n// When you find a \"no viable alt exception\", the input is not\n// consistent with any of the alternatives for rule r. The best\n// thing to do is to consume tokens until you see something that\n// can legally follow a call to r//or* any rule that called r.\n// You don't want the exact set of viable next tokens because the\n// input might just be missing a token--you might consume the\n// rest of the input looking for one of the missing tokens.\n//\n// Consider grammar:\n//\n// a : '[' b ']'\n// | '(' b ')'\n// ;\n// b : c '^' INT ;\n// c : ID\n// | INT\n// ;\n//\n// At each rule invocation, the set of tokens that could follow\n// that rule is pushed on a stack. Here are the various\n// context-sensitive follow sets:\n//\n// FOLLOW(b1_in_a) = FIRST(']') = ']'\n// FOLLOW(b2_in_a) = FIRST(')') = ')'\n// FOLLOW(c_in_b) = FIRST('^') = '^'\n//\n// Upon erroneous input \"[]\", the call chain is\n//\n// a -> b -> c\n//\n// and, hence, the follow context stack is:\n//\n// depth follow set start of rule execution\n// 0 <EOF> a (from main())\n// 1 ']' b\n// 2 '^' c\n//\n// Notice that ')' is not included, because b would have to have\n// been called from a different context in rule a for ')' to be\n// included.\n//\n// For error recovery, we cannot consider FOLLOW(c)\n// (context-sensitive or otherwise). We need the combined set of\n// all context-sensitive FOLLOW sets--the set of all tokens that\n// could follow any reference in the call chain. We need to\n// resync to one of those tokens. Note that FOLLOW(c)='^' and if\n// we resync'd to that token, we'd consume until EOF. We need to\n// sync to context-sensitive FOLLOWs for a, b, and c: {']','^'}.\n// In this case, for input \"[]\", LA(1) is ']' and in the set, so we would\n// not consume anything. After printing an error, rule c would\n// return normally. Rule b would not find the required '^' though.\n// At this point, it gets a mismatched token error and throws an\n// exception (since LA(1) is not in the viable following token\n// set). The rule exception handler tries to recover, but finds\n// the same recovery set and doesn't consume anything. Rule b\n// exits normally returning to rule a. Now it finds the ']' (and\n// with the successful match exits errorRecovery mode).\n//\n// So, you can see that the parser walks up the call chain looking\n// for the token that was a member of the recovery set.\n//\n// Errors are not generated in errorRecovery mode.\n//\n// ANTLR's error recovery mechanism is based upon original ideas:\n//\n// \"Algorithms + Data Structures = Programs\" by Niklaus Wirth\n//\n// and\n//\n// \"A note on error recovery in recursive descent parsers\":\n// http://portal.acm.org/citation.cfm?id=947902.947905\n//\n// Later, Josef Grosch had some good ideas:\n//\n// \"Efficient and Comfortable Error Recovery in Recursive Descent\n// Parsers\":\n// ftp://www.cocolab.com/products/cocktail/doca4.ps/ell.ps.zip\n//\n// Like Grosch I implement context-sensitive FOLLOW sets that are combined\n// at run-time upon error to avoid overhead during parsing.\n//\nDefaultErrorStrategy.prototype.getErrorRecoverySet = function(recognizer) {\n    var atn = recognizer._interp.atn;\n    var ctx = recognizer._ctx;\n    var recoverSet = new IntervalSet();\n    while (ctx !== null && ctx.invokingState>=0) {\n        // compute what follows who invoked us\n        var invokingState = atn.states[ctx.invokingState];\n        var rt = invokingState.transitions[0];\n        var follow = atn.nextTokens(rt.followState);\n        recoverSet.addSet(follow);\n        ctx = ctx.parentCtx;\n    }\n    recoverSet.removeOne(Token.EPSILON);\n    return recoverSet;\n};\n\n// Consume tokens until one matches the given token set.//\nDefaultErrorStrategy.prototype.consumeUntil = function(recognizer, set) {\n    var ttype = recognizer.getTokenStream().LA(1);\n    while( ttype !== Token.EOF && !set.contains(ttype)) {\n        recognizer.consume();\n        ttype = recognizer.getTokenStream().LA(1);\n    }\n};\n\n//\n// This implementation of {@link ANTLRErrorStrategy} responds to syntax errors\n// by immediately canceling the parse operation with a\n// {@link ParseCancellationException}. The implementation ensures that the\n// {@link ParserRuleContext//exception} field is set for all parse tree nodes\n// that were not completed prior to encountering the error.\n//\n// <p>\n// This error strategy is useful in the following scenarios.</p>\n//\n// <ul>\n// <li><strong>Two-stage parsing:</strong> This error strategy allows the first\n// stage of two-stage parsing to immediately terminate if an error is\n// encountered, and immediately fall back to the second stage. In addition to\n// avoiding wasted work by attempting to recover from errors here, the empty\n// implementation of {@link BailErrorStrategy//sync} improves the performance of\n// the first stage.</li>\n// <li><strong>Silent validation:</strong> When syntax errors are not being\n// reported or logged, and the parse result is simply ignored if errors occur,\n// the {@link BailErrorStrategy} avoids wasting work on recovering from errors\n// when the result will be ignored either way.</li>\n// </ul>\n//\n// <p>\n// {@code myparser.setErrorHandler(new BailErrorStrategy());}</p>\n//\n// @see Parser//setErrorHandler(ANTLRErrorStrategy)\n//\nfunction BailErrorStrategy() {\n\tDefaultErrorStrategy.call(this);\n\treturn this;\n}\n\nBailErrorStrategy.prototype = Object.create(DefaultErrorStrategy.prototype);\nBailErrorStrategy.prototype.constructor = BailErrorStrategy;\n\n// Instead of recovering from exception {@code e}, re-throw it wrapped\n// in a {@link ParseCancellationException} so it is not caught by the\n// rule function catches. Use {@link Exception//getCause()} to get the\n// original {@link RecognitionException}.\n//\nBailErrorStrategy.prototype.recover = function(recognizer, e) {\n    var context = recognizer._ctx;\n    while (context !== null) {\n        context.exception = e;\n        context = context.parentCtx;\n    }\n    throw new ParseCancellationException(e);\n};\n\n// Make sure we don't attempt to recover inline; if the parser\n// successfully recovers, it won't throw an exception.\n//\nBailErrorStrategy.prototype.recoverInline = function(recognizer) {\n    this.recover(recognizer, new InputMismatchException(recognizer));\n};\n\n// Make sure we don't attempt to recover from problems in subrules.//\nBailErrorStrategy.prototype.sync = function(recognizer) {\n    // pass\n};\n\nexports.BailErrorStrategy = BailErrorStrategy;\nexports.DefaultErrorStrategy = DefaultErrorStrategy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/error/ErrorStrategy.js\n// module id = k1zP\n// module chunks = 0 1","//https://stackoverflow.com/questions/16058073/how-do-i-draw-a-graph-or-tree-structure-in-javascript\n//http://bl.ocks.org/rkirsling/5001347\n// https://bl.ocks.org/cjrd/6863459\n//https://bl.ocks.org/curran/5905182da50a4667dc00\n// https://bl.ocks.org/mbostock/1138500\nfunction DirectGraph(opts) {\n    opts = opts || {}\n    var width = opts.width || 960,\n        height = opts.height || 500,\n        colors = d3.scale.category10();\n    var Radius = opts.radius || 20;\n\n    var self = this;\n    var $svg;\n    var $container = (typeof opts.container === 'string') ? document.querySelector(opts.container) : opts.container;\n    this._opts = opts\n\n    if (opts.container) {\n        $svg = d3.select(opts.container)\n    } else {\n        $svg = d3.select(\"body\").append(\"svg\")\n        opts.container = $svg\n    }\n    $svg.attr('width', width)\n        .attr('height', height);\n\n    var $tip = opts.$tip || $container.parentNode.querySelector('.js-svg-tip')\n    if (!$tip) {\n        $tip = document.createElement('div')\n        $tip.classList.add('tip')\n        $container.parentNode.appendChild($tip)\n    }\n    var nodes = [];\n    var links = [];\n\n// init D3 force layout\n    var force = d3.layout.force()\n        .size([width, height])\n        .linkDistance(150)\n        .charge(-500)\n        .on('tick', tick)\n\n// define arrow markers for graph links\n    $svg.append('svg:defs').append('svg:marker')\n        .attr('id', 'end-arrow')\n        .attr('viewBox', '0 -5 10 10')\n        .attr('refX', 6)\n        .attr('markerWidth', 3)\n        .attr('markerHeight', 3)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M0,-5L10,0L0,5')\n        .attr('fill', '#000');\n\n    $svg.append('svg:defs').append('svg:marker')\n        .attr('id', 'start-arrow')\n        .attr('viewBox', '0 -5 10 10')\n        .attr('refX', 4)\n        .attr('markerWidth', 3)\n        .attr('markerHeight', 3)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M10,-5L0,0L10,5')\n        .attr('fill', '#000');\n\n    // handles to link and node element groups\n    var path = $svg.append('svg:g').selectAll('path'),\n        circle = $svg.append('svg:g').selectAll('g');\n\n// update force layout (called automatically each iteration)\n    function tick() {\n        // draw directed edges with proper padding from node centers\n        path.attr('d', function (d) {\n            var deltaX = d.target.x - d.source.x,\n                deltaY = d.target.y - d.source.y,\n                dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n                normX = deltaX / dist,\n                normY = deltaY / dist,\n                sourcePadding = d.left ? 17 : 12,\n                targetPadding = d.right ? 17 : 12,\n                sourceX = d.source.x + (sourcePadding * normX),\n                sourceY = d.source.y + (sourcePadding * normY),\n                targetX = d.target.x - (targetPadding * normX),\n                targetY = d.target.y - (targetPadding * normY);\n            return 'M' + sourceX + ',' + sourceY + 'L' + targetX + ',' + targetY;\n        });\n\n        circle.attr('transform', function (d) {\n            return 'translate(' + d.x + ',' + d.y + ')';\n        });\n    }\n\n    function autoPlacementTip(pos) {\n        var parentRect = opts.container.parentNode.getBoundingClientRect()\n        var conRect = opts.container.getBoundingClientRect()\n        var diffx = conRect.x - parentRect.x,\n            diffy = conRect.y - parentRect.y;\n        var tipRect = $tip.getBoundingClientRect()\n\n        var posx = diffx + pos.x\n        var posy = diffy + pos.y\n\n        if (posx + tipRect.width > conRect.width) {\n            posx -= tipRect.width - 25\n        }\n\n        if (posy + tipRect.height > conRect.height) {\n            posy -= tipRect.height - 25\n        }\n        $tip.style.left = posx + 'px'\n        $tip.style.top = posy + 'px'\n    }\n\n    //selected变虚线\n    function restart() {\n        // path (link) group\n        path = path.data(links);\n\n        // update existing links\n        path.style('marker-start', function (d) {\n            return d.left ? 'url(#start-arrow)' : '';\n        }).style('marker-end', function (d) {\n            return d.right ? 'url(#end-arrow)' : '';\n        });\n\n\n        // add new links\n        path.enter().append('svg:path')\n            .attr('class', function (d) {\n                return d.target.data.stateClass + ' link'\n            })\n            .style('marker-start', function (d) {\n                return d.left ? 'url(#start-arrow)' : '';\n            })\n            .style('marker-end', function (d) {\n                return d.right ? 'url(#end-arrow)' : '';\n            })\n            .on('mouseenter', function (p) {\n                var src = p.source;\n                var target = p.target\n                var pos = d3.mouse(this)\n                console.log(pos)\n\n                $tip.style.opacity = 1\n                // $tip.style.top = pos[1] + 'px'\n                // $tip.style.left = pos[0] + 'px'\n                if (self._opts.overlayHandler) {\n                    self._opts.overlayHandler(p, $tip)\n                    setTimeout(autoPlacementTip({x: pos[0], y: pos[1]}))\n                }\n            })\n\n        // remove old links\n        path.exit().remove();\n\n        // circle (node) group\n        // NB: the function arg is crucial here! nodes are known by id, not by index!\n        circle = circle.data(nodes, function (d) {\n            return d.id;\n        });\n\n        // update existing nodes (reflexive & selected visual states)\n        circle.selectAll('circle')\n            .classed('reflexive', function (d) {\n                return d.reflexive;\n            });\n\n        // add new nodes\n        var g = circle.enter().append('svg:g');\n        g.append('svg:circle')\n            .attr('class', function (d) {\n                return 'node ' + (d.data.stateClass || '')\n            })\n            .attr('r', Radius)\n            .on('mouseenter', function (d) {\n                $tip.style.opacity = 1\n                // $tip.style.top = (d.y - Radius) + 'px'\n                // $tip.style.left = (d.x + Radius * 1.5) + 'px'\n                if (self._opts.overlayHandler) {\n                    self._opts.overlayHandler(d.data, $tip)\n                    setTimeout(autoPlacementTip(d))\n                }\n            })\n\n        // show node IDs\n        // g.append('svg:text')\n        //     .attr('x', 0)\n        //     .attr('y', 4)\n        //     .attr('class', 'id')\n        //     .text(function (d) {\n        //         // return d.data.state\n        //         return d.id;\n        //     });\n\n        // remove old nodes\n        circle.exit().remove();\n\n        // set the graph in motion\n        force.start();\n    }\n\n    opts.nodes.forEach(function (node) {\n        nodes.push(node);\n        restart();\n    })\n\n    opts.links.forEach(function (link) {\n        links.push(link);\n        restart();\n    })\n    return this\n}\n\n\nexport default DirectGraph\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/ui-lib/contract-state/direct-graph.js","import DirectGraph from './direct-graph'\n\nvar lastNodeId = -1;\n\nfunction createNode(props, data) {\n    var node = {id: ++lastNodeId, reflexive: false, data: data};\n    Object.assign(node, props)\n    return node\n}\n\n//创建渲染需要的数据结构\nfunction formatNodes(nodeList) {\n    var nodes = [];\n    var links = []\n    var nodeMap = {}\n\n    nodeList.forEach(function (nodeArr, index) {\n        nodeArr.forEach(function (node) {\n            node.stateClass = resolveStateClass(node)\n            var tmp = createNode(node.pos, node)\n\n            nodeMap[node.state] = tmp\n            nodes.push(tmp)\n        })\n    })\n\n    nodes.forEach(function (node) {\n        node.data.nextStates.forEach(function (next) {\n            links.push({\n                source: node,\n                target: nodeMap[next.state],\n                left: false,\n                right: true\n            })\n        })\n    })\n    return {nodes, links}\n}\n\n\n//生成d3 tree结构\nfunction generateRoot(stateTreeRoot) {\n    var node = {\n        name: stateTreeRoot.state,\n        children: []\n    }\n\n    stateTreeRoot.nextStates.forEach(function (next) {\n        node.children.push(generateRoot(next))\n    })\n\n    return node\n}\n\nfunction resolveStateClass(state) {\n    var stateCls = 'is-disabled'\n    if (state.isProcess) {\n        stateCls = 'is-process'\n    } else if (state.isFinish) {\n        stateCls = 'is-finish'\n    } else if (state.isWaiting) {\n        stateCls = 'is-wait'\n    }\n\n    if (state.isActive) {\n        stateCls += ' is-active'\n    }\n    return stateCls\n}\n\n//根据d3 tree生成的节点坐标设置force 节点的坐标\nfunction setTreeNodePosition(result, opts) {\n    var root = generateRoot(result.stateTreeRoot)\n    var height = opts.height;\n    var width = opts.width;\n    var tree = d3.layout.tree().size([height, width])\n    var nodes = tree.nodes(root)\n    nodes.forEach(function (node) {\n        var keys = ['depth', 'x', 'y']\n        var stateNode = result.stateMap[node.name]\n        if (stateNode) {\n            stateNode.pos = {}\n            keys.forEach(function (key) {\n                stateNode.pos[key] = node[key]\n            })\n            //将纵向变成横向\n            var x = stateNode.pos.x\n            stateNode.pos.x = stateNode.pos.y\n            stateNode.pos.y = x\n        }\n    })\n}\n\nfunction parseContract(contractData) {\n    var curState = contractData.fsmState\n    var policySegment = contractData.policySegment\n    var descs = policySegment.fsmDescription\n    var activatedStates = policySegment.activatedStates\n    var initialState = policySegment.initialState\n    var stateMap = {}\n    var stateTreeRoot;\n\n    function initStateNode(stateName) {\n        return {\n            nextStates: [],\n            targetEvents: [], //到下一状态可能的路径(事件)\n            state: stateName,\n            isActive: activatedStates.includes(stateName),\n            isProcess: stateName === curState,\n            deep: 0\n        };\n    }\n\n    var nodeList = [] //每层的节点列表\n\n    function walkTree(node) {\n        if (!nodeList[node.deep]) {\n            nodeList[node.deep] = []\n        }\n        nodeList[node.deep].push(node)\n\n        if (!node.nextStates.length) {\n            return\n        }\n\n        node.nextStates.forEach(function (nextNode) {\n            var nextStateNode = stateMap[nextNode.state]\n            nextStateNode.deep = node.deep + 1\n\n            if (node.isProcess || node.isWaiting) {\n                nextStateNode.isWaiting = true\n            }\n\n            if (nextStateNode.isProcess) {\n                node.isFinish = true\n            }\n\n            if (nextStateNode.targetEvents.length) {\n                nextStateNode.targetEvents.forEach(function (event) {\n                    if (stateMap[event.nextState] && event.nextState !== node.state) {\n                        nextStateNode.nextStates.push(stateMap[event.nextState])\n                    }\n                })\n            }\n            walkTree(nextStateNode)\n\n            if (nextStateNode.isFinish) {\n                node.isFinish = true\n            }\n        })\n    }\n\n    descs.forEach((desc) => {\n        var curStateNode = stateMap[desc.currentState] || initStateNode(desc.currentState)\n        var nextStateNode = stateMap[desc.nextState]\n\n        curStateNode.targetEvents.push(desc)\n\n        if (!nextStateNode) {\n            nextStateNode = initStateNode(desc.nextState);\n            stateMap[desc.nextState] = nextStateNode\n        }\n\n        //标记根节点的next，便于初始化遍历\n        if (desc.currentState === initialState) {\n            curStateNode.nextStates.push(nextStateNode)\n        }\n        stateMap[desc.currentState] = curStateNode\n    })\n\n    stateTreeRoot = stateMap[initialState]\n    walkTree(stateTreeRoot)\n\n    return {stateTreeRoot, stateMap, nodeList}\n}\n\nexport default {\n    name: 'contract-state',\n    props: {\n        data: {\n            type: Object,\n            default() {\n                return null\n            }\n        }\n    },\n    data() {\n        var self = this;\n        return {\n            popData: {},\n            opts: {\n                radius: 12,\n                width: 400,\n                height: 200,\n                container: null,\n                overlayHandler: function (data) {\n                    var popData = Object.assign({}, data)\n                    if (data.source) {\n                        popData.type = 'path'\n                        popData.disabled = data.source.data.state !== self.data.fsmState;\n                        var triggerEvents = data.source.data.targetEvents.filter((event) => {\n                            return event.nextState === data.target.data.state\n                        });\n                        popData.event = (triggerEvents[0] && triggerEvents[0].event) || {}\n                    } else { //node\n                        popData.type = 'node'\n                    }\n                    self.popData = popData\n                    self.$refs.popover.showPopper = true\n                }\n            }\n        }\n    },\n    mounted() {\n        var style = getComputedStyle(this.$refs.wrapper)\n        this.opts.$tip = this.$el.querySelector('.js-svg-tip')\n        this.opts.container = this.$refs.stateTree;\n        this.opts.width = parseInt(parseInt(style.width) * .8)\n        this.draw()\n    },\n    methods: {\n        updateContractState(state) {\n            state.isProcess = true\n            state.isActivated = true;\n            this.loadPresentableDetail(this.data.contractId)\n                .then((data) => {\n                    Object.assign(this.data, data)\n                    this.draw()\n                })\n        },\n        triggerLicense(data) {\n            return window.QI.fetch('//api.freelog.com/v1/contracts/signingLicenses', {\n                method: 'POST',\n                data: data\n            }).then((res) => {\n                return res.json()\n            })\n        },\n        triggerContractState(data) {\n            return window.QI.fetch('//api.freelog.com/v1/contracts/test', {\n                method: 'POST',\n                data: data\n            }).then((res) => {\n                return res.json()\n            })\n        },\n        loadPresentableDetail(contractId) {\n            return window.QI.fetch(`//api.freelog.com/v1/contracts/${contractId}`).then((res) => {\n                if (res.status === 200) {\n                    return res.json()\n                } else {\n                    return Promise.reject(res)\n                }\n            }).then((res) => {\n                if (res.ret === 0 && res.errcode === 0) {\n                    return res.data\n                } else {\n                    return Promise.reject(res)\n                }\n            })\n        },\n        activateContractHandler(data) {\n            var self = this;\n            var contract = self.data;\n            var contractId = contract.contractId\n            var source = data.source.data\n            var target = data.target.data\n            var nextState = target.state;\n\n            var triggerEvents = source.targetEvents.filter((event) => {\n                return event.nextState === nextState\n            })\n\n            if (triggerEvents.length === 0) {\n                return self.$message.error('没有可触发的事件')\n            } else {\n                triggerEvents.forEach((trigger) => {\n                    if (trigger.event.type === 'compoundEvents') {\n                        trigger.event.params.forEach((event) => {\n                            triggerHandler(event)\n                        })\n                    } else {\n                        triggerHandler(trigger.event)\n                    }\n                })\n            }\n\n            function triggerHandler(event) {\n                var promise;\n                if (event.type === 'signing') {\n                    promise = self.triggerLicense({\n                        contractId: contractId,\n                        eventId: event.eventId,\n                        licenseIds: event.params\n                    })\n                } else {\n                    promise = self.triggerContractState({\n                        contractId: contractId,\n                        eventId: event.eventId\n                    })\n                }\n\n                Promise.resolve(promise).then((data) => {\n                    if (data.ret === 0 && data.errcode === 0) {\n                        self.$message.success('操作成功');\n                        self.updateContractState(contract, nextState)\n                    } else {\n                        self.$message.error(data.msg)\n                    }\n                })\n            }\n        },\n        hidePopover(event) {\n            if (['circle', 'path'].includes(event.target.nodeName) || this.$refs.popover.$el.contains(event.target)) {\n                event.stopPropagation()\n            } else {\n                this.$refs.popover.showPopper = false\n            }\n        },\n        draw() {\n            if (!this.data.contractId) {\n                return\n            }\n            var result = parseContract(this.data)\n            setTreeNodePosition(result, this.opts)\n            var resolveData = formatNodes(result.nodeList)\n            Object.assign(this.opts, resolveData)\n            new DirectGraph(this.opts)\n        },\n        update(data) {\n            this.data = data;\n            this.draw()\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/ui-lib/contract-state/index.js","<template>\n    <div class=\"contract-state-wrap\" ref=\"wrapper\" @click=\"hidePopover\">\n        <el-popover\n                ref=\"popover\"\n                popper-class=\"tip js-svg-tip\"\n                width=\"250\">\n            <div>\n                <div v-show=\"popData.type == 'node'\">\n                    <h3>合同状态:{{popData.state}}</h3>\n                    <ul>\n                        <li v-show=\"popData.isActive\">当合同状态处于此状态时，合同则有效</li>\n                        <li v-show=\"popData.isProcess\">合同处于当前状态</li>\n                        <li v-show=\"popData.isFinish\">当前状态已执行过</li>\n                    </ul>\n                </div>\n                <div v-if=\"popData.type == 'path'&& popData.source\">\n                    <p>event name: {{popData.event.eventName}}</p>\n                    <p>from {{popData.source.data.state}} to {{popData.target.data.state}}</p>\n                    <el-button size=\"mini\" @click=\"activateContractHandler(popData)\" :disabled=\"popData.disabled\">trigger</el-button>\n                </div>\n            </div>\n        </el-popover>\n\n        <svg ref=\"stateTree\"></svg>\n    </div>\n</template>\n\n<script>\n    import ContractState from './index'\n\n    export default ContractState\n</script>\n\n<style lang=\"less\">\n    @import \"index.less\";\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/pagebuild/ui-lib/contract-state/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"wrapper\",staticClass:\"contract-state-wrap\",on:{\"click\":_vm.hidePopover}},[_c('el-popover',{ref:\"popover\",attrs:{\"popper-class\":\"tip js-svg-tip\",\"width\":\"250\"}},[_c('div',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.popData.type == 'node'),expression:\"popData.type == 'node'\"}]},[_c('h3',[_vm._v(\"合同状态:\"+_vm._s(_vm.popData.state))]),_vm._v(\" \"),_c('ul',[_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.popData.isActive),expression:\"popData.isActive\"}]},[_vm._v(\"当合同状态处于此状态时，合同则有效\")]),_vm._v(\" \"),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.popData.isProcess),expression:\"popData.isProcess\"}]},[_vm._v(\"合同处于当前状态\")]),_vm._v(\" \"),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.popData.isFinish),expression:\"popData.isFinish\"}]},[_vm._v(\"当前状态已执行过\")])])]),_vm._v(\" \"),(_vm.popData.type == 'path'&& _vm.popData.source)?_c('div',[_c('p',[_vm._v(\"event name: \"+_vm._s(_vm.popData.event.eventName))]),_vm._v(\" \"),_c('p',[_vm._v(\"from \"+_vm._s(_vm.popData.source.data.state)+\" to \"+_vm._s(_vm.popData.target.data.state))]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\",\"disabled\":_vm.popData.disabled},on:{\"click\":function($event){_vm.activateContractHandler(_vm.popData)}}},[_vm._v(\"trigger\")])],1):_vm._e()])]),_vm._v(\" \"),_c('svg',{ref:\"stateTree\"})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-44617055\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/pagebuild/ui-lib/contract-state/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!css-hot-loader!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!style-loader!css-loader!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-44617055\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!postcss-loader!less-loader!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-44617055\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/pagebuild/ui-lib/contract-state/index.vue\n// module id = null\n// module chunks = ","export const CONTRACT_STATUS = {\n    uncreated: -1,\n    initial: 1,\n    running: 2,\n    activated: 3,\n    userTerminated: 4,\n    sysTerminated: 5,\n    terminated: 6\n};\n\n\nexport const CONTRACT_STATUS_TIPS = {\n    '-1': '未创建合同',\n    1: '未开始执行',\n    2: '执行中',\n    3: '生效中',\n    4: '用户终止',\n    5: '系统终止',\n    6: '合同已终止'\n}\n\n\nexport const CONTRACT_STATUS_COLORS = {\n    '-1': 'warning',\n    1: 'warning',\n    2: '',\n    3: 'success',\n    4: 'info',\n    5: 'info',\n    6: 'info'\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/ui-lib/config.js","import {CONTRACT_STATUS, CONTRACT_STATUS_TIPS, CONTRACT_STATUS_COLORS} from '../config'\n\n\nexport default {\n    name: 'presentables',\n\n    data() {\n        return {\n            presentables: [],\n            CONTRACT_STATUS: CONTRACT_STATUS,\n            CONTRACT_STATUS_ACTION_TIPS: {\n                '-1': '去创建合同',\n                1: '去执行合同', //未开始执行\n                2: '去执行合同', //执行中\n                3: '合同生效中',\n                4: '用户终止合同',\n                5: '系统终止合同',\n                6: '合同已终止'\n            }\n        }\n    },\n    props: {\n        data: {\n            type: Array,\n            default() {\n                return null\n            }\n        }\n    },\n    mounted() {\n        this.formatPresentableList()\n        console.log(this.data)\n    },\n    watch: {\n        data: 'formatPresentableList'\n    },\n    methods: {\n        //todo 待分页\n        formatPresentableList() {\n            var self = this;\n            var presentables = self.data\n            presentables.forEach((presentable) => {\n                self.resovlePresentableStatus(presentable)\n            })\n\n            presentables = presentables.slice(0)\n            presentables.sort((p1, p2) => {\n                return (p1._contractStatus - p2._contractStatus)\n            })\n            console.log(presentables)\n            this.presentables = presentables\n        },\n        resovlePresentableStatus(presentable) {\n            if (presentable.contractDetail) {\n                presentable._contractStatus = presentable.contractDetail.status\n            } else {\n                presentable._contractStatus = CONTRACT_STATUS.uncreated\n            }\n\n            presentable.statusTip = {\n                text: CONTRACT_STATUS_TIPS[presentable._contractStatus] || 'n/a',\n                type: CONTRACT_STATUS_COLORS[presentable._contractStatus]\n            }\n        },\n        tabActionHandler(presentable) {\n            var tabConfig = {\n                content: 'contract-manager',\n                data: presentable,\n                title: '合同管理',\n                name: 'tab_' + presentable.presentableId\n            }\n\n            switch (presentable._contractStatus) {\n                case CONTRACT_STATUS.uncreated:\n                    Object.assign(tabConfig, {\n                        title: '创建合同',\n                        content: 'policy-manager',\n                        name: 'create_' + presentable.presentableId\n                    })\n                    break;\n                case CONTRACT_STATUS.initial:\n                    break;\n                case CONTRACT_STATUS.running:\n                    break;\n                case CONTRACT_STATUS.activated:\n                    break;\n                case CONTRACT_STATUS.userTerminated:\n                    break;\n                case CONTRACT_STATUS.sysTerminated:\n                    break;\n                case CONTRACT_STATUS.terminated:\n                    break;\n            }\n\n            this.$emit('tabChange', tabConfig)\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/ui-lib/presentables/index.js","<template>\n    <div style=\"width: 100%\">\n        <el-table\n                :data=\"presentables\"\n                stripe\n                cell-class-name=\"presentable-cell\">\n            <el-table-column\n                    label=\"资源名称\"\n                    min-width=\"250\"\n                    prop=\"tagInfo.resourceInfo.resourceName\">\n            </el-table-column>\n            <el-table-column\n                    label=\"合同名称\"\n                    min-width=\"250\"\n                    prop=\"name\">\n            </el-table-column>\n            <el-table-column\n                    label=\"资源类型\"\n                    prop=\"tagInfo.resourceInfo.resourceType\"\n                    width=\"120\">\n            </el-table-column>\n            <el-table-column\n                    min-width=\"120\"\n                    label=\"状态\">\n                <template slot-scope=\"scope\">\n                    <el-tag :type=\"scope.row.statusTip.type\">{{scope.row.statusTip.text}}</el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" align=\"center\" width=\"120\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                            size=\"mini\"\n                            @click=\"tabActionHandler(scope.row, scope.$index)\">\n                        {{CONTRACT_STATUS_ACTION_TIPS[scope.row._contractStatus]}}\n                    </el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n    </div>\n</template>\n\n<script>\n    import Presentables from './index.js'\n\n    export default Presentables\n</script>\n\n<style lang=\"less\">\n    .presentable-cell {\n        .cell {\n            word-break: keep-all;\n        }\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/pagebuild/ui-lib/presentables/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100%\"}},[_c('el-table',{attrs:{\"data\":_vm.presentables,\"stripe\":\"\",\"cell-class-name\":\"presentable-cell\"}},[_c('el-table-column',{attrs:{\"label\":\"资源名称\",\"min-width\":\"250\",\"prop\":\"tagInfo.resourceInfo.resourceName\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"合同名称\",\"min-width\":\"250\",\"prop\":\"name\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"资源类型\",\"prop\":\"tagInfo.resourceInfo.resourceType\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"min-width\":\"120\",\"label\":\"状态\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-tag',{attrs:{\"type\":scope.row.statusTip.type}},[_vm._v(_vm._s(scope.row.statusTip.text))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\",\"width\":\"120\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.tabActionHandler(scope.row, scope.$index)}}},[_vm._v(\"\\n                    \"+_vm._s(_vm.CONTRACT_STATUS_ACTION_TIPS[scope.row._contractStatus])+\"\\n                \")])]}}])})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3d4bd7b7\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/pagebuild/ui-lib/presentables/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!css-hot-loader!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!style-loader!css-loader!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3d4bd7b7\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!postcss-loader!less-loader!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3d4bd7b7\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/pagebuild/ui-lib/presentables/index.vue\n// module id = null\n// module chunks = ","export default {\n    name: 'contract-steps',\n\n    data() {\n        return {}\n    },\n    props: {\n        step: {\n            type: Number,\n            default() {\n                return 0\n            }\n        }\n    },\n    mounted() {\n    },\n    methods: {}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/ui-lib/contract-steps/index.js","<template>\n    <div>\n        <el-steps :active=\"step\" class=\"contract-steps\" finish-status=\"success\" simple>\n            <el-step title=\"1、创建合同\"></el-step>\n            <el-step title=\"2、执行合同\"></el-step>\n            <el-step title=\"3、有效合同\"></el-step>\n        </el-steps>\n    </div>\n</template>\n\n<script>\n    import ContractStep from './index.js'\n\n    export default ContractStep\n</script>\n\n<style scoped lang=\"less\">\n.contract-steps {\n    line-height: 1;\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/pagebuild/ui-lib/contract-steps/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-steps',{staticClass:\"contract-steps\",attrs:{\"active\":_vm.step,\"finish-status\":\"success\",\"simple\":\"\"}},[_c('el-step',{attrs:{\"title\":\"1、创建合同\"}}),_vm._v(\" \"),_c('el-step',{attrs:{\"title\":\"2、执行合同\"}}),_vm._v(\" \"),_c('el-step',{attrs:{\"title\":\"3、有效合同\"}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4774b55e\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/pagebuild/ui-lib/contract-steps/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!css-hot-loader!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!style-loader!css-loader!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4774b55e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!postcss-loader!less-loader!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4774b55e\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4774b55e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/pagebuild/ui-lib/contract-steps/index.vue\n// module id = null\n// module chunks = ","import {CONTRACT_STATUS_TIPS} from '../config'\n\nexport default {\n    name: 'presentable-detail',\n    data(){\n      return {\n          CONTRACT_STATUS_TIPS: CONTRACT_STATUS_TIPS\n      }\n    },\n    props: {\n        data: {\n            type: Object,\n            default() {\n                return null\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/ui-lib/presentable-detail/index.js","<template>\n    <div class=\"presentable-detail\">\n        <ul class=\"presentable-info\">\n            <li>\n                <label class=\"info-title\">presentable名：</label>\n                <span class=\"info-content\">{{data.name}}</span>\n            </li>\n            <li>\n                <label class=\"info-title\">资源名：</label>\n                <span class=\"info-content\">{{data.resourceDetail.resourceName}}</span>\n            </li>\n            <li>\n                <label class=\"info-title\">资源类型：</label>\n                <span class=\"info-content\">{{data.resourceDetail.resourceType}}</span>\n            </li>\n            <template v-if=\"data.contractDetail\">\n                <li>\n                    <label class=\"info-title\">合同状态：</label>\n                    <span class=\"info-content\">{{CONTRACT_STATUS_TIPS[data.contractDetail.status]}}</span>\n                </li>\n                <li>\n                    <label class=\"info-title\">合同用户：</label>\n                    <span class=\"info-content\">{{data.contractDetail._userGroup}}</span>\n                </li>\n                <li>\n                    <label class=\"info-title\">合同甲方：</label>\n                    <span class=\"info-content\">{{data.contractDetail.partyOne}}</span>\n                </li>\n                <li>\n                    <label class=\"info-title\">合同乙方：</label>\n                    <span class=\"info-content\">{{data.contractDetail.partyTwo}}</span>\n                </li>\n                <li>\n                    <label class=\"info-title\">合同创建时间：</label>\n                    <span class=\"info-content\">{{data.contractDetail.createDate|fmtDate}}</span>\n                </li>\n                <li>\n                    <label class=\"info-title\">合同当前状态：</label>\n                    <span class=\"info-content\">{{data.contractDetail.fsmState}}</span>\n                </li>\n            </template>\n        </ul>\n    </div>\n</template>\n\n<script>\n    import PresentableDetail from './index.js'\n\n    export default PresentableDetail\n</script>\n\n<style scoped lang=\"less\">\n    @import \"index.less\";\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/pagebuild/ui-lib/presentable-detail/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"presentable-detail\"},[_c('ul',{staticClass:\"presentable-info\"},[_c('li',[_c('label',{staticClass:\"info-title\"},[_vm._v(\"presentable名：\")]),_vm._v(\" \"),_c('span',{staticClass:\"info-content\"},[_vm._v(_vm._s(_vm.data.name))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"info-title\"},[_vm._v(\"资源名：\")]),_vm._v(\" \"),_c('span',{staticClass:\"info-content\"},[_vm._v(_vm._s(_vm.data.resourceDetail.resourceName))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"info-title\"},[_vm._v(\"资源类型：\")]),_vm._v(\" \"),_c('span',{staticClass:\"info-content\"},[_vm._v(_vm._s(_vm.data.resourceDetail.resourceType))])]),_vm._v(\" \"),(_vm.data.contractDetail)?[_c('li',[_c('label',{staticClass:\"info-title\"},[_vm._v(\"合同状态：\")]),_vm._v(\" \"),_c('span',{staticClass:\"info-content\"},[_vm._v(_vm._s(_vm.CONTRACT_STATUS_TIPS[_vm.data.contractDetail.status]))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"info-title\"},[_vm._v(\"合同用户：\")]),_vm._v(\" \"),_c('span',{staticClass:\"info-content\"},[_vm._v(_vm._s(_vm.data.contractDetail._userGroup))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"info-title\"},[_vm._v(\"合同甲方：\")]),_vm._v(\" \"),_c('span',{staticClass:\"info-content\"},[_vm._v(_vm._s(_vm.data.contractDetail.partyOne))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"info-title\"},[_vm._v(\"合同乙方：\")]),_vm._v(\" \"),_c('span',{staticClass:\"info-content\"},[_vm._v(_vm._s(_vm.data.contractDetail.partyTwo))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"info-title\"},[_vm._v(\"合同创建时间：\")]),_vm._v(\" \"),_c('span',{staticClass:\"info-content\"},[_vm._v(_vm._s(_vm._f(\"fmtDate\")(_vm.data.contractDetail.createDate)))])]),_vm._v(\" \"),_c('li',[_c('label',{staticClass:\"info-title\"},[_vm._v(\"合同当前状态：\")]),_vm._v(\" \"),_c('span',{staticClass:\"info-content\"},[_vm._v(_vm._s(_vm.data.contractDetail.fsmState))])])]:_vm._e()],2)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-f6f6185a\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/pagebuild/ui-lib/presentable-detail/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!css-hot-loader!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!style-loader!css-loader!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f6f6185a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!postcss-loader!less-loader!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-f6f6185a\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-f6f6185a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/pagebuild/ui-lib/presentable-detail/index.vue\n// module id = null\n// module chunks = ","import ContractSteps from '../contract-steps/index.vue'\nimport ContractState from '@/pages/pagebuild/ui-lib/contract-state/index.vue'\nimport PresentableDetail from '../presentable-detail/index.vue'\n\nimport {CONTRACT_STATUS_TIPS} from '../config'\n\nexport default {\n    name: 'contract-manager',\n\n    data() {\n        return {\n            CONTRACT_STATUS_TIPS: CONTRACT_STATUS_TIPS\n        }\n    },\n    components: {ContractState, ContractSteps, PresentableDetail},\n    props: {\n        data: {\n            type: Object,\n            default() {\n                return null\n            }\n        }\n    },\n    watch: {\n        'data': 'formatData'\n    },\n    mounted() {\n        console.log(this.data)\n        this.formatData()\n    },\n    methods: {\n        formatData() {\n            var data = this.data\n\n            var userGroup = data.contractDetail.policySegment.users.reduce((users, item) => {\n                users = users.concat(item.users)\n                return users\n            }, [])\n\n            console.log(data.contractDetail.status)\n            this.$set(this.data, '_showContractSteps', data.contractDetail.status < 3)\n            this.$set(data.contractDetail, '_userGroup', userGroup.join('/'))\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/ui-lib/contract/index.js","<template>\n    <div>\n        <contract-steps :step=\"1\" v-show=\"data._showContractSteps\"></contract-steps>\n\n        <presentable-detail class=\"contract-detail\" :data=\"data\"></presentable-detail>\n\n        <div>\n            <h3 class=\"contract-title\">合同流程</h3>\n            <contract-state class=\"contract-state-chart\" :data=\"data.contractDetail\"></contract-state>\n        </div>\n    </div>\n</template>\n\n<script>\n    import Contract from './index.js'\n\n    export default Contract\n</script>\n\n<style scoped lang=\"less\">\n    .contract-detail {\n        margin-top: 15px;\n    }\n\n    .contract-title {\n        margin-bottom: 6px;\n        text-align: center;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/pagebuild/ui-lib/contract/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('contract-steps',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.data._showContractSteps),expression:\"data._showContractSteps\"}],attrs:{\"step\":1}}),_vm._v(\" \"),_c('presentable-detail',{staticClass:\"contract-detail\",attrs:{\"data\":_vm.data}}),_vm._v(\" \"),_c('div',[_c('h3',{staticClass:\"contract-title\"},[_vm._v(\"合同流程\")]),_vm._v(\" \"),_c('contract-state',{staticClass:\"contract-state-chart\",attrs:{\"data\":_vm.data.contractDetail}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-f646cf76\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/pagebuild/ui-lib/contract/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!css-hot-loader!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!style-loader!css-loader!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-f646cf76\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!postcss-loader!less-loader!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-f646cf76\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-f646cf76\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/pagebuild/ui-lib/contract/index.vue\n// module id = null\n// module chunks = ","import compiler from 'freelog_policy_compiler'\nimport ContractSteps from '../contract-steps/index.vue'\nimport PresentableDetail from '../presentable-detail/index.vue'\n//创建合同\nexport default {\n    name: 'policy-manager',\n\n    data() {\n        return {\n            loading: false,\n            btnType: ''\n        }\n    },\n    props: {\n        data: {\n            type: Object,\n            default() {\n                return null\n            }\n        },\n        tabName: String\n    },\n    watch: {\n        data: 'formatPolicy'\n    },\n\n    components: {ContractSteps, PresentableDetail},\n    mounted() {\n        this.formatPolicy()\n    },\n    methods: {\n        formatPolicy() {\n            var formatContractDetail = compiler.compile(this.data.policyText, 'beautify')\n            if (!formatContractDetail.errorMsg) {\n                var formatPolicyText = formatContractDetail.stringArray.splice(1).join(' ').replace(/\\n\\s/g, '\\n');\n                this.$set(this.data, '_formatPolicyText', formatPolicyText)\n            } else {\n                this.$message.error(formatContractDetail.errorMsg)\n            }\n\n            console.log(this.data)\n            this.parsePolicy(this.data)\n        },\n        parsePolicy(data) {\n            var segments = []\n            data.policy.forEach(function (block) {\n                var segment = {\n                    detail: block,\n                    states: block.fsmDescription,\n                    selected: false\n                }\n\n                block._userGroup = block.users.reduce((userGroup, item) => {\n                    userGroup = userGroup.concat(item.users)\n                    return userGroup\n                }, []).join('/')\n\n                segments.push(segment)\n            })\n\n            this.$set(this.data, 'segments', segments)\n        },\n        policyHandler() {\n            if (this.btnType) {\n                this.gotoExecuteContract()\n            } else {\n                this.signPolicyHandler()\n            }\n        },\n        gotoExecuteContract() {\n            var tabConfig = {\n                content: 'contract-manager',\n                data: this.data,\n                title: '合同管理',\n                name: 'tab_' + this.data.presentableId\n            }\n            this.$emit('tabChange', {\n                action: 'close',\n                tabName: this.tabName\n            })\n            this.$emit('tabChange', tabConfig)\n        },\n        signPolicyHandler() {\n            var self = this;\n            var policyData = self.data\n            if (!policyData.selectedSegmentId) {\n                return this.$message.warning('没有选择策略')\n            }\n\n            var tip = `presentable name: ${policyData.name}, resource name: ${policyData.resourceDetail.resourceName}`\n            this.$confirm(`<h3>合同详情</h3><p>${tip}。</p>确定签约合同？`, '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                dangerouslyUseHTMLString: true,\n                type: 'warning'\n            }).then(() => {\n                self.createContract(policyData)\n            }).catch(() => {\n                //取消\n            });\n        },\n        createContract(policyData) {\n            var self = this;\n            if (self.loading) {\n                return\n            }\n            self.loading = true\n            window.QI.fetch('//api.freelog.com/v1/contracts', {\n                method: 'POST',\n                data: {\n                    contractType: 3,\n                    targetId: policyData.presentableId,\n                    segmentId: policyData.selectedSegmentId,\n                    serialNumber: policyData.serialNumber,\n                    partyTwo: window.__auth_info__.__auth_user_id__\n                }\n            }).then((res) => {\n                return res.json()\n            }).then((data) => {\n                self.loading = false\n                if (data.ret === 0 && data.errcode === 0) {\n                    self.btnType = 'success'\n                    self.$message.success('签约成功')\n                    self.$set(self.data, 'contractDetail', data.data)\n                } else {\n                    self.$message.error(data.msg)\n                }\n            })\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/ui-lib/policy/index.js","<template>\n    <div>\n        <contract-steps></contract-steps>\n\n        <presentable-detail :data=\"data\"></presentable-detail>\n\n        <el-table\n                :data=\"data.segments\"\n                stripe\n                class=\"segments\"\n                style=\"width: 100%\">\n            <el-table-column type=\"expand\">\n                <template slot-scope=\"props\">\n                    <pre>{{props.row.policyText || data._formatPolicyText}}</pre>\n                </template>\n            </el-table-column>\n            <el-table-column\n                    label=\"用户\"\n                    prop=\"detail._userGroup\">\n            </el-table-column>\n            <el-table-column\n                    label=\"合同ID\"\n                    prop=\"detail.segmentId\">\n            </el-table-column>\n            <el-table-column>\n                <template slot-scope=\"scope\">\n                    <el-radio class=\"select-btn\" v-model=\"data.selectedSegmentId\"\n                              :label=\"scope.row.detail.segmentId\">选择\n                    </el-radio>\n                </template>\n            </el-table-column>\n        </el-table>\n        <div class=\"actions\">\n            <el-button @click=\"policyHandler\"\n                       v-loading=\"loading\"\n                       :type=\"btnType\"\n                       :disabled=\"!data.selectedSegmentId\">{{btnType?'去执行合同': '创建合同'}}\n            </el-button>\n        </div>\n    </div>\n</template>\n\n<script>\n    import Policy from './index.js'\n\n    export default Policy\n</script>\n\n\n<style lang=\"less\" scoped>\n    .segments {\n        margin-top: 15px;\n    }\n\n    .actions {\n        margin-top: 10px;\n        text-align: center;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/pagebuild/ui-lib/policy/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('contract-steps'),_vm._v(\" \"),_c('presentable-detail',{attrs:{\"data\":_vm.data}}),_vm._v(\" \"),_c('el-table',{staticClass:\"segments\",staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.data.segments,\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('pre',[_vm._v(_vm._s(props.row.policyText || _vm.data._formatPolicyText))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"用户\",\"prop\":\"detail._userGroup\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"合同ID\",\"prop\":\"detail.segmentId\"}}),_vm._v(\" \"),_c('el-table-column',{scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-radio',{staticClass:\"select-btn\",attrs:{\"label\":scope.row.detail.segmentId},model:{value:(_vm.data.selectedSegmentId),callback:function ($$v) {_vm.$set(_vm.data, \"selectedSegmentId\", $$v)},expression:\"data.selectedSegmentId\"}},[_vm._v(\"选择\\n                \")])]}}])})],1),_vm._v(\" \"),_c('div',{staticClass:\"actions\"},[_c('el-button',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"type\":_vm.btnType,\"disabled\":!_vm.data.selectedSegmentId},on:{\"click\":_vm.policyHandler}},[_vm._v(_vm._s(_vm.btnType?'去执行合同': '创建合同')+\"\\n        \")])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-9b6660fa\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/pagebuild/ui-lib/policy/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!css-hot-loader!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!style-loader!css-loader!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-9b6660fa\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!postcss-loader!less-loader!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-9b6660fa\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-9b6660fa\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/pagebuild/ui-lib/policy/index.vue\n// module id = null\n// module chunks = ","<template>\n    <div id=\"app\">\n        <tool-bar ref=\"toolbar\"></tool-bar>\n        <el-dialog\n                :close-on-click-modal=\"false\"\n                title=\"合同管理\"\n                :visible.sync=\"shouldShowAuthDialog\"\n                :fullscreen=\"false\"\n                custom-class=\"auth-dialog\"\n                @close=\"_closeDialogHandler\"\n                width=\"960px\"\n                center>\n            <el-tabs v-model=\"activeTabName\" type=\"card\" @tab-remove=\"_removeTab\">\n                <el-tab-pane label=\"presentable list\" name=\"presentables\">\n                    <presentables :data=\"presentables\" @tabChange=\"_tabChange\"></presentables>\n                </el-tab-pane>\n                <el-tab-pane\n                        closable\n                        :key=\"item.name\"\n                        v-for=\"(item, index) in tabs\"\n                        :label=\"item.title\"\n                        :name=\"item.name\">\n                    <component :is=\"item.content\" :tab-name=\"item.name\" :data=\"item.data\"\n                               @tabChange=\"_tabChange\"></component>\n                </el-tab-pane>\n            </el-tabs>\n        </el-dialog>\n    </div>\n</template>\n\n\n<script>\n    import ToolBar from '@/components/toolbar/index.vue'\n    import ContractState from './ui-lib/contract-state/index.vue'\n    import Presentables from './ui-lib/presentables/index.vue'\n    import Contract from './ui-lib/contract/index.vue'\n    import Policy from './ui-lib/policy/index.vue'\n\n    export default {\n        data() {\n            return {\n                shouldShowAuthDialog: true,\n                presentables: [],\n                tabs: [],\n                activeTabName: 'presentables'\n            }\n        },\n        components: {\n            ToolBar,\n            ContractState,\n            Presentables,\n            'contract-manager': Contract,\n            'policy-manager': Policy\n        },\n        mounted() {\n            //表示UI框架渲染完成，可调用\n            this.$emit('ready', this)\n        },\n        methods: {\n            _tabChange(data) {\n                //关闭tab\n                if (data.action === 'close') {\n                    this._removeTab(data.tabName)\n                } else {\n                    var isExisted = this.tabs.some((tab) => {\n                        return tab.name === data.name\n                    })\n\n                    if (!isExisted) {\n                        this.tabs.push(data);\n                    }\n                    this.activeTabName = data.name;\n                }\n            },\n            _removeTab(targetName) {\n                let activeName = this.activeTabName;\n                if (activeName === targetName) {\n                    this.tabs.forEach((tab, index) => {\n                        if (tab.name === targetName) {\n                            let nextTab = this.tabs[index + 1] || this.tabs[index - 1];\n                            if (nextTab) {\n                                activeName = nextTab.name;\n                            } else {\n                                activeName = null\n                            }\n                        }\n                    });\n                }\n\n                this.activeTabName = activeName || 'presentables';\n                this.tabs = this.tabs.filter((t) => {\n                    return t.name !== targetName\n                })\n            },\n            _closeDialogHandler() {\n                //todo call callbacks\n                this.$emit('close')\n            },\n            showAuthDialog() {\n                this.shouldShowAuthDialog = true;\n            },\n            appendData(data) {\n                this.presentables.push(data)\n            },\n            showToolBar() {\n                this.$refs.toolbar.show()\n            },\n            hideToolBar() {\n                this.$refs.toolbar.hide()\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    @import \"./app.less\";\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/pagebuild/app.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('tool-bar',{ref:\"toolbar\"}),_vm._v(\" \"),_c('el-dialog',{attrs:{\"close-on-click-modal\":false,\"title\":\"合同管理\",\"visible\":_vm.shouldShowAuthDialog,\"fullscreen\":false,\"custom-class\":\"auth-dialog\",\"width\":\"960px\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.shouldShowAuthDialog=$event},\"close\":_vm._closeDialogHandler}},[_c('el-tabs',{attrs:{\"type\":\"card\"},on:{\"tab-remove\":_vm._removeTab},model:{value:(_vm.activeTabName),callback:function ($$v) {_vm.activeTabName=$$v},expression:\"activeTabName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"presentable list\",\"name\":\"presentables\"}},[_c('presentables',{attrs:{\"data\":_vm.presentables},on:{\"tabChange\":_vm._tabChange}})],1),_vm._v(\" \"),_vm._l((_vm.tabs),function(item,index){return _c('el-tab-pane',{key:item.name,attrs:{\"closable\":\"\",\"label\":item.title,\"name\":item.name}},[_c(item.content,{tag:\"component\",attrs:{\"tab-name\":item.name,\"data\":item.data},on:{\"tabChange\":_vm._tabChange}})],1)})],2)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3541c136\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/pagebuild/app.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!css-hot-loader!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!style-loader!css-loader!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3541c136\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!postcss-loader!less-loader!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./app.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./app.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3541c136\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./app.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3541c136\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/pagebuild/app.vue\n// module id = null\n// module chunks = ","//异常对应的handler函数名\nconst EventCode = {\n    invalidResponse: 'errorResponseHandler',\n    showSystemDialog: 'showDialogHandler',\n    showToolBar: 'showToolBarHandler',\n}\n\n\nexport default EventCode\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/event_code.js","function Extend(that) {\r\n  that.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\r\n    this.errorMsg = msg;\r\n  };\r\n}\r\nmodule.exports = Extend;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/freelog_policy_compiler/ErrorListenerExtend.js\n// module id = mywV\n// module chunks = 0 1","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.ATN = require('./ATN').ATN;\nexports.ATNDeserializer = require('./ATNDeserializer').ATNDeserializer;\nexports.LexerATNSimulator = require('./LexerATNSimulator').LexerATNSimulator;\nexports.ParserATNSimulator = require('./ParserATNSimulator').ParserATNSimulator;\nexports.PredictionMode = require('./PredictionMode').PredictionMode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/index.js\n// module id = pHgc\n// module chunks = 0 1","/*! https://mths.be/fromcodepoint v0.2.1 by @mathias */\nif (!String.fromCodePoint) {\n\t(function() {\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\tvar floor = Math.floor;\n\t\tvar fromCodePoint = function(_) {\n\t\t\tvar MAX_SIZE = 0x4000;\n\t\t\tvar codeUnits = [];\n\t\t\tvar highSurrogate;\n\t\t\tvar lowSurrogate;\n\t\t\tvar index = -1;\n\t\t\tvar length = arguments.length;\n\t\t\tif (!length) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tvar result = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvar codePoint = Number(arguments[index]);\n\t\t\t\tif (\n\t\t\t\t\t!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n\t\t\t\t\tcodePoint < 0 || // not a valid Unicode code point\n\t\t\t\t\tcodePoint > 0x10FFFF || // not a valid Unicode code point\n\t\t\t\t\tfloor(codePoint) != codePoint // not an integer\n\t\t\t\t) {\n\t\t\t\t\tthrow RangeError('Invalid code point: ' + codePoint);\n\t\t\t\t}\n\t\t\t\tif (codePoint <= 0xFFFF) { // BMP code point\n\t\t\t\t\tcodeUnits.push(codePoint);\n\t\t\t\t} else { // Astral code point; split in surrogate halves\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\tcodePoint -= 0x10000;\n\t\t\t\t\thighSurrogate = (codePoint >> 10) + 0xD800;\n\t\t\t\t\tlowSurrogate = (codePoint % 0x400) + 0xDC00;\n\t\t\t\t\tcodeUnits.push(highSurrogate, lowSurrogate);\n\t\t\t\t}\n\t\t\t\tif (index + 1 == length || codeUnits.length > MAX_SIZE) {\n\t\t\t\t\tresult += stringFromCharCode.apply(null, codeUnits);\n\t\t\t\t\tcodeUnits.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String, 'fromCodePoint', {\n\t\t\t\t'value': fromCodePoint,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.fromCodePoint = fromCodePoint;\n\t\t}\n\t}());\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/polyfills/fromcodepoint.js\n// module id = pr/i\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n// Provides an empty default implementation of {@link ANTLRErrorListener}. The\n// default implementation of each method does nothing, but can be overridden as\n// necessary.\n\nfunction ErrorListener() {\n\treturn this;\n}\n\nErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n};\n\nErrorListener.prototype.reportAmbiguity = function(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n};\n\nErrorListener.prototype.reportAttemptingFullContext = function(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n};\n\nErrorListener.prototype.reportContextSensitivity = function(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n};\n\nfunction ConsoleErrorListener() {\n\tErrorListener.call(this);\n\treturn this;\n}\n\nConsoleErrorListener.prototype = Object.create(ErrorListener.prototype);\nConsoleErrorListener.prototype.constructor = ConsoleErrorListener;\n\n//\n// Provides a default instance of {@link ConsoleErrorListener}.\n//\nConsoleErrorListener.INSTANCE = new ConsoleErrorListener();\n\n//\n// {@inheritDoc}\n//\n// <p>\n// This implementation prints messages to {@link System//err} containing the\n// values of {@code line}, {@code charPositionInLine}, and {@code msg} using\n// the following format.</p>\n//\n// <pre>\n// line <em>line</em>:<em>charPositionInLine</em> <em>msg</em>\n// </pre>\n//\nConsoleErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    console.error(\"line \" + line + \":\" + column + \" \" + msg);\n};\n\nfunction ProxyErrorListener(delegates) {\n\tErrorListener.call(this);\n    if (delegates===null) {\n        throw \"delegates\";\n    }\n    this.delegates = delegates;\n\treturn this;\n}\n\nProxyErrorListener.prototype = Object.create(ErrorListener.prototype);\nProxyErrorListener.prototype.constructor = ProxyErrorListener;\n\nProxyErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    this.delegates.map(function(d) { d.syntaxError(recognizer, offendingSymbol, line, column, msg, e); });\n};\n\nProxyErrorListener.prototype.reportAmbiguity = function(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs) {\n    this.delegates.map(function(d) { d.reportAmbiguity(recognizer, dfa, startIndex, stopIndex, exact, ambigAlts, configs); });\n};\n\nProxyErrorListener.prototype.reportAttemptingFullContext = function(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs) {\n\tthis.delegates.map(function(d) { d.reportAttemptingFullContext(recognizer, dfa, startIndex, stopIndex, conflictingAlts, configs); });\n};\n\nProxyErrorListener.prototype.reportContextSensitivity = function(recognizer, dfa, startIndex, stopIndex, prediction, configs) {\n\tthis.delegates.map(function(d) { d.reportContextSensitivity(recognizer, dfa, startIndex, stopIndex, prediction, configs); });\n};\n\nexports.ErrorListener = ErrorListener;\nexports.ConsoleErrorListener = ConsoleErrorListener;\nexports.ProxyErrorListener = ProxyErrorListener;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/error/ErrorListener.js\n// module id = qFmK\n// module chunks = 0 1","export default {\n    start() {\n        var self = this\n        var authInfo = window.__auth_info__;\n        var authErrorData = authInfo.__auth_error_info__\n\n        if (!authErrorData) {\n            self.loadWidgets()\n        } else {\n            window.FreeLogApp.trigger(window.FreeLogApp.EventCode.invalidResponse, {\n                data: authErrorData || {}\n            })\n        }\n    },\n    getWidgets() {\n        var $page = document.querySelector('#js-page-container')\n        var $widgets = $page.querySelectorAll('.js-wc-widget');\n        return $widgets\n    },\n    importHtml(opt) {\n        const htmlFile = new File([opt.content], opt.name, {\n            type: opt.type || 'text/html'\n        })\n        const objectURL = window.URL.createObjectURL(htmlFile);\n        const link = document.createElement('link');\n        link.rel = 'import';\n        link.href = objectURL;\n        document.head.appendChild(link);\n    },\n    parseWidgetPresentable(res) {\n        var systemMeta = res.headers.get('freelog-system-meta')\n        systemMeta = JSON.parse(systemMeta)\n        res.text().then((content) => {\n            this.importHtml({\n                name: systemMeta.widgetName,\n                content: content,\n                type: systemMeta.mimeType\n            })\n        })\n    },\n    triggerPresentableAuth(res) {\n        res.json().then(function (data) {\n            window.FreeLogApp.trigger(window.FreeLogApp.EventCode.invalidResponse, {data})\n        })\n    },\n    loadWidgets() {\n        var self = this;\n        var $widgets = this.getWidgets()\n        Array.from($widgets).forEach(function (widget) {\n            var prensentableId = widget.getAttribute('data-widget-presentable-id');\n            if (prensentableId) {\n                window.QI.fetchPresentable(`${prensentableId}.data`)\n                    .then((res) => {\n                        if (res.headers.get('freelog-contract-id')) {\n                            self.parseWidgetPresentable(res)\n                        } else {\n                            self.triggerPresentableAuth(res)\n                        }\n                    })\n                    .catch((err) => {\n                        console.error(err)\n                    })\n            } else {\n                //还没授权\n            }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pagebuild/parser.js","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/underscore/underscore.js\n// module id = rdLu\n// module chunks = 0 1","// removed by extract-text-webpack-plugin\n    if(module.hot) {\n      // 1514363258078\n      var cssReload = require(\"../../../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-hot-loader!./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-44617055\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/pagebuild/ui-lib/contract-state/index.vue\n// module id = s8ra\n// module chunks = 0 1","// Generated from policy.g4 by ANTLR 4.7\r\n// jshint ignore: start\r\nvar antlr4 = require('antlr4/index');\r\n\r\n\r\nvar serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\\u5964\",\r\n    \"\\u00027\\u0287\\b\\u0001\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\",\r\n    \"\\u0004\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\\t\",\r\n    \"\\u0007\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\",\r\n    \"\\f\\t\\f\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\",\r\n    \"\\t\\u0010\\u0004\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\",\r\n    \"\\u0004\\u0014\\t\\u0014\\u0004\\u0015\\t\\u0015\\u0004\\u0016\\t\\u0016\\u0004\\u0017\",\r\n    \"\\t\\u0017\\u0004\\u0018\\t\\u0018\\u0004\\u0019\\t\\u0019\\u0004\\u001a\\t\\u001a\",\r\n    \"\\u0004\\u001b\\t\\u001b\\u0004\\u001c\\t\\u001c\\u0004\\u001d\\t\\u001d\\u0004\\u001e\",\r\n    \"\\t\\u001e\\u0004\\u001f\\t\\u001f\\u0004 \\t \\u0004!\\t!\\u0004\\\"\\t\\\"\\u0004#\",\r\n    \"\\t#\\u0004$\\t$\\u0004%\\t%\\u0004&\\t&\\u0004\\'\\t\\'\\u0004(\\t(\\u0004)\\t)\\u0004\",\r\n    \"*\\t*\\u0004+\\t+\\u0004,\\t,\\u0004-\\t-\\u0004.\\t.\\u0004/\\t/\\u00040\\t0\\u0004\",\r\n    \"1\\t1\\u00042\\t2\\u00043\\t3\\u00044\\t4\\u00045\\t5\\u00046\\t6\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\\u0002\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\\u0003\",\r\n    \"\\u0004\\u0003\\u0004\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\",\r\n    \"\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0006\\u0003\",\r\n    \"\\u0006\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\\u0007\\u0003\",\r\n    \"\\u0007\\u0003\\u0007\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\",\r\n    \"\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\b\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\",\r\n    \"\\t\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\",\r\n    \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\",\r\n    \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\",\r\n    \"\\u000b\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\\f\\u0003\",\r\n    \"\\f\\u0003\\f\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\\r\\u0003\",\r\n    \"\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\",\r\n    \"\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\",\r\n    \"\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\",\r\n    \"\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000e\\u0003\\u000f\\u0003\\u000f\",\r\n    \"\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\",\r\n    \"\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u000f\\u0003\\u0010\",\r\n    \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\",\r\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\",\r\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\",\r\n    \"\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\\u0003\\u0011\",\r\n    \"\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\",\r\n    \"\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\",\r\n    \"\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\\u0003\\u0012\",\r\n    \"\\u0003\\u0012\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\",\r\n    \"\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0013\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\",\r\n    \"\\u0003\\u0014\\u0003\\u0014\\u0003\\u0014\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\\u0003\\u0015\",\r\n    \"\\u0003\\u0015\\u0003\\u0015\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\",\r\n    \"\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\",\r\n    \"\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\\u0003\\u0016\",\r\n    \"\\u0003\\u0017\\u0003\\u0017\\u0003\\u0018\\u0003\\u0018\\u0003\\u0019\\u0003\\u0019\",\r\n    \"\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\",\r\n    \"\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\",\r\n    \"\\u0003\\u001a\\u0003\\u001a\\u0003\\u001a\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\",\r\n    \"\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\\u0003\\u001b\",\r\n    \"\\u0003\\u001b\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\",\r\n    \"\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\\u0003\\u001c\",\r\n    \"\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\",\r\n    \"\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\",\r\n    \"\\u0003\\u001d\\u0003\\u001d\\u0003\\u001d\\u0003\\u001e\\u0003\\u001e\\u0003\\u001e\",\r\n    \"\\u0003\\u001e\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\",\r\n    \"\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003\\u001f\\u0003 \\u0003 \\u0003\",\r\n    \" \\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003 \\u0003!\\u0003!\\u0003!\\u0003\",\r\n    \"!\\u0003!\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003\\\"\\u0003#\\u0003#\\u0003\",\r\n    \"#\\u0003#\\u0003#\\u0003#\\u0003$\\u0003$\\u0003$\\u0003$\\u0003%\\u0003%\\u0003\",\r\n    \"%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003%\\u0003&\\u0003\",\r\n    \"&\\u0003&\\u0003&\\u0003&\\u0003&\\u0003\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0003\",\r\n    \"\\'\\u0003\\'\\u0003\\'\\u0003\\'\\u0003(\\u0003(\\u0003(\\u0003)\\u0003)\\u0003\",\r\n    \")\\u0003*\\u0003*\\u0003*\\u0003+\\u0003+\\u0003+\\u0003+\\u0003+\\u0003+\\u0003\",\r\n    \"+\\u0003+\\u0003+\\u0003+\\u0003,\\u0003,\\u0003,\\u0003,\\u0003,\\u0003,\\u0003\",\r\n    \",\\u0003,\\u0005,\\u0247\\n,\\u0003-\\u0003-\\u0003-\\u0003-\\u0003-\\u0003-\\u0003\",\r\n    \"-\\u0003-\\u0003.\\u0003.\\u0003.\\u0003.\\u0003.\\u0003.\\u0003.\\u0003/\\u0003\",\r\n    \"/\\u0003/\\u0003/\\u00030\\u00030\\u00030\\u00030\\u00030\\u00031\\u00031\\u0003\",\r\n    \"1\\u00031\\u00031\\u00031\\u00031\\u00031\\u00032\\u00032\\u00032\\u00032\\u0003\",\r\n    \"2\\u00032\\u00032\\u00032\\u00033\\u00063\\u0272\\n3\\r3\\u000e3\\u0273\\u0003\",\r\n    \"4\\u00064\\u0277\\n4\\r4\\u000e4\\u0278\\u00034\\u00034\\u00035\\u00065\\u027e\",\r\n    \"\\n5\\r5\\u000e5\\u027f\\u00036\\u00036\\u00036\\u00036\\u00036\\u00036\\u0002\",\r\n    \"\\u00027\\u0003\\u0003\\u0005\\u0004\\u0007\\u0005\\t\\u0006\\u000b\\u0007\\r\\b\",\r\n    \"\\u000f\\t\\u0011\\n\\u0013\\u000b\\u0015\\f\\u0017\\r\\u0019\\u000e\\u001b\\u000f\",\r\n    \"\\u001d\\u0010\\u001f\\u0011!\\u0012#\\u0013%\\u0014\\'\\u0015)\\u0016+\\u0017\",\r\n    \"-\\u0018/\\u00191\\u001a3\\u001b5\\u001c7\\u001d9\\u001e;\\u001f= ?!A\\\"C#E$\",\r\n    \"G%I&K\\'M(O)Q*S+U,W-Y.[/]0_1a2c3e4g5i6k7\\u0003\\u0002\\u0005\\u0005\\u0002\",\r\n    \"C\\\\aac|\\u0005\\u0002\\u000b\\f\\u000f\\u000f\\\"\\\"\\u0003\\u00022;\\u0002\\u028a\",\r\n    \"\\u0002\\u0003\\u0003\\u0002\\u0002\\u0002\\u0002\\u0005\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u0007\\u0003\\u0002\\u0002\\u0002\\u0002\\t\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u000b\\u0003\\u0002\\u0002\\u0002\\u0002\\r\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u000f\\u0003\\u0002\\u0002\\u0002\\u0002\\u0011\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u0013\\u0003\\u0002\\u0002\\u0002\\u0002\\u0015\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u0017\\u0003\\u0002\\u0002\\u0002\\u0002\\u0019\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u001b\\u0003\\u0002\\u0002\\u0002\\u0002\\u001d\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002\\u001f\\u0003\\u0002\\u0002\\u0002\\u0002!\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002#\\u0003\\u0002\\u0002\\u0002\\u0002%\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"\\'\\u0003\\u0002\\u0002\\u0002\\u0002)\\u0003\\u0002\\u0002\\u0002\\u0002+\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002-\\u0003\\u0002\\u0002\\u0002\\u0002/\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u00021\\u0003\\u0002\\u0002\\u0002\\u00023\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00025\\u0003\\u0002\\u0002\\u0002\\u00027\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00029\\u0003\\u0002\\u0002\\u0002\\u0002;\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"=\\u0003\\u0002\\u0002\\u0002\\u0002?\\u0003\\u0002\\u0002\\u0002\\u0002A\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002C\\u0003\\u0002\\u0002\\u0002\\u0002E\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002G\\u0003\\u0002\\u0002\\u0002\\u0002I\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002K\\u0003\\u0002\\u0002\\u0002\\u0002M\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002O\\u0003\\u0002\\u0002\\u0002\\u0002Q\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"S\\u0003\\u0002\\u0002\\u0002\\u0002U\\u0003\\u0002\\u0002\\u0002\\u0002W\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0002Y\\u0003\\u0002\\u0002\\u0002\\u0002[\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0002]\\u0003\\u0002\\u0002\\u0002\\u0002_\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u0002a\\u0003\\u0002\\u0002\\u0002\\u0002c\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0002e\\u0003\\u0002\\u0002\\u0002\\u0002g\\u0003\\u0002\\u0002\\u0002\\u0002\",\r\n    \"i\\u0003\\u0002\\u0002\\u0002\\u0002k\\u0003\\u0002\\u0002\\u0002\\u0003m\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0005\\u0086\\u0003\\u0002\\u0002\\u0002\\u0007\\u00a4\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\t\\u00a6\\u0003\\u0002\\u0002\\u0002\\u000b\\u00af\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\r\\u00b1\\u0003\\u0002\\u0002\\u0002\\u000f\\u00b8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0011\\u00c3\\u0003\\u0002\\u0002\\u0002\\u0013\\u00c8\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0015\\u00e0\\u0003\\u0002\\u0002\\u0002\\u0017\\u00f6\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0019\\u0105\\u0003\\u0002\\u0002\\u0002\\u001b\\u010e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u001d\\u0123\\u0003\\u0002\\u0002\\u0002\\u001f\\u0130\\u0003\",\r\n    \"\\u0002\\u0002\\u0002!\\u0134\\u0003\\u0002\\u0002\\u0002#\\u0149\\u0003\\u0002\",\r\n    \"\\u0002\\u0002%\\u015c\\u0003\\u0002\\u0002\\u0002\\'\\u0165\\u0003\\u0002\\u0002\",\r\n    \"\\u0002)\\u0182\\u0003\\u0002\\u0002\\u0002+\\u019f\\u0003\\u0002\\u0002\\u0002\",\r\n    \"-\\u01af\\u0003\\u0002\\u0002\\u0002/\\u01b1\\u0003\\u0002\\u0002\\u00021\\u01b3\",\r\n    \"\\u0003\\u0002\\u0002\\u00023\\u01b5\\u0003\\u0002\\u0002\\u00025\\u01c4\\u0003\",\r\n    \"\\u0002\\u0002\\u00027\\u01ce\\u0003\\u0002\\u0002\\u00029\\u01d9\\u0003\\u0002\",\r\n    \"\\u0002\\u0002;\\u01e8\\u0003\\u0002\\u0002\\u0002=\\u01ec\\u0003\\u0002\\u0002\",\r\n    \"\\u0002?\\u01f5\\u0003\\u0002\\u0002\\u0002A\\u01fe\\u0003\\u0002\\u0002\\u0002\",\r\n    \"C\\u0203\\u0003\\u0002\\u0002\\u0002E\\u0208\\u0003\\u0002\\u0002\\u0002G\\u020e\",\r\n    \"\\u0003\\u0002\\u0002\\u0002I\\u0212\\u0003\\u0002\\u0002\\u0002K\\u021d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002M\\u0223\\u0003\\u0002\\u0002\\u0002O\\u022b\\u0003\\u0002\",\r\n    \"\\u0002\\u0002Q\\u022e\\u0003\\u0002\\u0002\\u0002S\\u0231\\u0003\\u0002\\u0002\",\r\n    \"\\u0002U\\u0234\\u0003\\u0002\\u0002\\u0002W\\u0246\\u0003\\u0002\\u0002\\u0002\",\r\n    \"Y\\u0248\\u0003\\u0002\\u0002\\u0002[\\u0250\\u0003\\u0002\\u0002\\u0002]\\u0257\",\r\n    \"\\u0003\\u0002\\u0002\\u0002_\\u025b\\u0003\\u0002\\u0002\\u0002a\\u0260\\u0003\",\r\n    \"\\u0002\\u0002\\u0002c\\u0268\\u0003\\u0002\\u0002\\u0002e\\u0271\\u0003\\u0002\",\r\n    \"\\u0002\\u0002g\\u0276\\u0003\\u0002\\u0002\\u0002i\\u027d\\u0003\\u0002\\u0002\",\r\n    \"\\u0002k\\u0281\\u0003\\u0002\\u0002\\u0002mn\\u0007k\\u0002\\u0002no\\u0007p\",\r\n    \"\\u0002\\u0002op\\u0007\\\"\\u0002\\u0002pq\\u0007v\\u0002\\u0002qr\\u0007j\\u0002\",\r\n    \"\\u0002rs\\u0007g\\u0002\\u0002st\\u0007\\\"\\u0002\\u0002tu\\u0007h\\u0002\\u0002\",\r\n    \"uv\\u0007q\\u0002\\u0002vw\\u0007n\\u0002\\u0002wx\\u0007n\\u0002\\u0002xy\\u0007\",\r\n    \"q\\u0002\\u0002yz\\u0007y\\u0002\\u0002z{\\u0007k\\u0002\\u0002{|\\u0007p\\u0002\",\r\n    \"\\u0002|}\\u0007i\\u0002\\u0002}~\\u0007\\\"\\u0002\\u0002~\\u007f\\u0007u\\u0002\",\r\n    \"\\u0002\\u007f\\u0080\\u0007v\\u0002\\u0002\\u0080\\u0081\\u0007c\\u0002\\u0002\",\r\n    \"\\u0081\\u0082\\u0007v\\u0002\\u0002\\u0082\\u0083\\u0007g\\u0002\\u0002\\u0083\",\r\n    \"\\u0084\\u0007u\\u0002\\u0002\\u0084\\u0085\\u0007<\\u0002\\u0002\\u0085\\u0004\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u0086\\u0087\\u0007K\\u0002\\u0002\\u0087\\u0088\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u0088\\u0089\\u0007c\\u0002\\u0002\\u0089\\u008a\\u0007\",\r\n    \"i\\u0002\\u0002\\u008a\\u008b\\u0007t\\u0002\\u0002\\u008b\\u008c\\u0007g\\u0002\",\r\n    \"\\u0002\\u008c\\u008d\\u0007g\\u0002\\u0002\\u008d\\u008e\\u0007\\\"\\u0002\\u0002\",\r\n    \"\\u008e\\u008f\\u0007v\\u0002\\u0002\\u008f\\u0090\\u0007q\\u0002\\u0002\\u0090\",\r\n    \"\\u0091\\u0007\\\"\\u0002\\u0002\\u0091\\u0092\\u0007c\\u0002\\u0002\\u0092\\u0093\",\r\n    \"\\u0007w\\u0002\\u0002\\u0093\\u0094\\u0007v\\u0002\\u0002\\u0094\\u0095\\u0007\",\r\n    \"j\\u0002\\u0002\\u0095\\u0096\\u0007q\\u0002\\u0002\\u0096\\u0097\\u0007t\\u0002\",\r\n    \"\\u0002\\u0097\\u0098\\u0007k\\u0002\\u0002\\u0098\\u0099\\u0007|\\u0002\\u0002\",\r\n    \"\\u0099\\u009a\\u0007g\\u0002\\u0002\\u009a\\u009b\\u0007\\\"\\u0002\\u0002\\u009b\",\r\n    \"\\u009c\\u0007v\\u0002\\u0002\\u009c\\u009d\\u0007q\\u0002\\u0002\\u009d\\u009e\",\r\n    \"\\u0007m\\u0002\\u0002\\u009e\\u009f\\u0007g\\u0002\\u0002\\u009f\\u00a0\\u0007\",\r\n    \"p\\u0002\\u0002\\u00a0\\u00a1\\u0007\\\"\\u0002\\u0002\\u00a1\\u00a2\\u0007k\\u0002\",\r\n    \"\\u0002\\u00a2\\u00a3\\u0007p\\u0002\\u0002\\u00a3\\u0006\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00a4\\u00a5\\u0007.\\u0002\\u0002\\u00a5\\b\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00a6\\u00a7\\u0007w\\u0002\\u0002\\u00a7\\u00a8\\u0007u\\u0002\\u0002\\u00a8\",\r\n    \"\\u00a9\\u0007g\\u0002\\u0002\\u00a9\\u00aa\\u0007t\\u0002\\u0002\\u00aa\\u00ab\",\r\n    \"\\u0007u\\u0002\\u0002\\u00ab\\u00ac\\u0007\\\"\\u0002\\u0002\\u00ac\\u00ad\\u0007\",\r\n    \"k\\u0002\\u0002\\u00ad\\u00ae\\u0007p\\u0002\\u0002\\u00ae\\n\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u00af\\u00b0\\u0007<\\u0002\\u0002\\u00b0\\f\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u00b1\\u00b2\\u0007c\\u0002\\u0002\\u00b2\\u00b3\\u0007p\\u0002\\u0002\\u00b3\",\r\n    \"\\u00b4\\u0007f\\u0002\\u0002\\u00b4\\u00b5\\u0007\\\"\\u0002\\u0002\\u00b5\\u00b6\",\r\n    \"\\u0007q\\u0002\\u0002\\u00b6\\u00b7\\u0007p\\u0002\\u0002\\u00b7\\u000e\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u00b8\\u00b9\\u0007v\\u0002\\u0002\\u00b9\\u00ba\\u0007\",\r\n    \"j\\u0002\\u0002\\u00ba\\u00bb\\u0007g\\u0002\\u0002\\u00bb\\u00bc\\u0007\\\"\\u0002\",\r\n    \"\\u0002\\u00bc\\u00bd\\u0007g\\u0002\\u0002\\u00bd\\u00be\\u0007p\\u0002\\u0002\",\r\n    \"\\u00be\\u00bf\\u0007f\\u0002\\u0002\\u00bf\\u00c0\\u0007\\\"\\u0002\\u0002\\u00c0\",\r\n    \"\\u00c1\\u0007q\\u0002\\u0002\\u00c1\\u00c2\\u0007h\\u0002\\u0002\\u00c2\\u0010\",\r\n    \"\\u0003\\u0002\\u0002\\u0002\\u00c3\\u00c4\\u0007f\\u0002\\u0002\\u00c4\\u00c5\",\r\n    \"\\u0007c\\u0002\\u0002\\u00c5\\u00c6\\u0007v\\u0002\\u0002\\u00c6\\u00c7\\u0007\",\r\n    \"g\\u0002\\u0002\\u00c7\\u0012\\u0003\\u0002\\u0002\\u0002\\u00c8\\u00c9\\u0007\",\r\n    \"c\\u0002\\u0002\\u00c9\\u00ca\\u0007h\\u0002\\u0002\\u00ca\\u00cb\\u0007v\\u0002\",\r\n    \"\\u0002\\u00cb\\u00cc\\u0007g\\u0002\\u0002\\u00cc\\u00cd\\u0007t\\u0002\\u0002\",\r\n    \"\\u00cd\\u00ce\\u0007\\\"\\u0002\\u0002\\u00ce\\u00cf\\u0007e\\u0002\\u0002\\u00cf\",\r\n    \"\\u00d0\\u0007q\\u0002\\u0002\\u00d0\\u00d1\\u0007p\\u0002\\u0002\\u00d1\\u00d2\",\r\n    \"\\u0007v\\u0002\\u0002\\u00d2\\u00d3\\u0007t\\u0002\\u0002\\u00d3\\u00d4\\u0007\",\r\n    \"c\\u0002\\u0002\\u00d4\\u00d5\\u0007e\\u0002\\u0002\\u00d5\\u00d6\\u0007v\\u0002\",\r\n    \"\\u0002\\u00d6\\u00d7\\u0007\\\"\\u0002\\u0002\\u00d7\\u00d8\\u0007e\\u0002\\u0002\",\r\n    \"\\u00d8\\u00d9\\u0007t\\u0002\\u0002\\u00d9\\u00da\\u0007g\\u0002\\u0002\\u00da\",\r\n    \"\\u00db\\u0007c\\u0002\\u0002\\u00db\\u00dc\\u0007v\\u0002\\u0002\\u00dc\\u00dd\",\r\n    \"\\u0007k\\u0002\\u0002\\u00dd\\u00de\\u0007q\\u0002\\u0002\\u00de\\u00df\\u0007\",\r\n    \"p\\u0002\\u0002\\u00df\\u0014\\u0003\\u0002\\u0002\\u0002\\u00e0\\u00e1\\u0007\",\r\n    \"r\\u0002\\u0002\\u00e1\\u00e2\\u0007t\\u0002\\u0002\\u00e2\\u00e3\\u0007k\\u0002\",\r\n    \"\\u0002\\u00e3\\u00e4\\u0007e\\u0002\\u0002\\u00e4\\u00e5\\u0007g\\u0002\\u0002\",\r\n    \"\\u00e5\\u00e6\\u0007\\\"\\u0002\\u0002\\u00e6\\u00e7\\u0007r\\u0002\\u0002\\u00e7\",\r\n    \"\\u00e8\\u0007t\\u0002\\u0002\\u00e8\\u00e9\\u0007k\\u0002\\u0002\\u00e9\\u00ea\",\r\n    \"\\u0007e\\u0002\\u0002\\u00ea\\u00eb\\u0007g\\u0002\\u0002\\u00eb\\u00ec\\u0007\",\r\n    \"G\\u0002\\u0002\\u00ec\\u00ed\\u0007z\\u0002\\u0002\\u00ed\\u00ee\\u0007r\\u0002\",\r\n    \"\\u0002\\u00ee\\u00ef\\u0007t\\u0002\\u0002\\u00ef\\u00f0\\u0007g\\u0002\\u0002\",\r\n    \"\\u00f0\\u00f1\\u0007u\\u0002\\u0002\\u00f1\\u00f2\\u0007u\\u0002\\u0002\\u00f2\",\r\n    \"\\u00f3\\u0007k\\u0002\\u0002\\u00f3\\u00f4\\u0007q\\u0002\\u0002\\u00f4\\u00f5\",\r\n    \"\\u0007p\\u0002\\u0002\\u00f5\\u0016\\u0003\\u0002\\u0002\\u0002\\u00f6\\u00f7\",\r\n    \"\\u0007v\\u0002\\u0002\\u00f7\\u00f8\\u0007t\\u0002\\u0002\\u00f8\\u00f9\\u0007\",\r\n    \"c\\u0002\\u0002\\u00f9\\u00fa\\u0007p\\u0002\\u0002\\u00fa\\u00fb\\u0007u\\u0002\",\r\n    \"\\u0002\\u00fb\\u00fc\\u0007c\\u0002\\u0002\\u00fc\\u00fd\\u0007e\\u0002\\u0002\",\r\n    \"\\u00fd\\u00fe\\u0007v\\u0002\\u0002\\u00fe\\u00ff\\u0007k\\u0002\\u0002\\u00ff\",\r\n    \"\\u0100\\u0007q\\u0002\\u0002\\u0100\\u0101\\u0007p\\u0002\\u0002\\u0101\\u0102\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u0102\\u0103\\u0007q\\u0002\\u0002\\u0103\\u0104\\u0007\",\r\n    \"h\\u0002\\u0002\\u0104\\u0018\\u0003\\u0002\\u0002\\u0002\\u0105\\u0106\\u0007\",\r\n    \"v\\u0002\\u0002\\u0106\\u0107\\u0007q\\u0002\\u0002\\u0107\\u0108\\u0007\\\"\\u0002\",\r\n    \"\\u0002\\u0108\\u0109\\u0007q\\u0002\\u0002\\u0109\\u010a\\u0007y\\u0002\\u0002\",\r\n    \"\\u010a\\u010b\\u0007p\\u0002\\u0002\\u010b\\u010c\\u0007g\\u0002\\u0002\\u010c\",\r\n    \"\\u010d\\u0007t\\u0002\\u0002\\u010d\\u001a\\u0003\\u0002\\u0002\\u0002\\u010e\",\r\n    \"\\u010f\\u0007e\\u0002\\u0002\\u010f\\u0110\\u0007q\\u0002\\u0002\\u0110\\u0111\",\r\n    \"\\u0007p\\u0002\\u0002\\u0111\\u0112\\u0007v\\u0002\\u0002\\u0112\\u0113\\u0007\",\r\n    \"t\\u0002\\u0002\\u0113\\u0114\\u0007c\\u0002\\u0002\\u0114\\u0115\\u0007e\\u0002\",\r\n    \"\\u0002\\u0115\\u0116\\u0007v\\u0002\\u0002\\u0116\\u0117\\u0007a\\u0002\\u0002\",\r\n    \"\\u0117\\u0118\\u0007i\\u0002\\u0002\\u0118\\u0119\\u0007w\\u0002\\u0002\\u0119\",\r\n    \"\\u011a\\u0007c\\u0002\\u0002\\u011a\\u011b\\u0007t\\u0002\\u0002\\u011b\\u011c\",\r\n    \"\\u0007c\\u0002\\u0002\\u011c\\u011d\\u0007p\\u0002\\u0002\\u011d\\u011e\\u0007\",\r\n    \"v\\u0002\\u0002\\u011e\\u011f\\u0007{\\u0002\\u0002\\u011f\\u0120\\u0007\\\"\\u0002\",\r\n    \"\\u0002\\u0120\\u0121\\u0007q\\u0002\\u0002\\u0121\\u0122\\u0007h\\u0002\\u0002\",\r\n    \"\\u0122\\u001c\\u0003\\u0002\\u0002\\u0002\\u0123\\u0124\\u0007t\\u0002\\u0002\",\r\n    \"\\u0124\\u0125\\u0007g\\u0002\\u0002\\u0125\\u0126\\u0007h\\u0002\\u0002\\u0126\",\r\n    \"\\u0127\\u0007w\\u0002\\u0002\\u0127\\u0128\\u0007p\\u0002\\u0002\\u0128\\u0129\",\r\n    \"\\u0007f\\u0002\\u0002\\u0129\\u012a\\u0007\\\"\\u0002\\u0002\\u012a\\u012b\\u0007\",\r\n    \"c\\u0002\\u0002\\u012b\\u012c\\u0007h\\u0002\\u0002\\u012c\\u012d\\u0007v\\u0002\",\r\n    \"\\u0002\\u012d\\u012e\\u0007g\\u0002\\u0002\\u012e\\u012f\\u0007t\\u0002\\u0002\",\r\n    \"\\u012f\\u001e\\u0003\\u0002\\u0002\\u0002\\u0130\\u0131\\u0007f\\u0002\\u0002\",\r\n    \"\\u0131\\u0132\\u0007c\\u0002\\u0002\\u0132\\u0133\\u0007{\\u0002\\u0002\\u0133\",\r\n    \" \\u0003\\u0002\\u0002\\u0002\\u0134\\u0135\\u0007r\\u0002\\u0002\\u0135\\u0136\",\r\n    \"\\u0007n\\u0002\\u0002\\u0136\\u0137\\u0007c\\u0002\\u0002\\u0137\\u0138\\u0007\",\r\n    \"v\\u0002\\u0002\\u0138\\u0139\\u0007h\\u0002\\u0002\\u0139\\u013a\\u0007q\\u0002\",\r\n    \"\\u0002\\u013a\\u013b\\u0007t\\u0002\\u0002\\u013b\\u013c\\u0007o\\u0002\\u0002\",\r\n    \"\\u013c\\u013d\\u0007a\\u0002\\u0002\\u013d\\u013e\\u0007i\\u0002\\u0002\\u013e\",\r\n    \"\\u013f\\u0007w\\u0002\\u0002\\u013f\\u0140\\u0007c\\u0002\\u0002\\u0140\\u0141\",\r\n    \"\\u0007t\\u0002\\u0002\\u0141\\u0142\\u0007c\\u0002\\u0002\\u0142\\u0143\\u0007\",\r\n    \"p\\u0002\\u0002\\u0143\\u0144\\u0007v\\u0002\\u0002\\u0144\\u0145\\u0007{\\u0002\",\r\n    \"\\u0002\\u0145\\u0146\\u0007\\\"\\u0002\\u0002\\u0146\\u0147\\u0007q\\u0002\\u0002\",\r\n    \"\\u0147\\u0148\\u0007h\\u0002\\u0002\\u0148\\\"\\u0003\\u0002\\u0002\\u0002\\u0149\",\r\n    \"\\u014a\\u0007x\\u0002\\u0002\\u014a\\u014b\\u0007k\\u0002\\u0002\\u014b\\u014c\",\r\n    \"\\u0007u\\u0002\\u0002\\u014c\\u014d\\u0007k\\u0002\\u0002\\u014d\\u014e\\u0007\",\r\n    \"v\\u0002\\u0002\\u014e\\u014f\\u0007a\\u0002\\u0002\\u014f\\u0150\\u0007k\\u0002\",\r\n    \"\\u0002\\u0150\\u0151\\u0007p\\u0002\\u0002\\u0151\\u0152\\u0007e\\u0002\\u0002\",\r\n    \"\\u0152\\u0153\\u0007t\\u0002\\u0002\\u0153\\u0154\\u0007g\\u0002\\u0002\\u0154\",\r\n    \"\\u0155\\u0007o\\u0002\\u0002\\u0155\\u0156\\u0007g\\u0002\\u0002\\u0156\\u0157\",\r\n    \"\\u0007p\\u0002\\u0002\\u0157\\u0158\\u0007v\\u0002\\u0002\\u0158\\u0159\\u0007\",\r\n    \"\\\"\\u0002\\u0002\\u0159\\u015a\\u0007q\\u0002\\u0002\\u015a\\u015b\\u0007h\\u0002\",\r\n    \"\\u0002\\u015b$\\u0003\\u0002\\u0002\\u0002\\u015c\\u015d\\u0007x\\u0002\\u0002\",\r\n    \"\\u015d\\u015e\\u0007k\\u0002\\u0002\\u015e\\u015f\\u0007u\\u0002\\u0002\\u015f\",\r\n    \"\\u0160\\u0007k\\u0002\\u0002\\u0160\\u0161\\u0007v\\u0002\\u0002\\u0161\\u0162\",\r\n    \"\\u0007\\\"\\u0002\\u0002\\u0162\\u0163\\u0007q\\u0002\\u0002\\u0163\\u0164\\u0007\",\r\n    \"h\\u0002\\u0002\\u0164&\\u0003\\u0002\\u0002\\u0002\\u0165\\u0166\\u0007c\\u0002\",\r\n    \"\\u0002\\u0166\\u0167\\u0007e\\u0002\\u0002\\u0167\\u0168\\u0007e\\u0002\\u0002\",\r\n    \"\\u0168\\u0169\\u0007q\\u0002\\u0002\\u0169\\u016a\\u0007w\\u0002\\u0002\\u016a\",\r\n    \"\\u016b\\u0007p\\u0002\\u0002\\u016b\\u016c\\u0007v\\u0002\\u0002\\u016c\\u016d\",\r\n    \"\\u0007a\\u0002\\u0002\\u016d\\u016e\\u0007d\\u0002\\u0002\\u016e\\u016f\\u0007\",\r\n    \"c\\u0002\\u0002\\u016f\\u0170\\u0007n\\u0002\\u0002\\u0170\\u0171\\u0007c\\u0002\",\r\n    \"\\u0002\\u0171\\u0172\\u0007p\\u0002\\u0002\\u0172\\u0173\\u0007e\\u0002\\u0002\",\r\n    \"\\u0173\\u0174\\u0007g\\u0002\\u0002\\u0174\\u0175\\u0007\\\"\\u0002\\u0002\\u0175\",\r\n    \"\\u0176\\u0007i\\u0002\\u0002\\u0176\\u0177\\u0007t\\u0002\\u0002\\u0177\\u0178\",\r\n    \"\\u0007g\\u0002\\u0002\\u0178\\u0179\\u0007c\\u0002\\u0002\\u0179\\u017a\\u0007\",\r\n    \"v\\u0002\\u0002\\u017a\\u017b\\u0007g\\u0002\\u0002\\u017b\\u017c\\u0007t\\u0002\",\r\n    \"\\u0002\\u017c\\u017d\\u0007\\\"\\u0002\\u0002\\u017d\\u017e\\u0007v\\u0002\\u0002\",\r\n    \"\\u017e\\u017f\\u0007j\\u0002\\u0002\\u017f\\u0180\\u0007c\\u0002\\u0002\\u0180\",\r\n    \"\\u0181\\u0007p\\u0002\\u0002\\u0181(\\u0003\\u0002\\u0002\\u0002\\u0182\\u0183\",\r\n    \"\\u0007c\\u0002\\u0002\\u0183\\u0184\\u0007e\\u0002\\u0002\\u0184\\u0185\\u0007\",\r\n    \"e\\u0002\\u0002\\u0185\\u0186\\u0007q\\u0002\\u0002\\u0186\\u0187\\u0007w\\u0002\",\r\n    \"\\u0002\\u0187\\u0188\\u0007p\\u0002\\u0002\\u0188\\u0189\\u0007v\\u0002\\u0002\",\r\n    \"\\u0189\\u018a\\u0007a\\u0002\\u0002\\u018a\\u018b\\u0007d\\u0002\\u0002\\u018b\",\r\n    \"\\u018c\\u0007c\\u0002\\u0002\\u018c\\u018d\\u0007n\\u0002\\u0002\\u018d\\u018e\",\r\n    \"\\u0007c\\u0002\\u0002\\u018e\\u018f\\u0007p\\u0002\\u0002\\u018f\\u0190\\u0007\",\r\n    \"e\\u0002\\u0002\\u0190\\u0191\\u0007g\\u0002\\u0002\\u0191\\u0192\\u0007\\\"\\u0002\",\r\n    \"\\u0002\\u0192\\u0193\\u0007u\\u0002\\u0002\\u0193\\u0194\\u0007o\\u0002\\u0002\",\r\n    \"\\u0194\\u0195\\u0007c\\u0002\\u0002\\u0195\\u0196\\u0007n\\u0002\\u0002\\u0196\",\r\n    \"\\u0197\\u0007n\\u0002\\u0002\\u0197\\u0198\\u0007g\\u0002\\u0002\\u0198\\u0199\",\r\n    \"\\u0007t\\u0002\\u0002\\u0199\\u019a\\u0007\\\"\\u0002\\u0002\\u019a\\u019b\\u0007\",\r\n    \"v\\u0002\\u0002\\u019b\\u019c\\u0007j\\u0002\\u0002\\u019c\\u019d\\u0007c\\u0002\",\r\n    \"\\u0002\\u019d\\u019e\\u0007p\\u0002\\u0002\\u019e*\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u019f\\u01a0\\u0007c\\u0002\\u0002\\u01a0\\u01a1\\u0007e\\u0002\\u0002\\u01a1\",\r\n    \"\\u01a2\\u0007e\\u0002\\u0002\\u01a2\\u01a3\\u0007q\\u0002\\u0002\\u01a3\\u01a4\",\r\n    \"\\u0007w\\u0002\\u0002\\u01a4\\u01a5\\u0007p\\u0002\\u0002\\u01a5\\u01a6\\u0007\",\r\n    \"v\\u0002\\u0002\\u01a6\\u01a7\\u0007a\\u0002\\u0002\\u01a7\\u01a8\\u0007u\\u0002\",\r\n    \"\\u0002\\u01a8\\u01a9\\u0007g\\u0002\\u0002\\u01a9\\u01aa\\u0007v\\u0002\\u0002\",\r\n    \"\\u01aa\\u01ab\\u0007v\\u0002\\u0002\\u01ab\\u01ac\\u0007n\\u0002\\u0002\\u01ac\",\r\n    \"\\u01ad\\u0007g\\u0002\\u0002\\u01ad\\u01ae\\u0007f\\u0002\\u0002\\u01ae,\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u01af\\u01b0\\u00070\\u0002\\u0002\\u01b0.\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01b1\\u01b2\\u0007B\\u0002\\u0002\\u01b20\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01b3\\u01b4\\u0007a\\u0002\\u0002\\u01b42\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01b5\\u01b6\\u0007T\\u0002\\u0002\\u01b6\\u01b7\\u0007g\\u0002\\u0002\\u01b7\",\r\n    \"\\u01b8\\u0007i\\u0002\\u0002\\u01b8\\u01b9\\u0007k\\u0002\\u0002\\u01b9\\u01ba\",\r\n    \"\\u0007u\\u0002\\u0002\\u01ba\\u01bb\\u0007v\\u0002\\u0002\\u01bb\\u01bc\\u0007\",\r\n    \"g\\u0002\\u0002\\u01bc\\u01bd\\u0007t\\u0002\\u0002\\u01bd\\u01be\\u0007g\\u0002\",\r\n    \"\\u0002\\u01be\\u01bf\\u0007f\\u0002\\u0002\\u01bf\\u01c0\\u0007W\\u0002\\u0002\",\r\n    \"\\u01c0\\u01c1\\u0007u\\u0002\\u0002\\u01c1\\u01c2\\u0007g\\u0002\\u0002\\u01c2\",\r\n    \"\\u01c3\\u0007t\\u0002\\u0002\\u01c34\\u0003\\u0002\\u0002\\u0002\\u01c4\\u01c5\",\r\n    \"\\u0007N\\u0002\\u0002\\u01c5\\u01c6\\u0007q\\u0002\\u0002\\u01c6\\u01c7\\u0007\",\r\n    \"i\\u0002\\u0002\\u01c7\\u01c8\\u0007k\\u0002\\u0002\\u01c8\\u01c9\\u0007p\\u0002\",\r\n    \"\\u0002\\u01c9\\u01ca\\u0007W\\u0002\\u0002\\u01ca\\u01cb\\u0007u\\u0002\\u0002\",\r\n    \"\\u01cb\\u01cc\\u0007g\\u0002\\u0002\\u01cc\\u01cd\\u0007t\\u0002\\u0002\\u01cd\",\r\n    \"6\\u0003\\u0002\\u0002\\u0002\\u01ce\\u01cf\\u0007C\\u0002\\u0002\\u01cf\\u01d0\",\r\n    \"\\u0007n\\u0002\\u0002\\u01d0\\u01d1\\u0007n\\u0002\\u0002\\u01d1\\u01d2\\u0007\",\r\n    \"X\\u0002\\u0002\\u01d2\\u01d3\\u0007k\\u0002\\u0002\\u01d3\\u01d4\\u0007u\\u0002\",\r\n    \"\\u0002\\u01d4\\u01d5\\u0007k\\u0002\\u0002\\u01d5\\u01d6\\u0007v\\u0002\\u0002\",\r\n    \"\\u01d6\\u01d7\\u0007g\\u0002\\u0002\\u01d7\\u01d8\\u0007t\\u0002\\u0002\\u01d8\",\r\n    \"8\\u0003\\u0002\\u0002\\u0002\\u01d9\\u01da\\u0007T\\u0002\\u0002\\u01da\\u01db\",\r\n    \"\\u0007g\\u0002\\u0002\\u01db\\u01dc\\u0007i\\u0002\\u0002\\u01dc\\u01dd\\u0007\",\r\n    \"k\\u0002\\u0002\\u01dd\\u01de\\u0007u\\u0002\\u0002\\u01de\\u01df\\u0007v\\u0002\",\r\n    \"\\u0002\\u01df\\u01e0\\u0007g\\u0002\\u0002\\u01e0\\u01e1\\u0007t\\u0002\\u0002\",\r\n    \"\\u01e1\\u01e2\\u0007g\\u0002\\u0002\\u01e2\\u01e3\\u0007f\\u0002\\u0002\\u01e3\",\r\n    \"\\u01e4\\u0007P\\u0002\\u0002\\u01e4\\u01e5\\u0007q\\u0002\\u0002\\u01e5\\u01e6\",\r\n    \"\\u0007f\\u0002\\u0002\\u01e6\\u01e7\\u0007g\\u0002\\u0002\\u01e7:\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01e8\\u01e9\\u0007c\\u0002\\u0002\\u01e9\\u01ea\\u0007p\\u0002\",\r\n    \"\\u0002\\u01ea\\u01eb\\u0007f\\u0002\\u0002\\u01eb<\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u01ec\\u01ed\\u0007k\\u0002\\u0002\\u01ed\\u01ee\\u0007p\\u0002\\u0002\\u01ee\",\r\n    \"\\u01ef\\u0007\\\"\\u0002\\u0002\\u01ef\\u01f0\\u0007v\\u0002\\u0002\\u01f0\\u01f1\",\r\n    \"\\u0007q\\u0002\\u0002\\u01f1\\u01f2\\u0007v\\u0002\\u0002\\u01f2\\u01f3\\u0007\",\r\n    \"c\\u0002\\u0002\\u01f3\\u01f4\\u0007n\\u0002\\u0002\\u01f4>\\u0003\\u0002\\u0002\",\r\n    \"\\u0002\\u01f5\\u01f6\\u0007r\\u0002\\u0002\\u01f6\\u01f7\\u0007g\\u0002\\u0002\",\r\n    \"\\u01f7\\u01f8\\u0007t\\u0002\\u0002\\u01f8\\u01f9\\u0007\\\"\\u0002\\u0002\\u01f9\",\r\n    \"\\u01fa\\u0007x\\u0002\\u0002\\u01fa\\u01fb\\u0007k\\u0002\\u0002\\u01fb\\u01fc\",\r\n    \"\\u0007g\\u0002\\u0002\\u01fc\\u01fd\\u0007y\\u0002\\u0002\\u01fd@\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u01fe\\u01ff\\u0007{\\u0002\\u0002\\u01ff\\u0200\\u0007g\\u0002\",\r\n    \"\\u0002\\u0200\\u0201\\u0007c\\u0002\\u0002\\u0201\\u0202\\u0007t\\u0002\\u0002\",\r\n    \"\\u0202B\\u0003\\u0002\\u0002\\u0002\\u0203\\u0204\\u0007y\\u0002\\u0002\\u0204\",\r\n    \"\\u0205\\u0007g\\u0002\\u0002\\u0205\\u0206\\u0007g\\u0002\\u0002\\u0206\\u0207\",\r\n    \"\\u0007m\\u0002\\u0002\\u0207D\\u0003\\u0002\\u0002\\u0002\\u0208\\u0209\\u0007\",\r\n    \"e\\u0002\\u0002\\u0209\\u020a\\u0007{\\u0002\\u0002\\u020a\\u020b\\u0007e\\u0002\",\r\n    \"\\u0002\\u020b\\u020c\\u0007n\\u0002\\u0002\\u020c\\u020d\\u0007g\\u0002\\u0002\",\r\n    \"\\u020dF\\u0003\\u0002\\u0002\\u0002\\u020e\\u020f\\u0007H\\u0002\\u0002\\u020f\",\r\n    \"\\u0210\\u0007q\\u0002\\u0002\\u0210\\u0211\\u0007t\\u0002\\u0002\\u0211H\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0212\\u0213\\u0007w\\u0002\\u0002\\u0213\\u0214\\u0007\",\r\n    \"u\\u0002\\u0002\\u0214\\u0215\\u0007g\\u0002\\u0002\\u0215\\u0216\\u0007t\\u0002\",\r\n    \"\\u0002\\u0216\\u0217\\u0007i\\u0002\\u0002\\u0217\\u0218\\u0007t\\u0002\\u0002\",\r\n    \"\\u0218\\u0219\\u0007q\\u0002\\u0002\\u0219\\u021a\\u0007w\\u0002\\u0002\\u021a\",\r\n    \"\\u021b\\u0007r\\u0002\\u0002\\u021b\\u021c\\u0007u\\u0002\\u0002\\u021cJ\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u021d\\u021e\\u0007w\\u0002\\u0002\\u021e\\u021f\\u0007\",\r\n    \"u\\u0002\\u0002\\u021f\\u0220\\u0007g\\u0002\\u0002\\u0220\\u0221\\u0007t\\u0002\",\r\n    \"\\u0002\\u0221\\u0222\\u0007u\\u0002\\u0002\\u0222L\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0223\\u0224\\u0007r\\u0002\\u0002\\u0224\\u0225\\u0007t\\u0002\\u0002\\u0225\",\r\n    \"\\u0226\\u0007q\\u0002\\u0002\\u0226\\u0227\\u0007e\\u0002\\u0002\\u0227\\u0228\",\r\n    \"\\u0007g\\u0002\\u0002\\u0228\\u0229\\u0007g\\u0002\\u0002\\u0229\\u022a\\u0007\",\r\n    \"f\\u0002\\u0002\\u022aN\\u0003\\u0002\\u0002\\u0002\\u022b\\u022c\\u0007v\\u0002\",\r\n    \"\\u0002\\u022c\\u022d\\u0007q\\u0002\\u0002\\u022dP\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u022e\\u022f\\u0007k\\u0002\\u0002\\u022f\\u0230\\u0007p\\u0002\\u0002\\u0230\",\r\n    \"R\\u0003\\u0002\\u0002\\u0002\\u0231\\u0232\\u0007q\\u0002\\u0002\\u0232\\u0233\",\r\n    \"\\u0007p\\u0002\\u0002\\u0233T\\u0003\\u0002\\u0002\\u0002\\u0234\\u0235\\u0007\",\r\n    \"c\\u0002\\u0002\\u0235\\u0236\\u0007e\\u0002\\u0002\\u0236\\u0237\\u0007e\\u0002\",\r\n    \"\\u0002\\u0237\\u0238\\u0007g\\u0002\\u0002\\u0238\\u0239\\u0007r\\u0002\\u0002\",\r\n    \"\\u0239\\u023a\\u0007v\\u0002\\u0002\\u023a\\u023b\\u0007k\\u0002\\u0002\\u023b\",\r\n    \"\\u023c\\u0007p\\u0002\\u0002\\u023c\\u023d\\u0007i\\u0002\\u0002\\u023dV\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u023e\\u023f\\u0007u\\u0002\\u0002\\u023f\\u0240\\u0007\",\r\n    \"g\\u0002\\u0002\\u0240\\u0241\\u0007n\\u0002\\u0002\\u0241\\u0247\\u0007h\\u0002\",\r\n    \"\\u0002\\u0242\\u0243\\u0007U\\u0002\\u0002\\u0243\\u0244\\u0007G\\u0002\\u0002\",\r\n    \"\\u0244\\u0245\\u0007N\\u0002\\u0002\\u0245\\u0247\\u0007H\\u0002\\u0002\\u0246\",\r\n    \"\\u023e\\u0003\\u0002\\u0002\\u0002\\u0246\\u0242\\u0003\\u0002\\u0002\\u0002\\u0247\",\r\n    \"X\\u0003\\u0002\\u0002\\u0002\\u0248\\u0249\\u0007n\\u0002\\u0002\\u0249\\u024a\",\r\n    \"\\u0007k\\u0002\\u0002\\u024a\\u024b\\u0007e\\u0002\\u0002\\u024b\\u024c\\u0007\",\r\n    \"g\\u0002\\u0002\\u024c\\u024d\\u0007p\\u0002\\u0002\\u024d\\u024e\\u0007u\\u0002\",\r\n    \"\\u0002\\u024e\\u024f\\u0007g\\u0002\\u0002\\u024fZ\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0250\\u0251\\u0007r\\u0002\\u0002\\u0251\\u0252\\u0007c\\u0002\\u0002\\u0252\",\r\n    \"\\u0253\\u0007{\\u0002\\u0002\\u0253\\u0254\\u0007k\\u0002\\u0002\\u0254\\u0255\",\r\n    \"\\u0007p\\u0002\\u0002\\u0255\\u0256\\u0007i\\u0002\\u0002\\u0256\\\\\\u0003\\u0002\",\r\n    \"\\u0002\\u0002\\u0257\\u0258\\u0007r\\u0002\\u0002\\u0258\\u0259\\u0007g\\u0002\",\r\n    \"\\u0002\\u0259\\u025a\\u0007t\\u0002\\u0002\\u025a^\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u025b\\u025c\\u0007x\\u0002\\u0002\\u025c\\u025d\\u0007k\\u0002\\u0002\\u025d\",\r\n    \"\\u025e\\u0007g\\u0002\\u0002\\u025e\\u025f\\u0007y\\u0002\\u0002\\u025f`\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0260\\u0261\\u0007t\\u0002\\u0002\\u0261\\u0262\\u0007\",\r\n    \"g\\u0002\\u0002\\u0262\\u0263\\u0007s\\u0002\\u0002\\u0263\\u0264\\u0007w\\u0002\",\r\n    \"\\u0002\\u0264\\u0265\\u0007k\\u0002\\u0002\\u0265\\u0266\\u0007t\\u0002\\u0002\",\r\n    \"\\u0266\\u0267\\u0007g\\u0002\\u0002\\u0267b\\u0003\\u0002\\u0002\\u0002\\u0268\",\r\n    \"\\u0269\\u0007p\\u0002\\u0002\\u0269\\u026a\\u0007q\\u0002\\u0002\\u026a\\u026b\",\r\n    \"\\u0007v\\u0002\\u0002\\u026b\\u026c\\u0007j\\u0002\\u0002\\u026c\\u026d\\u0007\",\r\n    \"k\\u0002\\u0002\\u026d\\u026e\\u0007p\\u0002\\u0002\\u026e\\u026f\\u0007i\\u0002\",\r\n    \"\\u0002\\u026fd\\u0003\\u0002\\u0002\\u0002\\u0270\\u0272\\t\\u0002\\u0002\\u0002\",\r\n    \"\\u0271\\u0270\\u0003\\u0002\\u0002\\u0002\\u0272\\u0273\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0273\\u0271\\u0003\\u0002\\u0002\\u0002\\u0273\\u0274\\u0003\\u0002\\u0002\\u0002\",\r\n    \"\\u0274f\\u0003\\u0002\\u0002\\u0002\\u0275\\u0277\\t\\u0003\\u0002\\u0002\\u0276\",\r\n    \"\\u0275\\u0003\\u0002\\u0002\\u0002\\u0277\\u0278\\u0003\\u0002\\u0002\\u0002\\u0278\",\r\n    \"\\u0276\\u0003\\u0002\\u0002\\u0002\\u0278\\u0279\\u0003\\u0002\\u0002\\u0002\\u0279\",\r\n    \"\\u027a\\u0003\\u0002\\u0002\\u0002\\u027a\\u027b\\b4\\u0002\\u0002\\u027bh\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u027c\\u027e\\t\\u0004\\u0002\\u0002\\u027d\\u027c\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u027e\\u027f\\u0003\\u0002\\u0002\\u0002\\u027f\\u027d\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u027f\\u0280\\u0003\\u0002\\u0002\\u0002\\u0280j\\u0003\",\r\n    \"\\u0002\\u0002\\u0002\\u0281\\u0282\\u0005i5\\u0002\\u0282\\u0283\\u0007/\\u0002\",\r\n    \"\\u0002\\u0283\\u0284\\u0005i5\\u0002\\u0284\\u0285\\u0007/\\u0002\\u0002\\u0285\",\r\n    \"\\u0286\\u0005i5\\u0002\\u0286l\\u0003\\u0002\\u0002\\u0002\\b\\u0002\\u0246\\u0271\",\r\n    \"\\u0273\\u0278\\u027f\\u0003\\b\\u0002\\u0002\"].join(\"\");\r\n\r\n\r\nvar atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nvar decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });\r\n\r\nfunction policyLexer(input) {\r\n\tantlr4.Lexer.call(this, input);\r\n    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());\r\n    return this;\r\n}\r\n\r\npolicyLexer.prototype = Object.create(antlr4.Lexer.prototype);\r\npolicyLexer.prototype.constructor = policyLexer;\r\n\r\npolicyLexer.EOF = antlr4.Token.EOF;\r\npolicyLexer.T__0 = 1;\r\npolicyLexer.T__1 = 2;\r\npolicyLexer.T__2 = 3;\r\npolicyLexer.T__3 = 4;\r\npolicyLexer.T__4 = 5;\r\npolicyLexer.T__5 = 6;\r\npolicyLexer.T__6 = 7;\r\npolicyLexer.T__7 = 8;\r\npolicyLexer.T__8 = 9;\r\npolicyLexer.T__9 = 10;\r\npolicyLexer.T__10 = 11;\r\npolicyLexer.T__11 = 12;\r\npolicyLexer.T__12 = 13;\r\npolicyLexer.T__13 = 14;\r\npolicyLexer.T__14 = 15;\r\npolicyLexer.T__15 = 16;\r\npolicyLexer.T__16 = 17;\r\npolicyLexer.T__17 = 18;\r\npolicyLexer.T__18 = 19;\r\npolicyLexer.T__19 = 20;\r\npolicyLexer.T__20 = 21;\r\npolicyLexer.T__21 = 22;\r\npolicyLexer.T__22 = 23;\r\npolicyLexer.T__23 = 24;\r\npolicyLexer.T__24 = 25;\r\npolicyLexer.T__25 = 26;\r\npolicyLexer.T__26 = 27;\r\npolicyLexer.T__27 = 28;\r\npolicyLexer.T__28 = 29;\r\npolicyLexer.T__29 = 30;\r\npolicyLexer.T__30 = 31;\r\npolicyLexer.T__31 = 32;\r\npolicyLexer.T__32 = 33;\r\npolicyLexer.T__33 = 34;\r\npolicyLexer.FOR = 35;\r\npolicyLexer.USERGROUPS = 36;\r\npolicyLexer.USERS = 37;\r\npolicyLexer.PROCEED = 38;\r\npolicyLexer.TO = 39;\r\npolicyLexer.IN = 40;\r\npolicyLexer.ON = 41;\r\npolicyLexer.ACCEPTING = 42;\r\npolicyLexer.SELF = 43;\r\npolicyLexer.LICENSE = 44;\r\npolicyLexer.PAYING = 45;\r\npolicyLexer.PER = 46;\r\npolicyLexer.VIEW = 47;\r\npolicyLexer.REQUIRE = 48;\r\npolicyLexer.NOTHING = 49;\r\npolicyLexer.ID = 50;\r\npolicyLexer.WS = 51;\r\npolicyLexer.INT = 52;\r\npolicyLexer.DATE = 53;\r\n\r\npolicyLexer.prototype.channelNames = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\" ];\r\n\r\npolicyLexer.prototype.modeNames = [ \"DEFAULT_MODE\" ];\r\n\r\npolicyLexer.prototype.literalNames = [ null, \"'in the following states:'\", \r\n                                       \"'I agree to authorize token in'\", \r\n                                       \"','\", \"'users in'\", \"':'\", \"'and on'\", \r\n                                       \"'the end of'\", \"'date'\", \"'after contract creation'\", \r\n                                       \"'price priceExpression'\", \"'transaction of'\", \r\n                                       \"'to owner'\", \"'contract_guaranty of'\", \r\n                                       \"'refund after'\", \"'day'\", \"'platform_guaranty of'\", \r\n                                       \"'visit_increment of'\", \"'visit of'\", \r\n                                       \"'account_balance greater than'\", \r\n                                       \"'account_balance smaller than'\", \r\n                                       \"'account_settled'\", \"'.'\", \"'@'\", \r\n                                       \"'_'\", \"'RegisteredUser'\", \"'LoginUser'\", \r\n                                       \"'AllVisiter'\", \"'RegisteredNode'\", \r\n                                       \"'and'\", \"'in total'\", \"'per view'\", \r\n                                       \"'year'\", \"'week'\", \"'cycle'\", \"'For'\", \r\n                                       \"'usergroups'\", \"'users'\", \"'proceed'\", \r\n                                       \"'to'\", \"'in'\", \"'on'\", \"'accepting'\", \r\n                                       null, \"'license'\", \"'paying'\", \"'per'\", \r\n                                       \"'view'\", \"'require'\", \"'nothing'\" ];\r\n\r\npolicyLexer.prototype.symbolicNames = [ null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, null, null, \r\n                                        null, null, null, null, null, \"FOR\", \r\n                                        \"USERGROUPS\", \"USERS\", \"PROCEED\", \r\n                                        \"TO\", \"IN\", \"ON\", \"ACCEPTING\", \"SELF\", \r\n                                        \"LICENSE\", \"PAYING\", \"PER\", \"VIEW\", \r\n                                        \"REQUIRE\", \"NOTHING\", \"ID\", \"WS\", \r\n                                        \"INT\", \"DATE\" ];\r\n\r\npolicyLexer.prototype.ruleNames = [ \"T__0\", \"T__1\", \"T__2\", \"T__3\", \"T__4\", \r\n                                    \"T__5\", \"T__6\", \"T__7\", \"T__8\", \"T__9\", \r\n                                    \"T__10\", \"T__11\", \"T__12\", \"T__13\", \r\n                                    \"T__14\", \"T__15\", \"T__16\", \"T__17\", \r\n                                    \"T__18\", \"T__19\", \"T__20\", \"T__21\", \r\n                                    \"T__22\", \"T__23\", \"T__24\", \"T__25\", \r\n                                    \"T__26\", \"T__27\", \"T__28\", \"T__29\", \r\n                                    \"T__30\", \"T__31\", \"T__32\", \"T__33\", \r\n                                    \"FOR\", \"USERGROUPS\", \"USERS\", \"PROCEED\", \r\n                                    \"TO\", \"IN\", \"ON\", \"ACCEPTING\", \"SELF\", \r\n                                    \"LICENSE\", \"PAYING\", \"PER\", \"VIEW\", \r\n                                    \"REQUIRE\", \"NOTHING\", \"ID\", \"WS\", \"INT\", \r\n                                    \"DATE\" ];\r\n\r\npolicyLexer.prototype.grammarFileName = \"policy.g4\";\r\n\r\n\r\n\r\nexports.policyLexer = policyLexer;\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/policy_lang/gen/policyLexer.js\n// module id = ucRY\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\n//\n// Specialized {@link Set}{@code <}{@link ATNConfig}{@code >} that can track\n// info about the set, with support for combining similar configurations using a\n// graph-structured stack.\n///\n\nvar ATN = require('./ATN').ATN;\nvar Utils = require('./../Utils');\nvar Hash = Utils.Hash;\nvar Set = Utils.Set;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar merge = require('./../PredictionContext').merge;\n\nfunction hashATNConfig(c) {\n\treturn c.hashCodeForConfigSet();\n}\n\nfunction equalATNConfigs(a, b) {\n\tif ( a===b ) {\n\t\treturn true;\n\t} else if ( a===null || b===null ) {\n\t\treturn false;\n\t} else\n       return a.equalsForConfigSet(b);\n }\n\n\nfunction ATNConfigSet(fullCtx) {\n\t//\n\t// The reason that we need this is because we don't want the hash map to use\n\t// the standard hash code and equals. We need all configurations with the\n\t// same\n\t// {@code (s,i,_,semctx)} to be equal. Unfortunately, this key effectively\n\t// doubles\n\t// the number of objects associated with ATNConfigs. The other solution is\n\t// to\n\t// use a hash table that lets us specify the equals/hashcode operation.\n\t// All configs but hashed by (s, i, _, pi) not including context. Wiped out\n\t// when we go readonly as this set becomes a DFA state.\n\tthis.configLookup = new Set(hashATNConfig, equalATNConfigs);\n\t// Indicates that this configuration set is part of a full context\n\t// LL prediction. It will be used to determine how to merge $. With SLL\n\t// it's a wildcard whereas it is not for LL context merge.\n\tthis.fullCtx = fullCtx === undefined ? true : fullCtx;\n\t// Indicates that the set of configurations is read-only. Do not\n\t// allow any code to manipulate the set; DFA states will point at\n\t// the sets and they must not change. This does not protect the other\n\t// fields; in particular, conflictingAlts is set after\n\t// we've made this readonly.\n\tthis.readOnly = false;\n\t// Track the elements as they are added to the set; supports get(i)///\n\tthis.configs = [];\n\n\t// TODO: these fields make me pretty uncomfortable but nice to pack up info\n\t// together, saves recomputation\n\t// TODO: can we track conflicts as they are added to save scanning configs\n\t// later?\n\tthis.uniqueAlt = 0;\n\tthis.conflictingAlts = null;\n\n\t// Used in parser and lexer. In lexer, it indicates we hit a pred\n\t// while computing a closure operation. Don't make a DFA state from this.\n\tthis.hasSemanticContext = false;\n\tthis.dipsIntoOuterContext = false;\n\n\tthis.cachedHashCode = -1;\n\n\treturn this;\n}\n\n// Adding a new config means merging contexts with existing configs for\n// {@code (s, i, pi, _)}, where {@code s} is the\n// {@link ATNConfig//state}, {@code i} is the {@link ATNConfig//alt}, and\n// {@code pi} is the {@link ATNConfig//semanticContext}. We use\n// {@code (s,i,pi)} as key.\n//\n// <p>This method updates {@link //dipsIntoOuterContext} and\n// {@link //hasSemanticContext} when necessary.</p>\n// /\nATNConfigSet.prototype.add = function(config, mergeCache) {\n\tif (mergeCache === undefined) {\n\t\tmergeCache = null;\n\t}\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tif (config.semanticContext !== SemanticContext.NONE) {\n\t\tthis.hasSemanticContext = true;\n\t}\n\tif (config.reachesIntoOuterContext > 0) {\n\t\tthis.dipsIntoOuterContext = true;\n\t}\n\tvar existing = this.configLookup.add(config);\n\tif (existing === config) {\n\t\tthis.cachedHashCode = -1;\n\t\tthis.configs.push(config); // track order here\n\t\treturn true;\n\t}\n\t// a previous (s,i,pi,_), merge with it and save result\n\tvar rootIsWildcard = !this.fullCtx;\n\tvar merged = merge(existing.context, config.context, rootIsWildcard, mergeCache);\n\t// no need to check for existing.context, config.context in cache\n\t// since only way to create new graphs is \"call rule\" and here. We\n\t// cache at both places.\n\texisting.reachesIntoOuterContext = Math.max( existing.reachesIntoOuterContext, config.reachesIntoOuterContext);\n\t// make sure to preserve the precedence filter suppression during the merge\n\tif (config.precedenceFilterSuppressed) {\n\t\texisting.precedenceFilterSuppressed = true;\n\t}\n\texisting.context = merged; // replace context; no need to alt mapping\n\treturn true;\n};\n\nATNConfigSet.prototype.getStates = function() {\n\tvar states = new Set();\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tstates.add(this.configs[i].state);\n\t}\n\treturn states;\n};\n\nATNConfigSet.prototype.getPredicates = function() {\n\tvar preds = [];\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tvar c = this.configs[i].semanticContext;\n\t\tif (c !== SemanticContext.NONE) {\n\t\t\tpreds.push(c.semanticContext);\n\t\t}\n\t}\n\treturn preds;\n};\n\nObject.defineProperty(ATNConfigSet.prototype, \"items\", {\n\tget : function() {\n\t\treturn this.configs;\n\t}\n});\n\nATNConfigSet.prototype.optimizeConfigs = function(interpreter) {\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tif (this.configLookup.length === 0) {\n\t\treturn;\n\t}\n\tfor (var i = 0; i < this.configs.length; i++) {\n\t\tvar config = this.configs[i];\n\t\tconfig.context = interpreter.getCachedContext(config.context);\n\t}\n};\n\nATNConfigSet.prototype.addAll = function(coll) {\n\tfor (var i = 0; i < coll.length; i++) {\n\t\tthis.add(coll[i]);\n\t}\n\treturn false;\n};\n\nATNConfigSet.prototype.equals = function(other) {\n\treturn this === other ||\n\t\t(other instanceof ATNConfigSet &&\n\t\tUtils.equalArrays(this.configs, other.configs) &&\n\t\tthis.fullCtx === other.fullCtx &&\n\t\tthis.uniqueAlt === other.uniqueAlt &&\n\t\tthis.conflictingAlts === other.conflictingAlts &&\n\t\tthis.hasSemanticContext === other.hasSemanticContext &&\n\t\tthis.dipsIntoOuterContext === other.dipsIntoOuterContext);\n};\n\nATNConfigSet.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n\nATNConfigSet.prototype.updateHashCode = function(hash) {\n\tif (this.readOnly) {\n\t\tif (this.cachedHashCode === -1) {\n            var hash = new Hash();\n            hash.update(this.configs);\n\t\t\tthis.cachedHashCode = hash.finish();\n\t\t}\n        hash.update(this.cachedHashCode);\n\t} else {\n        hash.update(this.configs);\n\t}\n};\n\n\nObject.defineProperty(ATNConfigSet.prototype, \"length\", {\n\tget : function() {\n\t\treturn this.configs.length;\n\t}\n});\n\nATNConfigSet.prototype.isEmpty = function() {\n\treturn this.configs.length === 0;\n};\n\nATNConfigSet.prototype.contains = function(item) {\n\tif (this.configLookup === null) {\n\t\tthrow \"This method is not implemented for readonly sets.\";\n\t}\n\treturn this.configLookup.contains(item);\n};\n\nATNConfigSet.prototype.containsFast = function(item) {\n\tif (this.configLookup === null) {\n\t\tthrow \"This method is not implemented for readonly sets.\";\n\t}\n\treturn this.configLookup.containsFast(item);\n};\n\nATNConfigSet.prototype.clear = function() {\n\tif (this.readOnly) {\n\t\tthrow \"This set is readonly\";\n\t}\n\tthis.configs = [];\n\tthis.cachedHashCode = -1;\n\tthis.configLookup = new Set();\n};\n\nATNConfigSet.prototype.setReadonly = function(readOnly) {\n\tthis.readOnly = readOnly;\n\tif (readOnly) {\n\t\tthis.configLookup = null; // can't mod, no need for lookup cache\n\t}\n};\n\nATNConfigSet.prototype.toString = function() {\n\treturn Utils.arrayToString(this.configs) +\n\t\t(this.hasSemanticContext ? \",hasSemanticContext=\" + this.hasSemanticContext : \"\") +\n\t\t(this.uniqueAlt !== ATN.INVALID_ALT_NUMBER ? \",uniqueAlt=\" + this.uniqueAlt : \"\") +\n\t\t(this.conflictingAlts !== null ? \",conflictingAlts=\" + this.conflictingAlts : \"\") +\n\t\t(this.dipsIntoOuterContext ? \",dipsIntoOuterContext\" : \"\");\n};\n\nfunction OrderedATNConfigSet() {\n\tATNConfigSet.call(this);\n\tthis.configLookup = new Set();\n\treturn this;\n}\n\nOrderedATNConfigSet.prototype = Object.create(ATNConfigSet.prototype);\nOrderedATNConfigSet.prototype.constructor = OrderedATNConfigSet;\n\nexports.ATNConfigSet = ATNConfigSet;\nexports.OrderedATNConfigSet = OrderedATNConfigSet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNConfigSet.js\n// module id = wMEt\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n// A tree structure used to record the semantic context in which\n//  an ATN configuration is valid.  It's either a single predicate,\n//  a conjunction {@code p1&&p2}, or a sum of products {@code p1||p2}.\n//\n//  <p>I have scoped the {@link AND}, {@link OR}, and {@link Predicate} subclasses of\n//  {@link SemanticContext} within the scope of this outer class.</p>\n//\n\nvar Set = require('./../Utils').Set;\nvar Hash = require('./../Utils').Hash;\n\nfunction SemanticContext() {\n\treturn this;\n}\n\nSemanticContext.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n// For context independent predicates, we evaluate them without a local\n// context (i.e., null context). That way, we can evaluate them without\n// having to create proper rule-specific context during prediction (as\n// opposed to the parser, which creates them naturally). In a practical\n// sense, this avoids a cast exception from RuleContext to myruleContext.\n//\n// <p>For context dependent predicates, we must pass in a local context so that\n// references such as $arg evaluate properly as _localctx.arg. We only\n// capture context dependent predicates in the context in which we begin\n// prediction, so we passed in the outer context here in case of context\n// dependent predicate evaluation.</p>\n//\nSemanticContext.prototype.evaluate = function(parser, outerContext) {\n};\n\n//\n// Evaluate the precedence predicates for the context and reduce the result.\n//\n// @param parser The parser instance.\n// @param outerContext The current parser context object.\n// @return The simplified semantic context after precedence predicates are\n// evaluated, which will be one of the following values.\n// <ul>\n// <li>{@link //NONE}: if the predicate simplifies to {@code true} after\n// precedence predicates are evaluated.</li>\n// <li>{@code null}: if the predicate simplifies to {@code false} after\n// precedence predicates are evaluated.</li>\n// <li>{@code this}: if the semantic context is not changed as a result of\n// precedence predicate evaluation.</li>\n// <li>A non-{@code null} {@link SemanticContext}: the new simplified\n// semantic context after precedence predicates are evaluated.</li>\n// </ul>\n//\nSemanticContext.prototype.evalPrecedence = function(parser, outerContext) {\n\treturn this;\n};\n\nSemanticContext.andContext = function(a, b) {\n\tif (a === null || a === SemanticContext.NONE) {\n\t\treturn b;\n\t}\n\tif (b === null || b === SemanticContext.NONE) {\n\t\treturn a;\n\t}\n\tvar result = new AND(a, b);\n\tif (result.opnds.length === 1) {\n\t\treturn result.opnds[0];\n\t} else {\n\t\treturn result;\n\t}\n};\n\nSemanticContext.orContext = function(a, b) {\n\tif (a === null) {\n\t\treturn b;\n\t}\n\tif (b === null) {\n\t\treturn a;\n\t}\n\tif (a === SemanticContext.NONE || b === SemanticContext.NONE) {\n\t\treturn SemanticContext.NONE;\n\t}\n\tvar result = new OR(a, b);\n\tif (result.opnds.length === 1) {\n\t\treturn result.opnds[0];\n\t} else {\n\t\treturn result;\n\t}\n};\n\nfunction Predicate(ruleIndex, predIndex, isCtxDependent) {\n\tSemanticContext.call(this);\n\tthis.ruleIndex = ruleIndex === undefined ? -1 : ruleIndex;\n\tthis.predIndex = predIndex === undefined ? -1 : predIndex;\n\tthis.isCtxDependent = isCtxDependent === undefined ? false : isCtxDependent; // e.g., $i ref in pred\n\treturn this;\n}\n\nPredicate.prototype = Object.create(SemanticContext.prototype);\nPredicate.prototype.constructor = Predicate;\n\n//The default {@link SemanticContext}, which is semantically equivalent to\n//a predicate of the form {@code {true}?}.\n//\nSemanticContext.NONE = new Predicate();\n\n\nPredicate.prototype.evaluate = function(parser, outerContext) {\n\tvar localctx = this.isCtxDependent ? outerContext : null;\n\treturn parser.sempred(localctx, this.ruleIndex, this.predIndex);\n};\n\nPredicate.prototype.updateHashCode = function(hash) {\n\thash.update(this.ruleIndex, this.predIndex, this.isCtxDependent);\n};\n\nPredicate.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof Predicate)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.ruleIndex === other.ruleIndex &&\n\t\t\t\tthis.predIndex === other.predIndex &&\n\t\t\t\tthis.isCtxDependent === other.isCtxDependent;\n\t}\n};\n\nPredicate.prototype.toString = function() {\n\treturn \"{\" + this.ruleIndex + \":\" + this.predIndex + \"}?\";\n};\n\nfunction PrecedencePredicate(precedence) {\n\tSemanticContext.call(this);\n\tthis.precedence = precedence === undefined ? 0 : precedence;\n}\n\nPrecedencePredicate.prototype = Object.create(SemanticContext.prototype);\nPrecedencePredicate.prototype.constructor = PrecedencePredicate;\n\nPrecedencePredicate.prototype.evaluate = function(parser, outerContext) {\n\treturn parser.precpred(outerContext, this.precedence);\n};\n\nPrecedencePredicate.prototype.evalPrecedence = function(parser, outerContext) {\n\tif (parser.precpred(outerContext, this.precedence)) {\n\t\treturn SemanticContext.NONE;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nPrecedencePredicate.prototype.compareTo = function(other) {\n\treturn this.precedence - other.precedence;\n};\n\nPrecedencePredicate.prototype.updateHashCode = function(hash) {\n    hash.update(31);\n};\n\nPrecedencePredicate.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof PrecedencePredicate)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.precedence === other.precedence;\n\t}\n};\n\nPrecedencePredicate.prototype.toString = function() {\n\treturn \"{\"+this.precedence+\">=prec}?\";\n};\n\n\n\nPrecedencePredicate.filterPrecedencePredicates = function(set) {\n\tvar result = [];\n\tset.values().map( function(context) {\n\t\tif (context instanceof PrecedencePredicate) {\n\t\t\tresult.push(context);\n\t\t}\n\t});\n\treturn result;\n};\n\n\n// A semantic context which is true whenever none of the contained contexts\n// is false.\n//\nfunction AND(a, b) {\n\tSemanticContext.call(this);\n\tvar operands = new Set();\n\tif (a instanceof AND) {\n\t\ta.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(a);\n\t}\n\tif (b instanceof AND) {\n\t\tb.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(b);\n\t}\n\tvar precedencePredicates = PrecedencePredicate.filterPrecedencePredicates(operands);\n\tif (precedencePredicates.length > 0) {\n\t\t// interested in the transition with the lowest precedence\n\t\tvar reduced = null;\n\t\tprecedencePredicates.map( function(p) {\n\t\t\tif(reduced===null || p.precedence<reduced.precedence) {\n\t\t\t\treduced = p;\n\t\t\t}\n\t\t});\n\t\toperands.add(reduced);\n\t}\n\tthis.opnds = operands.values();\n\treturn this;\n}\n\nAND.prototype = Object.create(SemanticContext.prototype);\nAND.prototype.constructor = AND;\n\nAND.prototype.equals = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof AND)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.opnds === other.opnds;\n\t}\n};\n\nAND.prototype.updateHashCode = function(hash) {\n    hash.update(this.opnds, \"AND\");\n};\n//\n// {@inheritDoc}\n//\n// <p>\n// The evaluation of predicates by this context is short-circuiting, but\n// unordered.</p>\n//\nAND.prototype.evaluate = function(parser, outerContext) {\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tif (!this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n\nAND.prototype.evalPrecedence = function(parser, outerContext) {\n\tvar differs = false;\n\tvar operands = [];\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tvar context = this.opnds[i];\n\t\tvar evaluated = context.evalPrecedence(parser, outerContext);\n\t\tdiffers |= (evaluated !== context);\n\t\tif (evaluated === null) {\n\t\t\t// The AND context is false if any element is false\n\t\t\treturn null;\n\t\t} else if (evaluated !== SemanticContext.NONE) {\n\t\t\t// Reduce the result by skipping true elements\n\t\t\toperands.push(evaluated);\n\t\t}\n\t}\n\tif (!differs) {\n\t\treturn this;\n\t}\n\tif (operands.length === 0) {\n\t\t// all elements were true, so the AND context is true\n\t\treturn SemanticContext.NONE;\n\t}\n\tvar result = null;\n\toperands.map(function(o) {\n\t\tresult = result === null ? o : SemanticContext.andContext(result, o);\n\t});\n\treturn result;\n};\n\nAND.prototype.toString = function() {\n\tvar s = \"\";\n\tthis.opnds.map(function(o) {\n\t\ts += \"&& \" + o.toString();\n\t});\n\treturn s.length > 3 ? s.slice(3) : s;\n};\n\n//\n// A semantic context which is true whenever at least one of the contained\n// contexts is true.\n//\nfunction OR(a, b) {\n\tSemanticContext.call(this);\n\tvar operands = new Set();\n\tif (a instanceof OR) {\n\t\ta.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(a);\n\t}\n\tif (b instanceof OR) {\n\t\tb.opnds.map(function(o) {\n\t\t\toperands.add(o);\n\t\t});\n\t} else {\n\t\toperands.add(b);\n\t}\n\n\tvar precedencePredicates = PrecedencePredicate.filterPrecedencePredicates(operands);\n\tif (precedencePredicates.length > 0) {\n\t\t// interested in the transition with the highest precedence\n\t\tvar s = precedencePredicates.sort(function(a, b) {\n\t\t\treturn a.compareTo(b);\n\t\t});\n\t\tvar reduced = s[s.length-1];\n\t\toperands.add(reduced);\n\t}\n\tthis.opnds = operands.values();\n\treturn this;\n}\n\nOR.prototype = Object.create(SemanticContext.prototype);\nOR.prototype.constructor = OR;\n\nOR.prototype.constructor = function(other) {\n\tif (this === other) {\n\t\treturn true;\n\t} else if (!(other instanceof OR)) {\n\t\treturn false;\n\t} else {\n\t\treturn this.opnds === other.opnds;\n\t}\n};\n\nOR.prototype.updateHashCode = function(hash) {\n    hash.update(this.opnds, \"OR\");\n};\n\n// <p>\n// The evaluation of predicates by this context is short-circuiting, but\n// unordered.</p>\n//\nOR.prototype.evaluate = function(parser, outerContext) {\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tif (this.opnds[i].evaluate(parser, outerContext)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\nOR.prototype.evalPrecedence = function(parser, outerContext) {\n\tvar differs = false;\n\tvar operands = [];\n\tfor (var i = 0; i < this.opnds.length; i++) {\n\t\tvar context = this.opnds[i];\n\t\tvar evaluated = context.evalPrecedence(parser, outerContext);\n\t\tdiffers |= (evaluated !== context);\n\t\tif (evaluated === SemanticContext.NONE) {\n\t\t\t// The OR context is true if any element is true\n\t\t\treturn SemanticContext.NONE;\n\t\t} else if (evaluated !== null) {\n\t\t\t// Reduce the result by skipping false elements\n\t\t\toperands.push(evaluated);\n\t\t}\n\t}\n\tif (!differs) {\n\t\treturn this;\n\t}\n\tif (operands.length === 0) {\n\t\t// all elements were false, so the OR context is false\n\t\treturn null;\n\t}\n\tvar result = null;\n\toperands.map(function(o) {\n\t\treturn result === null ? o : SemanticContext.orContext(result, o);\n\t});\n\treturn result;\n};\n\nOR.prototype.toString = function() {\n\tvar s = \"\";\n\tthis.opnds.map(function(o) {\n\t\ts += \"|| \" + o.toString();\n\t});\n\treturn s.length > 3 ? s.slice(3) : s;\n};\n\nexports.SemanticContext = SemanticContext;\nexports.PrecedencePredicate = PrecedencePredicate;\nexports.Predicate = Predicate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/SemanticContext.js\n// module id = wQJ6\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\n//\n//  This is an InputStream that is loaded from a file all at once\n//  when you construct the object.\n//\nvar InputStream = require('./InputStream').InputStream;\nvar isNodeJs = typeof window === 'undefined' && typeof importScripts === 'undefined';\nvar fs = isNodeJs ? require(\"fs\") : null;\n\nfunction FileStream(fileName, decodeToUnicodeCodePoints) {\n\tvar data = fs.readFileSync(fileName, \"utf8\");\n\tInputStream.call(this, data, decodeToUnicodeCodePoints);\n\tthis.fileName = fileName;\n\treturn this;\n}\n\nFileStream.prototype = Object.create(InputStream.prototype);\nFileStream.prototype.constructor = FileStream;\n\nexports.FileStream = FileStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/FileStream.js\n// module id = wf8X\n// module chunks = 0 1","// removed by extract-text-webpack-plugin\n    if(module.hot) {\n      // 1514363257811\n      var cssReload = require(\"../../../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-hot-loader!./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3d4bd7b7\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/pagebuild/ui-lib/presentables/index.vue\n// module id = wwvQ\n// module chunks = 0 1","// removed by extract-text-webpack-plugin\n    if(module.hot) {\n      // 1514363257806\n      var cssReload = require(\"../../../node_modules/css-hot-loader/hotModuleReplacement.js\")(module.id, {\"fileMap\":\"{fileName}\"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-hot-loader!./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-1bb67677\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/postcss-loader/lib!./node_modules/less-loader/dist/cjs.js!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/toolbar/index.vue\n// module id = xRlz\n// module chunks = 0 1 4","/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n\nexports.RecognitionException = require('./Errors').RecognitionException;\nexports.NoViableAltException = require('./Errors').NoViableAltException;\nexports.LexerNoViableAltException = require('./Errors').LexerNoViableAltException;\nexports.InputMismatchException = require('./Errors').InputMismatchException;\nexports.FailedPredicateException = require('./Errors').FailedPredicateException;\nexports.DiagnosticErrorListener = require('./DiagnosticErrorListener').DiagnosticErrorListener;\nexports.BailErrorStrategy = require('./ErrorStrategy').BailErrorStrategy;\nexports.ErrorListener = require('./ErrorListener').ErrorListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/error/index.js\n// module id = y2Ps\n// module chunks = 0 1","//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n///\n\n// A tuple: (ATN state, predicted alt, syntactic, semantic context).\n//  The syntactic context is a graph-structured stack node whose\n//  path(s) to the root is the rule invocation(s)\n//  chain used to arrive at the state.  The semantic context is\n//  the tree of semantic predicates encountered before reaching\n//  an ATN state.\n///\n\nvar DecisionState = require('./ATNState').DecisionState;\nvar SemanticContext = require('./SemanticContext').SemanticContext;\nvar Hash = require(\"../Utils\").Hash;\n\n\nfunction checkParams(params, isCfg) {\n\tif(params===null) {\n\t\tvar result = { state:null, alt:null, context:null, semanticContext:null };\n\t\tif(isCfg) {\n\t\t\tresult.reachesIntoOuterContext = 0;\n\t\t}\n\t\treturn result;\n\t} else {\n\t\tvar props = {};\n\t\tprops.state = params.state || null;\n\t\tprops.alt = (params.alt === undefined) ? null : params.alt;\n\t\tprops.context = params.context || null;\n\t\tprops.semanticContext = params.semanticContext || null;\n\t\tif(isCfg) {\n\t\t\tprops.reachesIntoOuterContext = params.reachesIntoOuterContext || 0;\n\t\t\tprops.precedenceFilterSuppressed = params.precedenceFilterSuppressed || false;\n\t\t}\n\t\treturn props;\n\t}\n}\n\nfunction ATNConfig(params, config) {\n\tthis.checkContext(params, config);\n\tparams = checkParams(params);\n\tconfig = checkParams(config, true);\n    // The ATN state associated with this configuration///\n    this.state = params.state!==null ? params.state : config.state;\n    // What alt (or lexer rule) is predicted by this configuration///\n    this.alt = params.alt!==null ? params.alt : config.alt;\n    // The stack of invoking states leading to the rule/states associated\n    //  with this config.  We track only those contexts pushed during\n    //  execution of the ATN simulator.\n    this.context = params.context!==null ? params.context : config.context;\n    this.semanticContext = params.semanticContext!==null ? params.semanticContext :\n        (config.semanticContext!==null ? config.semanticContext : SemanticContext.NONE);\n    // We cannot execute predicates dependent upon local context unless\n    // we know for sure we are in the correct context. Because there is\n    // no way to do this efficiently, we simply cannot evaluate\n    // dependent predicates unless we are in the rule that initially\n    // invokes the ATN simulator.\n    //\n    // closure() tracks the depth of how far we dip into the\n    // outer context: depth &gt; 0.  Note that it may not be totally\n    // accurate depth since I don't ever decrement. TODO: make it a boolean then\n    this.reachesIntoOuterContext = config.reachesIntoOuterContext;\n    this.precedenceFilterSuppressed = config.precedenceFilterSuppressed;\n    return this;\n}\n\nATNConfig.prototype.checkContext = function(params, config) {\n\tif((params.context===null || params.context===undefined) &&\n\t\t\t(config===null || config.context===null || config.context===undefined)) {\n\t\tthis.context = null;\n\t}\n};\n\n\nATNConfig.prototype.hashCode = function() {\n    var hash = new Hash();\n    this.updateHashCode(hash);\n    return hash.finish();\n};\n\n\nATNConfig.prototype.updateHashCode = function(hash) {\n    hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext);\n};\n\n// An ATN configuration is equal to another if both have\n//  the same state, they predict the same alternative, and\n//  syntactic/semantic contexts are the same.\n\nATNConfig.prototype.equals = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof ATNConfig)) {\n        return false;\n    } else {\n        return this.state.stateNumber===other.state.stateNumber &&\n            this.alt===other.alt &&\n            (this.context===null ? other.context===null : this.context.equals(other.context)) &&\n            this.semanticContext.equals(other.semanticContext) &&\n            this.precedenceFilterSuppressed===other.precedenceFilterSuppressed;\n    }\n};\n\n\nATNConfig.prototype.hashCodeForConfigSet = function() {\n    var hash = new Hash();\n    hash.update(this.state.stateNumber, this.alt, this.semanticContext);\n    return hash.finish();\n};\n\n\nATNConfig.prototype.equalsForConfigSet = function(other) {\n    if (this === other) {\n        return true;\n    } else if (! (other instanceof ATNConfig)) {\n        return false;\n    } else {\n        return this.state.stateNumber===other.state.stateNumber &&\n            this.alt===other.alt &&\n            this.semanticContext.equals(other.semanticContext);\n    }\n};\n\n\nATNConfig.prototype.toString = function() {\n    return \"(\" + this.state + \",\" + this.alt +\n        (this.context!==null ? \",[\" + this.context.toString() + \"]\" : \"\") +\n        (this.semanticContext !== SemanticContext.NONE ?\n                (\",\" + this.semanticContext.toString())\n                : \"\") +\n        (this.reachesIntoOuterContext>0 ?\n                (\",up=\" + this.reachesIntoOuterContext)\n                : \"\") + \")\";\n};\n\n\nfunction LexerATNConfig(params, config) {\n\tATNConfig.call(this, params, config);\n\n    // This is the backing field for {@link //getLexerActionExecutor}.\n\tvar lexerActionExecutor = params.lexerActionExecutor || null;\n    this.lexerActionExecutor = lexerActionExecutor || (config!==null ? config.lexerActionExecutor : null);\n    this.passedThroughNonGreedyDecision = config!==null ? this.checkNonGreedyDecision(config, this.state) : false;\n    return this;\n}\n\nLexerATNConfig.prototype = Object.create(ATNConfig.prototype);\nLexerATNConfig.prototype.constructor = LexerATNConfig;\n\nLexerATNConfig.prototype.updateHashCode = function(hash) {\n    hash.update(this.state.stateNumber, this.alt, this.context, this.semanticContext, this.passedThroughNonGreedyDecision, this.lexerActionExecutor);\n};\n\nLexerATNConfig.prototype.equals = function(other) {\n    return this === other ||\n            (other instanceof LexerATNConfig &&\n            this.passedThroughNonGreedyDecision == other.passedThroughNonGreedyDecision &&\n            (this.lexerActionExecutor ? this.lexerActionExecutor.equals(other.lexerActionExecutor) : !other.lexerActionExecutor) &&\n            ATNConfig.prototype.equals.call(this, other));\n};\n\nLexerATNConfig.prototype.hashCodeForConfigSet = LexerATNConfig.prototype.hashCode;\n\nLexerATNConfig.prototype.equalsForConfigSet = LexerATNConfig.prototype.equals;\n\n\nLexerATNConfig.prototype.checkNonGreedyDecision = function(source, target) {\n    return source.passedThroughNonGreedyDecision ||\n        (target instanceof DecisionState) && target.nonGreedy;\n};\n\nexports.ATNConfig = ATNConfig;\nexports.LexerATNConfig = LexerATNConfig;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/antlr4/atn/ATNConfig.js\n// module id = yEAX\n// module chunks = 0 1"],"sourceRoot":""}